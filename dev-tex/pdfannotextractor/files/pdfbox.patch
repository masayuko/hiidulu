diff -uNr source.orig/latex/pax/src/PDFAnnotExtractor.java source/latex/pax/src/PDFAnnotExtractor.java
--- source.orig/latex/pax/src/PDFAnnotExtractor.java	2012-04-23 15:22:16.000000000 +0900
+++ source/latex/pax/src/PDFAnnotExtractor.java	2014-10-08 11:07:48.565680544 +0900
@@ -20,18 +20,38 @@
 */
 package pax;
 
-import java.io.*;
-import java.text.*;
-import java.util.*;
-
-import org.pdfbox.cos.*;
-import org.pdfbox.pdfparser.*;
-import org.pdfbox.pdmodel.*;
-import org.pdfbox.pdmodel.common.*;
-import org.pdfbox.pdmodel.interactive.action.*;
-import org.pdfbox.pdmodel.interactive.action.type.*;
-import org.pdfbox.pdmodel.interactive.annotation.*;
-import org.pdfbox.pdmodel.interactive.documentnavigation.destination.*;
+import java.io.BufferedWriter;
+import java.io.File;
+import java.io.FileWriter;
+import java.io.IOException;
+import java.text.DateFormat;
+import java.text.SimpleDateFormat;
+import java.util.Date;
+import java.util.ListIterator;
+import org.apache.pdfbox.pdmodel.PDDocument;
+import org.apache.pdfbox.pdmodel.PDDocumentCatalog;
+import org.apache.pdfbox.pdmodel.PDDocumentInformation;
+import org.apache.pdfbox.pdmodel.PDPage;
+import org.apache.pdfbox.pdmodel.common.PDRectangle;
+import org.apache.pdfbox.cos.COSArray;
+import org.apache.pdfbox.cos.COSBase;
+import org.apache.pdfbox.cos.COSDictionary;
+import org.apache.pdfbox.cos.COSName;
+import org.apache.pdfbox.cos.COSNumber;
+import org.apache.pdfbox.cos.COSString;
+import org.apache.pdfbox.pdmodel.interactive.action.PDAction;
+import org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory;
+import org.apache.pdfbox.pdmodel.interactive.action.PDActionGoTo;
+import org.apache.pdfbox.pdmodel.interactive.action.PDActionRemoteGoTo;
+import org.apache.pdfbox.pdmodel.interactive.action.PDActionURI;
+import org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDDestination;
+import org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDNamedDestination;
+import org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageDestination;
+import org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitDestination;
+import org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitHeightDestination;
+import org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitRectangleDestination;
+import org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitWidthDestination;
+import org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageXYZDestination;
 
 public class PDFAnnotExtractor implements Constants {
 
diff -uNr source.orig/latex/pax/src/StringVisitor.java source/latex/pax/src/StringVisitor.java
--- source.orig/latex/pax/src/StringVisitor.java	2012-04-23 15:22:16.000000000 +0900
+++ source/latex/pax/src/StringVisitor.java	2014-10-08 11:07:48.565680544 +0900
@@ -20,18 +20,32 @@
 */
 package pax;
 
-import java.io.*;
-import java.util.*;
-import org.pdfbox.cos.*;
-import org.pdfbox.exceptions.*;
+import java.io.ByteArrayOutputStream;
+import java.io.FileWriter;
+import java.io.IOException;
+import java.util.Map;
+import java.util.Set;
+import java.util.Iterator;
+import org.apache.pdfbox.cos.COSArray;
+import org.apache.pdfbox.cos.COSBase;
+import org.apache.pdfbox.cos.COSBoolean;
+import org.apache.pdfbox.cos.COSDictionary;
+import org.apache.pdfbox.cos.COSDocument;
+import org.apache.pdfbox.cos.COSFloat;
+import org.apache.pdfbox.cos.COSInteger;
+import org.apache.pdfbox.cos.COSName;
+import org.apache.pdfbox.cos.COSNull;
+import org.apache.pdfbox.cos.COSStream;
+import org.apache.pdfbox.cos.COSString;
+import org.apache.pdfbox.cos.ICOSVisitor;
 
 public class StringVisitor implements ICOSVisitor {
 
-    protected StringBuffer buf;
+    protected StringBuilder buf;
     boolean nodelim;
 
     public StringVisitor() {
-        buf = new StringBuffer();
+        buf = new StringBuilder();
         nodelim = false;
     }
 
@@ -96,7 +110,7 @@
         return buf;
     }
 
-    public Object visitFromArray(COSArray obj) throws COSVisitorException {
+    public Object visitFromArray(COSArray obj) throws IOException {
         buf.append('[');
         nodelim = false;
         for (int i = 0; i < obj.size(); i++) {
@@ -107,10 +121,11 @@
         return buf;
     }
 
-    public Object visitFromDictionary(COSDictionary obj) throws COSVisitorException {
+    public Object visitFromDictionary(COSDictionary obj) throws IOException {
         buf.append("<<");
         nodelim = false;
-        Iterator iter = obj.keyList().iterator();
+        Set<Map.Entry<COSName, COSBase>> set = obj.entrySet();
+        Iterator iter = set.iterator();
         while (iter.hasNext()) {
             COSName key = (COSName)iter.next();
             COSBase value = obj.getDictionaryObject(key);
@@ -122,10 +137,10 @@
         return buf;
     }
 
-    public Object visitFromStream(COSStream obj) throws COSVisitorException {
-        throw new COSVisitorException(new Exception("Unsupported stream object"));
+    public Object visitFromStream(COSStream obj) throws IOException {
+        throw new IOException("Unsupported stream object");
     }
-    public Object visitFromDocument(COSDocument obj) throws COSVisitorException {
-        throw new COSVisitorException(new Exception("Unsupported documetn object"));
+    public Object visitFromDocument(COSDocument obj) throws IOException {
+        throw new IOException("Unsupported documetn object");
     }
 }
