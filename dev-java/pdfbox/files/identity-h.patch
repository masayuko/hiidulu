=== modified file 'src/main/java/org/apache/pdfbox/cos/COSName.java'
--- src/main/java/org/apache/pdfbox/cos/COSName.java	2010-02-20 18:30:41 +0000
+++ src/main/java/org/apache/pdfbox/cos/COSName.java	2010-02-22 10:33:18 +0000
@@ -149,6 +149,10 @@
     /**
     * A common COSName value.
     */
+    public static final COSName CIDSYSTEMINFO = new COSName( "CIDSystemInfo" );
+    /**
+    * A common COSName value.
+    */
     public static final COSName COLORSPACE = new COSName( "ColorSpace" );
     /**
     * A common COSName value.
@@ -383,9 +387,13 @@
     */
     public static final COSName NAME = new COSName( "Name" );
     /**
-    * A common COSName value.
-    */
-    public static final COSName P = new COSName( "P" );
+     * A common COSName value.
+     */
+     public static final COSName ORDERING = new COSName( "Ordering" );
+     /**
+      * A common COSName value.
+      */
+      public static final COSName P = new COSName( "P" );
     /**
     * A common COSName value.
     */
@@ -413,7 +421,11 @@
     /**
      * A common COSName value.
      */
-     public static final COSName R = new COSName( "R" );
+    public static final COSName R = new COSName( "R" );
+     /**
+      * A common COSName value.
+      */
+    public static final COSName REGISTRY = new COSName( "Registry" );
     /**
     * A common COSName value.
     */

=== modified file 'src/main/java/org/apache/pdfbox/encoding/conversion/CMapSubstitution.java'
--- src/main/java/org/apache/pdfbox/encoding/conversion/CMapSubstitution.java	2009-08-10 19:34:46 +0000
+++ src/main/java/org/apache/pdfbox/encoding/conversion/CMapSubstitution.java	2010-02-22 10:33:18 +0000
@@ -63,7 +63,7 @@
         cmapSubstitutions.put( "90pv-RKSJ-H", "90pv-RKSJ-UCS2");
         cmapSubstitutions.put( "UniJIS-UCS2-HW-H", "UniJIS-UCS2-H" );
         cmapSubstitutions.put( "Adobe-Japan1-4", "Adobe-Japan1-UCS2");
-        cmapSubstitutions.put( "Identity-H", "Adobe-Japan1-UCS2");
+//        cmapSubstitutions.put( "Identity-H", "Adobe-Japan1-UCS2");
 
     }
 

=== modified file 'src/main/java/org/apache/pdfbox/pdmodel/font/PDFont.java'
--- src/main/java/org/apache/pdfbox/pdmodel/font/PDFont.java	2010-01-15 20:48:18 +0000
+++ src/main/java/org/apache/pdfbox/pdmodel/font/PDFont.java	2010-02-22 10:33:18 +0000
@@ -20,11 +20,14 @@
 import org.apache.fontbox.afm.FontMetric;
 import org.apache.fontbox.cmap.CMapParser;
 import org.apache.fontbox.cmap.CMap;
+import org.apache.pdfbox.encoding.conversion.EncodingConversionManager;
+import org.apache.pdfbox.encoding.conversion.EncodingConverter;
 
 import org.apache.pdfbox.encoding.AFMEncoding;
 import org.apache.pdfbox.encoding.DictionaryEncoding;
 import org.apache.pdfbox.encoding.Encoding;
 import org.apache.pdfbox.encoding.EncodingManager;
+import org.apache.pdfbox.encoding.conversion.CMapSubstitution;
 
 import org.apache.pdfbox.cos.COSArray;
 import org.apache.pdfbox.cos.COSBase;
@@ -395,6 +398,24 @@
                         if( cmap == null )
                         {
                             String cmapName = encodingName.getName();
+                            if (encodingName.getName().equals( COSName.IDENTITY_H.getName() )) {
+                                COSArray descendantFontArray =
+                                    (COSArray)font.getDictionaryObject( COSName.DESCENDANT_FONTS );
+                                if (descendantFontArray != null) {
+                                    COSDictionary descendantFontDictionary = (COSDictionary)descendantFontArray.getObject( 0 );
+                                    PDFont descendentFont = PDFontFactory.createFont( descendantFontDictionary );
+                                    COSDictionary cidsysteminfo = (COSDictionary)descendentFont.font.getDictionaryObject(COSName.CIDSYSTEMINFO);
+                                    if (cidsysteminfo != null) {
+                                        String ordering = cidsysteminfo.getString(COSName.ORDERING);
+                                        String registry = cidsysteminfo.getString(COSName.REGISTRY);
+                                        
+                                        cmapName = registry + "-" + ordering+"-UCS2";
+                                    }
+                                }
+                            } else {
+                            	cmapName = CMapSubstitution.substituteCMap( cmapName );
+                            }
+                            
                             String resourceRoot = "Resources/cmap/";
                             String resourceName = resourceRoot + cmapName;
                             parseCmap( resourceRoot, ResourceLoader.loadResource( resourceName ), encodingName );
@@ -442,6 +463,19 @@
         {
             retval = cmap.lookup( c, offset, length );
         }
+        
+        COSBase encoding_COS = font.getDictionaryObject(COSName.ENCODING);
+        if ( encoding_COS instanceof COSName ) {
+            EncodingConverter converter = EncodingConversionManager.getConverter(((COSName)encoding_COS).getName());
+            if ( converter != null ) {
+                if ( retval != null )
+                    retval = converter.convertString(retval);
+                else
+                    retval = converter.convertBytes(c, offset, length, cmap);
+                return retval;
+            }
+        }
+        
         //if we havn't found a value yet and
         //we are still on the first byte and
         //there is no cmap or the cmap does not have 2 byte mappings then try to encode

