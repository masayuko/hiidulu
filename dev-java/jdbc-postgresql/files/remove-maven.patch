--- build.xml.orig	2014-04-29 03:17:34.151280615 +0900
+++ build.xml	2014-04-29 03:26:20.415679680 +0900
@@ -15,7 +15,7 @@
   <!ENTITY jarfiles "postgresql.jar">
 ]>
 
-<project name="postgresqlJDBC" default="all" basedir="." xmlns:artifact="antlib:org.apache.maven.artifact.ant">
+<project name="postgresqlJDBC" default="all" basedir=".">
 
   <!-- set global properties for this build -->
   <property name="srcdir"  value="." />
@@ -30,12 +30,7 @@
   <property file="build.local.properties" />
   <property file="build.properties"/>
 
- <!-- define artifacts' name, which follows the convention of Maven -->
-  <property name="maven.jar" value="${jardir}/${maven.artifact.id}-${maven.artifact.version}.jar"/>
-  <property name="maven.javadoc.jar" value="${jardir}/${maven.artifact.id}-${maven.artifact.version}-javadoc.jar"/>
-  <property name="maven.sources.jar" value="${jardir}/${maven.artifact.id}-${maven.artifact.version}-sources.jar"/>
-
-  <patternset id="jdbc.version.src.pattern">
+   <patternset id="jdbc.version.src.pattern">
     <!-- This is the core of the driver.  It is common for all versions. -->
     <include name="${package}/*.java" />
     <include name="${package}/core/**" />
@@ -107,10 +102,6 @@
     <include name="${package}/xa/jdbc4/*.java" if="jdbc4any"/>
   </patternset>
 
-  <artifact:dependencies pathId="dependency.classpath" useScope="test">
-    <dependency groupId="junit" artifactId="junit" version="3.8.2" scope="test"/>
-  </artifact:dependencies>
-
   <target name="check_versions">
     <condition property="jdbc2">
       <or>
@@ -208,9 +199,8 @@
 
 
   <!-- create the jar file -->
-  <target name="jar" depends="compile, artifact-version">
-    <property name="artifact.jar" value="${jardir}/${artifact.version.string}.jar"/>
-    <jar jarfile="${artifact.jar}">
+  <target name="jar" depends="compile">
+    <jar jarfile="${jardir}/postgresql.jar">
       <fileset dir="${builddir}">
         <include name="${package}/**/*.class" />
       </fileset>
@@ -234,7 +224,6 @@
     <fail message="Old driver was detected on classpath or in jre/lib/ext, please remove and try again." if="old.driver.present" />
 
     <javac classpath="${srcdir}" srcdir="${srcdir}" destdir="${builddir}" debug="${debug}" source="${java.specification.version}">
-      <classpath refid="dependency.classpath" />
       <patternset refid="jdbc.version.src.pattern"/>
     </javac>
   </target>
@@ -442,14 +431,13 @@
   <target name="testjar" depends="jar">
     <mkdir dir="${builddir}/tests"/>
     <javac srcdir="${srcdir}" destdir="${builddir}/tests" debug="${debug}" source="${java.specification.version}">
-      <classpath refid="dependency.classpath" />
       <include name="${package}/test/**" />
 
       <exclude name="${package}/test/jdbc4/**" unless="jdbc4tests" />
       <exclude name="${package}/test/ssl/**" unless="jdbc4tests" />
 
       <classpath>
-        <pathelement location="${artifact.jar}"/>
+        <pathelement location="${jardir}/postgresql.jar"/>
       </classpath>
     </javac>
     <jar jarfile="${jardir}/postgresql-tests.jar" basedir="${builddir}/tests"/>
@@ -480,9 +468,8 @@
       <sysproperty key="protocolVersion" value="${protocolVersion}" />
       <sysproperty key="ssltest.properties" value="${ssltest.properties}" />
 
-      <classpath refid="dependency.classpath" />
       <classpath>
-        <pathelement location="${artifact.jar}" />
+        <pathelement location="${jardir}/postgresql.jar" />
         <pathelement location="${jardir}/postgresql-tests.jar" />
         <pathelement path="${java.class.path}" />
       </classpath>
@@ -596,94 +583,4 @@
     </xmlvalidate>
   </target>
 
-  <target name="artifact-version" description="Sets the version string for the jar artifact">
-    <property name="artifact.version.string" value="${maven.artifact.id}-${maven.artifact.version}.${jdbc.version}" />
-    <echo message="Artifact version string: ${artifact.version.string}" />
-  </target>
-
-  <target name="snapshot-version" description="Sets the version string to a snapshot version">
-    <property name="maven.artifact.version.string" value="${maven.artifact.version}-${jdbc.version}-SNAPSHOT" />
-    <echo message="Maven version string: ${maven.artifact.version.string}" />
-  </target>
-
-  <target name="release-version" description="Sets the version string to a release version">
-    <property name="maven.artifact.version.string" value="${maven.artifact.version}-${jdbc.version}" />
-    <echo message="Maven version string: ${maven.artifact.version.string}" />
-  </target>
-
-  <target name="prepare-pom" depends="prepare,check_versions" description="Filters the pom depending on the jdbc version being built">
-    <mkdir dir="${builddir}/pom"/>
-    <!-- Copy the templated pom.xml with version info -->
-    <filter token="maven.group.id" value="${maven.group.id}"/>
-    <filter token="maven.artifact.id" value="${maven.artifact.id}"/>
-    <filter token="maven.artifact.version.string" value="${maven.artifact.version.string}"/>
-    <filter token="maven.artifact.description" value="${maven.artifact.description}"/>
-    <filter token="jdbc.version.upper" value="${jdbc.version.upper}"/>
-    <copy todir="${builddir}/pom" filtering="true" file="src/pom/pom.xml"/>
-  </target>
-
-  <target name="snapshot" depends="maven-jar,snapshot-version,prepare-pom" description="deploy snapshot version to Maven snapshot repository">
-    <artifact:mvn>
-      <artifact:arg value="org.apache.maven.plugins:maven-deploy-plugin:2.6:deploy-file"/>
-      <artifact:arg value="-Durl=${maven.snapshots.repository.url}"/>
-      <artifact:arg value="-DrepositoryId=${maven.snapshots.repository.id}"/>
-      <artifact:arg value="-DpomFile=${builddir}/pom/pom.xml"/>
-      <artifact:arg value="-Dfile=${maven.jar}"/>
-    </artifact:mvn>
-  </target>
-
-  <!-- before this, update project version (both build.xml and pom.xml) from SNAPSHOT to RELEASE -->
-  <target name="release" depends="maven-jar,release-version,prepare-pom" description="deploy release version to Maven staging repository">
-    <!-- sign and deploy the main artifact -->
-    <artifact:mvn>
-      <artifact:arg value="org.apache.maven.plugins:maven-gpg-plugin:1.4:sign-and-deploy-file" />
-      <artifact:arg value="-Durl=${maven.staging.repository.url}" />
-      <artifact:arg value="-DrepositoryId=${maven.staging.repository.id}" />
-      <artifact:arg value="-DpomFile=${builddir}/pom/pom.xml" />
-      <artifact:arg value="-Dfile=${maven.jar}" />
-      <artifact:arg value="-Pgpg" />
-    </artifact:mvn>
-
-    <!-- sign and deploy the sources artifact -->
-    <artifact:mvn>
-      <artifact:arg value="org.apache.maven.plugins:maven-gpg-plugin:1.4:sign-and-deploy-file" />
-      <artifact:arg value="-Durl=${maven.staging.repository.url}" />
-      <artifact:arg value="-DrepositoryId=${maven.staging.repository.id}" />
-      <artifact:arg value="-DpomFile=${builddir}/pom/pom.xml" />
-      <artifact:arg value="-Dfile=${maven.sources.jar}" />
-      <artifact:arg value="-Dclassifier=sources" />
-      <artifact:arg value="-Pgpg" />
-    </artifact:mvn>
-
-    <!-- sign and deploy the javadoc artifact -->
-    <artifact:mvn>
-      <artifact:arg value="org.apache.maven.plugins:maven-gpg-plugin:1.4:sign-and-deploy-file" />
-      <artifact:arg value="-Durl=${maven.staging.repository.url}" />
-      <artifact:arg value="-DrepositoryId=${maven.staging.repository.id}" />
-      <artifact:arg value="-DpomFile=${builddir}/pom/pom.xml" />
-      <artifact:arg value="-Dfile=${maven.javadoc.jar}" />
-      <artifact:arg value="-Dclassifier=javadoc" />
-      <artifact:arg value="-Pgpg" />
-    </artifact:mvn>
-  </target>
-
-  <!-- create jar files for distribution to maven central -->
-  <target name="maven-jar" depends="jar, publicapi">
-    <!-- Copy the built jar into a maven compatible name -->
-    <copy file="${artifact.jar}" tofile="${maven.jar}"/>
-    <!-- Create a jar of the javadoc public api -->
-    <jar jarfile="${maven.javadoc.jar}">
-      <fileset dir="${builddir}/publicapi">
-        <include name="**/*"/>
-      </fileset>
-    </jar>
-    <!-- Create a jar of the source code -->
-    <jar jarfile="${maven.sources.jar}">
-      <fileset dir="${srcdir}">
-        <patternset refid="jdbc.version.src.pattern"/>
-        <include name="META-INF/**/*"/>
-      </fileset>
-    </jar>
-  </target>
-
 </project>
