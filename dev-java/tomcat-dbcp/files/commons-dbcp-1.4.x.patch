diff -uNr commons-dbcp-1.4-src/NOTICE.txt commons-dbcp-1.4.x/NOTICE.txt
--- commons-dbcp-1.4-src/NOTICE.txt	2010-02-08 01:59:20.000000000 +0900
+++ commons-dbcp-1.4.x/NOTICE.txt	2011-02-01 06:19:50.406808000 +0900
@@ -1,5 +1,5 @@
 Apache Commons DBCP
-Copyright 2001-2010 The Apache Software Foundation
+Copyright 2001-2011 The Apache Software Foundation
 
 This product includes software developed by
 The Apache Software Foundation (http://www.apache.org/).
diff -uNr commons-dbcp-1.4-src/RELEASE-NOTES.txt commons-dbcp-1.4.x/RELEASE-NOTES.txt
--- commons-dbcp-1.4-src/RELEASE-NOTES.txt	2010-02-08 01:59:20.000000000 +0900
+++ commons-dbcp-1.4.x/RELEASE-NOTES.txt	2011-03-23 05:46:24.902738000 +0900
@@ -1,143 +1,32 @@
                         
 
-              commons-dbcp-1.3/1.4 RELEASE NOTES
+                    commons-dbcp-1.3.1/1.4.1 RELEASE NOTES
 
-This release includes new features as well as bug fixes and enhancements.  Some bug fixes
-change semantics (e.g. connection close is now idempotent).  The 1.3 and 1.4 releases of DBCP
-are built from the same sources.  Version 1.4 supports JDBC 4, so requires JDK 1.6. 
-Applications running under JDK 1.4-1.5 must use DBCP 1.3. Applications running under JDK 1.6
-should use DBCP 1.4. Other than support for the added methods in JDBC 4, there is nothing new
-or different in DBCP 1.4 vs. DBCP 1.3. The list of changes below since 1.2.2 applies to both
-the 1.3 and 1.4 release.  Other than the issue related to adding JDBC 4 support (DBCP-191), 
-all bug fixes or new features are included in both DBCP 1.3 and 1.4.
+This release includes new features as well as bug fixes and enhancements.  The
+1.3.x and 1.4.x releases of DBCP are built from the same sources.  Version 1.4.x
+supports JDBC 4, so requires JDK 1.6.  Applications running under JDK 1.4-1.5
+must use DBCP 1.3.x. Applications running under JDK 1.6 should use DBCP 1.4.x.
+Other than support for the added methods in JDBC 4, there is nothing new or
+different in DBCP 1.4.x vs. DBCP 1.3.x. The list of changes below since 1.3/1.4
+applies to both the 1.3.1 and 1.4 release.  All bug fixes or new features are
+included in both DBCP 1.3.x and 1.4.x.
 
-Changes since DBCP 1.2.2 include:
+Changes since DBCP 1.3/1.4 include:
 
 New features:
-o  DBCP-204:  Made PoolingConnection pool CallableStatements. When BasicDataSource's 
-        poolPreparedStatements property is true, CallableStatements are now
-        pooled along with PreparedStatements. The maxOpenPreparedStatements
-        property limits the combined number of Callable and Prepared statements
-        that can be in use at a given time. Thanks to Wei Chen. 
-o  DBCP-226:  Added a validationQueryTimeout configuration parameter to BasicDataSource
-        allowing the user to specify a timeout value (in seconds) for connection
-        validation queries. 
-o  DBCP-175:  Added a connectionInitSqls configuration parameter to BasicDataSource
-        allowing the user to specify a collection of SQL statements to execute
-        one time when a physical database connection is first opened. Thanks to Jiri Melichna and Jerome Lacoste. 
-o  DBCP-228:  Added support for pooling managed connections. Thanks to Dain Sundstrom. 
-o  DBCP-230:  Added BasicManagedDataSource, extending BasicDataSource.
-        Also improved extensibility of BasicDataSource by encapsulating
-        methods to create object pool, connection factory and datasource
-        instance previously embedded in createDataSource. Thanks to Dain Sundstrom. 
+o  None
 
 Fixed Bugs:
-o  DBCP-320:  Eliminated poolKeys cache from PerUserPoolDataSource. 
-o  DBCP-321:  Eliminated userKeys LRUMap cache from SharedPoolDataSource. 
-o  DBCP-319:  Made private fields final where possible. Thanks to Sebastian Bazley. 
-o  DBCP-318:  PerUserPoolDataSource.getPooledConnectionAndInfo multi-threading bug. Thanks to Sebastian Bazley. 
-o  DBCP-315:  Remove throws clause from method that does not throw an exception. Thanks to Sebastian Bazley. 
-o  DBCP-313:  Remove code that catches and ignores Exceptions when calling
-        PooledConnection.removeConnectionEventListener(ConnectionEventListener)
-        as the method does not throw any Exceptions. Thanks to Sebastian Bazley. 
-o  DBCP-316:  Remove impossible null check. Thanks to Sebastian Bazley. 
-o  DBCP-303:  Ensure Statement.getGeneratedKeys() works correctly with the CPDS
-        adapter. Thanks to Dave Oxley. 
-o  DBCP-302:  Removed incorrectly advertised ClassNotFoundException from
-        JOCLContentHandler.ConstructorDetails.createObject(). Thanks to Sebastian Bazley. 
-o  DBCP-8:  Handle user password changes for InstanceKeyDataSources. 
-o  DBCP-294:  Added PoolableManagedConnection and PoolableManagedConnectionFactory so that
-        pooled managed connections can unregister themselves from transaction registries,
-        avoiding resource leaks. Thanks to Philippe Mouawad. 
-o  DBCP-212:  PoolableConnectionFactory.makeObject() is no longer synchronized. This
-        provides improved response times when load spikes at the cost of a
-        faster rise in database server load. This change was made as a partial
-        fix for DBCP-212.  The synchronization changes in Commons Pool 1.5 complete
-        the fix for this issue. 
-o  DBCP-242:  Reverted DelegatingConnection close to 1.2.2 version to ensure
-        open statements are closed before the underlying connection is closed. 
-o  DBCP-235:  Refactor DelegatingConnection and ManagedConnection enable overridden
-        equals() and hashcode() to work correctly. 
-o  DBCP-215:  Modified BasicDataSourceFactory to complete initialization of the pool
-        by creating initialSize connections rather than leaving this to lazy
-        initialization when the pool is used. 
-o  DBCP-253:  Eliminated masked _stmt field in descendents of DelegatingStatement. 
-o  DBCP-191:  Modified DBCP sources to support compilation under JDK 1.4-1.6
-        using Ant flags to do conditional compilation. Thanks to Michael Heuer and J. David Beutel. 
-o  DBCP-272:  Added a static initializer to BasicDatasource that calls
-        DriverManager.getDrivers() to force initialization before we ever do
-        anything that might use Class.forName() to load (and register) a JDBC
-        driver. 
-o  DBCP-4:  Eliminated direct System.out calls in AbandonedTrace. 
-o  DBCP-264:  Modified DelegatingStatment close to clear open batches. 
-o  DBCP-255:  Eliminated unused private "parent" field in AbandonedTrace. 
-o  DBCP-273:  Fixed errors handling boolean-valued Reference properties in 
-        InstanceKeyObjectFactory, DriverAdapterCPDS that were causing 
-        testOnBorrow and poolPreparedStatements properties to be incorrectly
-        set when creating objects from javax.naming.Reference instances. Thanks to Mark Lin. 
-o  DBCP-271:  Made private instance fields of AbandonedTrace volatile (parent,
-        createdBy, lastUsed, createdTime) or final (trace). Thanks to Sebastian Bazley. 
-o  DBCP-270:  Narrowed synchronization in AbandonedTrace to resolve an Evictor deadlock. Thanks to Filip Hanik. 
-o  DBCP-218:  Corrected Javadoc to state that getLoginTimeout and setLoginTimeout are
-        NOT supported by BasicDataSource. 
-o  DBCP-221:  BasicDataSource.close() now permanently marks the data source as closed,
-        and no new connections can be obtained from the data source. At close all
-        idle connections are destroyed and the method returns.  As the remaining
-        active connections are closed, they are destroyed. 
-o  DBCP-241:  Eliminated potential sources of NullPointerExceptions in 
-        PoolingConnection. 
-o  DBCP-216:  Improved error recovery and listener cleanup in 
-        KeyedCPDSConnectionFactory. Substituted calls to destroyObject with
-         _pool.invalidateObject on error to ensure pool active count is
-        decremented on error events. Ensured that events from closed or invalid
-        connections are ignored and listeners are cleaned up. Thanks to Marcos Sanz. 
-o  DBCP-245:  Fixed error in SharedPoolDataSource causing incorrect passwords to be 
-        stored under certain conditions. Thanks to Michael Drechsel. 
-o  DBCP-237:  Added exception handler to ensure that PooledConnections are not
-        orphaned when an exception occurs in setUpDefaults or clearWarnings in 
-        IntanceKeyDataSource.getConnection. Thanks to Oliver Matz. 
-o  DBCP-252:  Made getPool synchronized in PoolableConnectionFactory.
-        Fixes inconsistent synchronization accessing _pool. Thanks to FindBugs. 
-o  DBCP-252:  Fixed inconsistent synchronization on _rollbackAfterValidation,
-        _validationQuery and _pool in CPDSConnectionFactory and 
-        KeyedCPDSConnectionFactory by making the first two volatile and making
-        both getter and setter for _pool synchronized. Thanks to FindBugs. 
+o  DBCP-333:  Correctly implemented the fix for DBCP-203 to allow the
+        configuration of the class loader to be used to load the JDBC driver. 
 
 Changes:
-o  DBCP-314:  Renamed variables with duplicate names in different scopes. Thanks to Sebastian Bazley. 
-o  DBCP-312:  Clarified javadoc for BasicDataSource close() method. Thanks to Glen Mazza. 
-o  DBCP-305:  Use an API specific exception for logging abandoned objects to make
-        scanning the logs for these exceptions simpler and to provide a better
-        message that includes the creation time of the abandoned object. Thanks to Christopher Schultz. 
-o  DBCP-203:  Make the class loader used to load the JDBC driver configurable for the
-        BasicDatasource. Thanks to Mark Grand. 
-o  DBCP-289:  Made XADataSource configurable in BasicManagedDataSource. Thanks to Marc Kannegieﬂer. 
-o  DBCP-276:  Added connectionProperties property to DriverAdapterCPDS. 
-o  DBCP-265:  Add a DelegatingDatabaseMetaData to track ResultSets returned from
-        DatabaseMetaData objects. 
-o  DBCP-211:  Added Maven 2 pom.xml. Removed a block of code from TestJOCLed that set
-        the Xerces parser manually. This was to support early JDKs. The 1.3
-        version of DBCP requires JDK 1.4+. 
-o  DBCP-233:  Changed behavior to allow Connection, Statement, PreparedStatement,
-        CallableStatement and ResultSet to be closed multiple times. The first
-        time close is called the resource is closed and any subsequent calls
-        have no effect. This behavior is required as per the JavaDocs for these
-        classes. Also added tests for closing all types multiple times and
-        updated any tests that incorrectly assert that a resource can not be
-        closed more then once.  Fixes DBCP-3, DBCP-5, DBCP-23 and DBCP-134. Thanks to Dain Sundstrom. 
-o  DBCP-11:  Modified PoolingDataSource, PoolingDriver and DelegatingStatement to
-        assure that all returned Statements, PreparedStatements, 
-        CallableStatements and ResultSets are wrapped with a delegating object,
-        which already properly handle the back pointers for Connection and
-        Statement.  Also added tests to to assure that the *same* object used 
-        to create the statement or result set is returned  from either 
-        getConnection() or getStatement(). Thanks to Dain Sundstrom. 
-o  DBCP-143:  SQLNestedException has been deprecated and will be replaced in DBCP 2.0 with
-        SQLException and standard Java exception chaining. 
+o  None
 
  
-For complete information on commons-dbcp, including instructions on how to submit bug reports,
-patches, or suggestions for improvement, see the commons-dbcp website:
+For complete information on commons-dbcp, including instructions on how to
+submit bug reports, patches, or suggestions for improvement, see the
+commons-dbcp website:
 
 http://commons.apache.org/dbcp/
 
diff -uNr commons-dbcp-1.4-src/build-1.3.xml commons-dbcp-1.4.x/build-1.3.xml
--- commons-dbcp-1.4-src/build-1.3.xml	1970-01-01 09:00:00.000000000 +0900
+++ commons-dbcp-1.4.x/build-1.3.xml	2010-01-18 08:08:26.656880000 +0900
@@ -0,0 +1,256 @@
+<!--
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing,
+ * software distributed under the License is distributed on an
+ * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+ * KIND, either express or implied.  See the License for the
+ * specific language governing permissions and limitations
+ * under the License.
+ */
+ -->
+
+<!-- $Id: build.xml 887831 2009-12-07 03:56:29Z psteitz $ -->
+<project name="commons-dbcp" default="test" basedir=".">
+
+   <target name="init">
+      <tstamp/>
+
+      <!-- read properties from the build.properties, if any -->
+      <property name="component-propfile" value="${basedir}/build.properties"/>
+      <property file="${component-propfile}"/>
+
+      <!-- read properties from the commons build.properties, if any -->
+      <property name="commons-propfile" value="${basedir}/../build.properties"/>
+      <property file="${commons-propfile}"/>
+
+      <!-- read properties from the ${user.home}/propfile, if any -->
+      <property name="user-propfile" value="${user.home}/build.properties"/>
+      <property file="${user-propfile}"/>
+
+      <property name="commons-pool.jar" value="${basedir}/../pool/dist/commons-pool.jar"/>
+
+      <!-- command line classpath, if any -->
+      <property name="cp" value=""/>
+
+      <!-- now combine the classpaths -->
+      <property name="classpath" 
+       value="${cp}:${commons-pool.jar}:${junit.jar}:
+        ${naming-common.jar}:${naming-java.jar}:${commons-logging.jar}:
+      	${xerces.jar}:${jta-spec.jar}:${jta-impl.jar}:
+      	${backport-util-concurrent.jar}:${ejb-spec.jar}"/>
+
+      <property name="name" value="commons-dbcp"/>
+      <property name="title" value="Apache Commons Database Pooling Package"/>
+      <property name="version" value="1.3"/>
+      <property name="package" value="org.apache.commons.dbcp.*"/>
+
+      <property name="build.dir" value="${basedir}/build"/>
+      <property name="build.classes.dir" value="${build.dir}/classes"/>
+      <property name="build.test-classes.dir" value="${build.dir}/test-classes"/>
+      <property name="dist.dir" value="${basedir}/dist"/>
+      <property name="dist.jar" value="${dist.dir}/${name}.jar"/>
+
+      <property name="test.entry" value="org.apache.commons.dbcp.TestAll"/>
+      <property name="test.failonerror" value="true" /> 
+      <property name="test.runner" value="junit.textui.TestRunner" /> 
+     
+      <property name="javadoc.dir" value="${dist.dir}/docs/api"/>
+      <property name="javadoc.bottom" value="&lt;small&gt;Copyright &amp;copy; 2001-2009 Apache Software Foundation. Documenation generated ${TODAY}&lt;/small&gt;."/>
+      <property name="javadoc.overview" value="${basedir}/src/java/org/apache/commons/dbcp/overview.html"/>
+
+      <property name="javac.optimize" value="false"/>
+      <property name="javac.debug" value="true"/>
+      <property name="javac.deprecation" value="false"/>
+   	  <property name="javac.source" value="1.4" />
+
+      <available property="jndi.present" classname="javax.naming.Context"/>
+   </target>
+
+   <target name="check_jar">
+   	   <available file="${file}" property="found"/>
+   	   <antcall target="check_message"/>
+   </target>
+
+	<target name="check_message" unless="found">
+        <!-- echo could be replaced with fail if required -->
+        <echo message="Could not find ${file}"/>
+   </target>
+
+   <!-- Check that all the dependencies exist -->
+   <target name="check_depends" depends="init">
+       <echo>Checking dependencies</echo>
+       <antcall target="check_jar">
+           <param name="file" value="${commons-pool.jar}"/>
+       </antcall>
+       <antcall target="check_jar">
+           <param name="file" value="${junit.jar}"/>
+       </antcall>
+       <antcall target="check_jar">
+           <param name="file" value="${naming-common.jar}"/>
+       </antcall>
+       <antcall target="check_jar">
+           <param name="file" value="${naming-java.jar}"/>
+       </antcall>
+       <antcall target="check_jar">
+           <param name="file" value="${commons-logging.jar}"/>
+       </antcall>
+       <antcall target="check_jar">
+           <param name="file" value="${xerces.jar}"/>
+       </antcall>
+       <antcall target="check_jar">
+           <param name="file" value="${jta-spec.jar}"/>
+       </antcall>
+       <antcall target="check_jar">
+           <param name="file" value="${jta-impl.jar}"/>
+       </antcall>
+       <antcall target="check_jar">
+           <param name="file" value="${backport-util-concurrent.jar}"/>
+       </antcall>
+       <antcall target="check_jar">
+           <param name="file" value="${ejb-spec.jar}"/>
+       </antcall>
+   </target>
+
+   <!-- ######################################################### -->
+
+   <target name="clean" depends="init" description="removes generated files">
+      <delete dir="${build.dir}"/>
+      <delete dir="${dist.dir}"/>
+   </target>
+
+   <target name="filter-sources">
+      <echo message="Comment out the jdbc4 additional methods."/>
+      <property name="src.dir" value="${basedir}/src"/>
+      <property name="src.java.dir" value="${src.dir}/java"/>
+      <property name="src.test.dir" value="${src.dir}/test"/>
+
+      <replace dir="${src.java.dir}" token="/* JDBC_4_ANT_KEY_BEGIN */" value="/*"/>
+      <replace dir="${src.java.dir}" token="/* JDBC_4_ANT_KEY_END */" value="*/"/>
+
+      <replace dir="${src.test.dir}" token="/* JDBC_4_ANT_KEY_BEGIN */" value="/*"/>
+      <replace dir="${src.test.dir}" token="/* JDBC_4_ANT_KEY_END */" value="*/"/>
+   </target>
+
+   <target name="prepare" depends="init,filter-sources"/>
+
+   <target name="javadoc" depends="prepare" description="generates javadocs">
+      <mkdir dir="${javadoc.dir}"/>
+      <javadoc packagenames="org.*"
+               sourcepath="${src.java.dir}"
+               classpath="${classpath}"
+               destdir="${javadoc.dir}"
+               windowtitle="${title}"
+               doctitle="${title}"
+               bottom="${javadoc.bottom}"
+               overview="${javadoc.overview}"
+               public="true"
+               version="true"
+               author="true"
+               splitindex="false"
+               nodeprecated="true"
+               nodeprecatedlist="true"
+               notree="true"
+               noindex="false"
+               nohelp="true"
+               nonavbar="false"
+               serialwarn="false">
+          <link href="http://java.sun.com/j2se/1.5.0/docs/api"/>
+          <link href="http://commons.apache.org/pool/apidocs"/>
+      </javadoc>
+   </target>
+
+   <!-- ######################################################### -->
+
+   <target name="compile" depends="check_depends,prepare" description="compiles source files">
+      <mkdir dir="${build.classes.dir}"/>
+      <javac destdir="${build.classes.dir}"
+             srcdir="${src.java.dir}"
+             classpath="${classpath}"
+             debug="${javac.debug}"
+             deprecation="${javac.deprecation}"
+             optimize="${javac.optimize}"
+             source="${javac.source}">
+         <exclude name="org/apache/commons/dbcp/BasicDataSourceFactory.java"
+             unless="jndi.present"/>
+         <exclude name="org/apache/commons/dbcp/datasources/**"
+             unless="jndi.present"/>
+         <exclude name="org/apache/commons/dbcp/cpdsadapter/**"
+             unless="jndi.present"/>
+      </javac>
+   </target>
+   
+   <target name="compile-test" depends="compile">
+      <mkdir dir="${build.test-classes.dir}"/>
+      <javac destdir="${build.test-classes.dir}"
+             srcdir="${src.test.dir}"
+             debug="${javac.debug}"
+             deprecation="${javac.deprecation}"
+             optimize="${javac.optimize}"
+             source="${javac.source}">
+        <classpath>
+          <pathelement location="${build.classes.dir}" /> 
+          <pathelement location="${build.test-classes.dir}" /> 
+          <pathelement path="${classpath}" /> 
+        </classpath>
+      </javac>
+      <copy todir="${build.test-classes.dir}" file="${src.test.dir}/testpool.jocl"/>
+   </target>
+
+   <target name="test" depends="compile-test" description="runs (junit) unit tests">
+      <echo message="${classpath}"/>
+      <mkdir dir="${build.dir}/ant-reports"/>
+      <junit printsummary="true" showoutput="true" fork="yes" haltonfailure="${test.failonerror}">
+        <classpath>
+          <pathelement location="${build.classes.dir}" /> 
+          <pathelement location="${build.test-classes.dir}" /> 
+          <pathelement path="${classpath}" /> 
+        </classpath>
+        <formatter type="plain" usefile="false" />
+        <batchtest todir="${build.dir}/ant-reports">
+          <fileset dir="${src.test.dir}">
+            <include name="**/*Test*.java"/>
+            <!-- Test support files -->
+            <exclude name="**/Tester*.java"/>
+            <!-- Ant JUnit does not handle abstract classes -->
+            <exclude name="**/TestConnectionPool.java"/>
+          </fileset>
+        </batchtest>
+      </junit>
+   </target>
+
+   <target name="build-jar" depends="compile">
+      <mkdir dir="${dist.dir}"/>
+      <jar jarfile="${dist.jar}">
+         <fileset dir="${build.classes.dir}"/>
+         <metainf dir="${basedir}" includes="LICENSE.txt,NOTICE.txt"/>
+         <manifest>
+            <attribute name="Built-By" value="${user.name}"/>
+            <attribute name="Package" value="${package}"/>
+            <attribute name="Extension-Name" value="${name}"/>
+            <attribute name="Specification-Vendor" value="Apache Software Foundation"/>
+            <attribute name="Specification-Title" value="${title}"/>
+            <attribute name="Implementation-Version" value="${version}"/>
+            <attribute name="Implementation-Vendor" value="Apache Software Foundation"/>
+         </manifest>
+      </jar>
+   </target>
+
+   <target name="build" depends="clean,build-jar,javadoc">
+      <copy todir="${dist.dir}" file="${basedir}/LICENSE.txt"/>
+      <copy todir="${dist.dir}" file="${basedir}/NOTICE.txt"/>
+      <copy todir="${dist.dir}" file="${basedir}/README.txt"/>
+   </target>
+
+   <target name="dist" depends="build" description="gump target"/>
+   
+</project>
diff -uNr commons-dbcp-1.4-src/build.properties.sample commons-dbcp-1.4.x/build.properties.sample
--- commons-dbcp-1.4-src/build.properties.sample	2010-02-08 01:59:20.000000000 +0900
+++ commons-dbcp-1.4.x/build.properties.sample	2011-04-28 01:25:42.798371000 +0900
@@ -23,9 +23,9 @@
 # Repository base path
 repository=${user.home}/.m2/repository
 
-# commons-pool.jar - path to commons-pool-1.5.4.jar
-commons-pool.home=${repository}/commons-pool/commons-pool/1.5.4
-commons-pool.jar=${commons-pool.home}/commons-pool-1.5.4.jar
+# commons-pool.jar - path to commons-pool-1.5.6.jar
+commons-pool.home=${repository}/commons-pool/commons-pool/1.5.6
+commons-pool.jar=${commons-pool.home}/commons-pool-1.5.6.jar
 
 # JUnit
 junit.home=${repository}/junit/junit/3.8.2
diff -uNr commons-dbcp-1.4-src/checkstyle.xml commons-dbcp-1.4.x/checkstyle.xml
--- commons-dbcp-1.4-src/checkstyle.xml	2010-02-08 01:59:20.000000000 +0900
+++ commons-dbcp-1.4.x/checkstyle.xml	2010-03-09 12:13:42.023874000 +0900
@@ -15,9 +15,7 @@
  See the License for the specific language governing permissions and
  limitations under the License.
 -->
-<!DOCTYPE module PUBLIC
-    "-//Puppy Crawl//DTD Check Configuration 1.1//EN"
-    "http://www.puppycrawl.com/dtds/configuration_1_1.dtd">
+<!DOCTYPE module PUBLIC "-//Puppy Crawl//DTD Check Configuration 1.1//EN" "http://www.puppycrawl.com/dtds/configuration_1_1.dtd">
 
 <!--
   Checkstyle checks configured for Maven.
diff -uNr commons-dbcp-1.4-src/doap_dbcp.rdf commons-dbcp-1.4.x/doap_dbcp.rdf
--- commons-dbcp-1.4-src/doap_dbcp.rdf	1970-01-01 09:00:00.000000000 +0900
+++ commons-dbcp-1.4.x/doap_dbcp.rdf	2010-02-15 05:53:27.227514000 +0900
@@ -0,0 +1,64 @@
+<?xml version="1.0"?>
+<!--
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing,
+ * software distributed under the License is distributed on an
+ * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+ * KIND, either express or implied.  See the License for the
+ * specific language governing permissions and limitations
+ * under the License.
+ */
+ -->
+<rdf:RDF xmlns="http://usefulinc.com/ns/doap#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:asfext="http://projects.apache.org/ns/asfext#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:doap="http://usefulinc.com/ns/doap#" xml:lang="en">
+  <Project rdf:about="http://commons.apache.org/dbcp/">
+    <name>Apache Commons DBCP</name>
+    <homepage rdf:resource="http://commons.apache.org/dbcp/"/>
+    <programming-language>Java</programming-language>
+    <category rdf:resource="http://projects.apache.org/category/library"/>
+    <license rdf:resource="http://usefulinc.com/doap/licenses/asl20"/>
+    <bug-database rdf:resource="http://issues.apache.org/jira/browse/DBCP"/>
+    <download-page rdf:resource="http://commons.apache.org/downloads/download_dbcp.cgi"/>
+    <asfext:pmc rdf:resource="http://commons.apache.org/"/>
+    <shortdesc xml:lang="en">Commons Database Connection Pooling</shortdesc>
+    <description xml:lang="en">Commons Database Connection Pooling</description>
+    <repository>
+      <SVNRepository>
+        <browse rdf:resource="http://svn.apache.org/repos/asf/commons/proper/dbcp/trunk"/>
+        <location rdf:resource="http://svn.apache.org/repos/asf/commons/proper/dbcp"/>
+      </SVNRepository>
+    </repository>
+    <release>
+      <Version>
+        <name>commons-dbcp</name>
+        <created>2010-02-14</created>
+        <revision>1.3</revision>
+      </Version>
+      <Version>
+        <name>commons-dbcp</name>
+        <created>2010-02-14</created>
+        <revision>1.4</revision>
+      </Version>
+      <Version>
+        <name>commons-dbcp</name>
+        <created>2007-04-04</created>
+        <revision>1.2.2</revision>
+      </Version>
+      <Version>
+        <name>commons-dbcp</name>
+        <created>2004-06-07</created>
+        <revision>1.2.1</revision>
+      </Version>
+    </release>
+    <mailing-list rdf:resource="http://commons.apache.org/mail-lists.html"/>
+  </Project>
+</rdf:RDF>
diff -uNr commons-dbcp-1.4-src/doc/BasicDataSourceExample.java commons-dbcp-1.4.x/doc/BasicDataSourceExample.java
--- commons-dbcp-1.4-src/doc/BasicDataSourceExample.java	2010-02-08 01:59:20.000000000 +0900
+++ commons-dbcp-1.4.x/doc/BasicDataSourceExample.java	2011-04-16 00:00:06.709360000 +0900
@@ -41,14 +41,14 @@
 
 //
 // To compile this example, you'll want:
-//  * commons-pool-1.5.4.jar
-//  * commons-dbcp-1.2.2.jar
+//  * commons-pool-1.5.6.jar
+//  * commons-dbcp-1.3.jar (JDK 1.4-1.5) or commons-dbcp-1.4 (JDK 1.6+)
 //  * j2ee.jar (for the javax.sql classes)
 // in your classpath.
 //
 // To run this example, you'll want:
-//  * commons-pool-1.5.4.jar
-//  * commons-dbcp-1.2.2.jar
+//  * commons-pool-1.5.6.jar
+//  * commons-dbcp-1.3.jar (JDK 1.4-1.5) or commons-dbcp-1.4 (JDK 1.6+)
 //  * j2ee.jar (for the javax.sql classes)
 //  * the classes for your (underlying) JDBC driver
 // in your classpath.
@@ -62,7 +62,7 @@
 //
 // For example:
 //  java -Djdbc.drivers=oracle.jdbc.driver.OracleDriver \
-//       -classpath commons-pool-1.5.3.jar:commons-dbcp-1.2.2.jar:j2ee.jar:oracle-jdbc.jar:. \
+//       -classpath commons-pool-1.5.6.jar:commons-dbcp-1.4.jar:j2ee.jar:oracle-jdbc.jar:. \
 //       ManualPoolingDataSourceExample
 //       "jdbc:oracle:thin:scott/tiger@myhost:1521:mysid"
 //       "SELECT * FROM DUAL"
diff -uNr commons-dbcp-1.4-src/doc/JOCLPoolingDriverExample.java commons-dbcp-1.4.x/doc/JOCLPoolingDriverExample.java
--- commons-dbcp-1.4-src/doc/JOCLPoolingDriverExample.java	2010-02-08 01:59:20.000000000 +0900
+++ commons-dbcp-1.4.x/doc/JOCLPoolingDriverExample.java	2011-04-24 08:04:15.505446000 +0900
@@ -24,7 +24,7 @@
 
 //
 // Here's a simple example of how to use the PoolingDriver.
-// In this example, we'll construct the PoolingDriver implictly
+// In this example, we'll construct the PoolingDriver implicitly
 // using the JOCL configuration mechanism.
 //
 // Note that there is absolutely nothing DBCP specific about
@@ -34,12 +34,12 @@
 //
 
 //
-// To compile this example, you'll need nothing but the JDK (1.2+)
+// To compile this example, you'll need nothing but the JDK
 // in your classpath.
 //
 // To run this example, you'll want:
-//  * commons-pool-1.5.4.jar
-//  * commons-dbcp-1.2.2.jar
+//  * commons-pool-1.5.6.jar
+//  * commons-dbcp-1.3.jar (JDK 1.4-1.5) or commons-dbcp-1.4.jar (JDK 1.6+)
 //  * the classes for your (underlying) JDBC driver
 //  * sax2.jar (the SAX 2 API)
 //  * a SAX2 friendly XML parser (jaxp.jar and parser.jar,
@@ -73,7 +73,7 @@
 // For pooling:
 //
 //  java -Djdbc.drivers=oracle.jdbc.driver.OracleDriver:org.apache.commons.dbcp.PoolingDriver \
-//       -classpath commons-pool-1.5.4.jar:commons-dbcp-1.2.2.jar:oracle-jdbc.jar:jaxp.jar:parser.jar:sax2.jar:. \
+//       -classpath commons-pool-1.5.6.jar:commons-dbcp-1.4.jar:oracle-jdbc.jar:jaxp.jar:parser.jar:sax2.jar:. \
 //       JOCLPoolingDriverExample \
 //       "jdbc:apache:commons:dbcp:/poolingDriverExample" \
 //       "SELECT * FROM DUAL"
diff -uNr commons-dbcp-1.4-src/doc/ManualPoolingDataSourceExample.java commons-dbcp-1.4.x/doc/ManualPoolingDataSourceExample.java
--- commons-dbcp-1.4-src/doc/ManualPoolingDataSourceExample.java	2010-02-08 01:59:20.000000000 +0900
+++ commons-dbcp-1.4.x/doc/ManualPoolingDataSourceExample.java	2011-04-16 00:00:06.709360000 +0900
@@ -38,12 +38,12 @@
 // Here's a simple example of how to use the PoolingDataSource.
 // In this example, we'll construct the PoolingDataSource manually,
 // just to show how the pieces fit together, but you could also
-// configure it using an external conifguration file in
+// configure it using an external configuration file in
 // JOCL format (and eventually Digester).
 //
 
 //
-// Note that this example is very similiar to the PoolingDriver
+// Note that this example is very similar to the PoolingDriver
 // example.  In fact, you could use the same pool in both a
 // PoolingDriver and a PoolingDataSource
 //
@@ -56,8 +56,8 @@
 // in your classpath.
 //
 // To run this example, you'll want:
-//  * commons-pool-1.5.4.jar
-//  * commons-dbcp-1.2.2.jar
+//  * commons-pool-1.5.6.jar
+//  * commons-dbcp-1.3.jar (JDK 1.4-1.5) or commons-dbcp-1.4 (JDK 1.6+)
 //  * j2ee.jar (for the javax.sql classes)
 //  * the classes for your (underlying) JDBC driver
 // in your classpath.
@@ -71,7 +71,7 @@
 //
 // For example:
 //  java -Djdbc.drivers=oracle.jdbc.driver.OracleDriver \
-//       -classpath commons-pool-1.5.4.jar:commons-dbcp-1.2.2.jar:j2ee.jar:oracle-jdbc.jar:. \
+//       -classpath commons-pool-1.5.6.jar:commons-dbcp-1.4.jar:j2ee.jar:oracle-jdbc.jar:. \
 //       ManualPoolingDataSourceExample \
 //       "jdbc:oracle:thin:scott/tiger@myhost:1521:mysid" \
 //       "SELECT * FROM DUAL"
diff -uNr commons-dbcp-1.4-src/doc/ManualPoolingDriverExample.java commons-dbcp-1.4.x/doc/ManualPoolingDriverExample.java
--- commons-dbcp-1.4-src/doc/ManualPoolingDriverExample.java	2010-02-08 01:59:20.000000000 +0900
+++ commons-dbcp-1.4.x/doc/ManualPoolingDriverExample.java	2011-04-16 00:00:06.709360000 +0900
@@ -44,14 +44,14 @@
 
 //
 // To compile this example, you'll want:
-//  * commons-pool-1.5.4.jar
-//  * commons-dbcp-1.2.2.jar
+//  * commons-pool-1.5.6.jar
+//  * commons-dbcp-1.3.jar (JDK 1.4-1.5) or commons-dbcp-1.4 (JDK 1.6+)
 // in your classpath.
 //
 // To run this example, you'll want:
 //  * commons-collections.jar
-//  * commons-pool-1.5.4.jar
-//  * commons-dbcp-1.2.2.jar
+//  * commons-pool-1.5.6.jar
+//  * commons-dbcp-1.3.jar (JDK 1.4-1.5) or commons-dbcp-1.4 (JDK 1.6+)
 //  * the classes for your (underlying) JDBC driver
 // in your classpath.
 //
@@ -64,7 +64,7 @@
 //
 // For example:
 //  java -Djdbc.drivers=oracle.jdbc.driver.OracleDriver \
-//       -classpath commons-pool-1.5.3.jar:commons-dbcp-1.2.2.jar:oracle-jdbc.jar:. \
+//       -classpath commons-pool-1.5.6.jar:commons-dbcp-1.4.jar:oracle-jdbc.jar:. \
 //       ManualPoolingDriverExample \
 //       "jdbc:oracle:thin:scott/tiger@myhost:1521:mysid" \
 //       "SELECT * FROM DUAL"
diff -uNr commons-dbcp-1.4-src/pom-1.3.xml commons-dbcp-1.4.x/pom-1.3.xml
--- commons-dbcp-1.4-src/pom-1.3.xml	1970-01-01 09:00:00.000000000 +0900
+++ commons-dbcp-1.4.x/pom-1.3.xml	2011-04-28 01:25:42.798371000 +0900
@@ -0,0 +1,345 @@
+<?xml version="1.0"?>
+<!--
+   Licensed to the Apache Software Foundation (ASF) under one or more
+   contributor license agreements.  See the NOTICE file distributed with
+   this work for additional information regarding copyright ownership.
+   The ASF licenses this file to You under the Apache License, Version 2.0
+   (the "License"); you may not use this file except in compliance with
+   the License.  You may obtain a copy of the License at
+
+       http://www.apache.org/licenses/LICENSE-2.0
+
+   Unless required by applicable law or agreed to in writing, software
+   distributed under the License is distributed on an "AS IS" BASIS,
+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+   See the License for the specific language governing permissions and
+   limitations under the License.
+-->
+<project
+    xmlns="http://maven.apache.org/POM/4.0.0"
+    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
+  <parent>
+    <groupId>org.apache.commons</groupId>
+    <artifactId>commons-parent</artifactId>
+    <version>15</version>
+  </parent>
+  <modelVersion>4.0.0</modelVersion>
+  <groupId>commons-dbcp</groupId>
+  <artifactId>commons-dbcp</artifactId>
+  <version>1.3</version>
+  <name>Commons DBCP</name>
+
+  <inceptionYear>2001</inceptionYear>
+  <description>Commons Database Connection Pooling</description>
+  <url>http://commons.apache.org/dbcp/</url>
+
+  <distributionManagement>
+    <site>
+      <id>people.apache.org</id>
+      <name>Commons DBCP</name>
+      <url>scp://people.apache.org/www/commons.apache.org/dbcp</url>
+    </site>
+  </distributionManagement>
+  
+  <issueManagement>
+    <system>jira</system>
+    <url>http://issues.apache.org/jira/browse/DBCP</url>
+  </issueManagement>
+
+  <scm>
+    <connection>scm:svn:http://svn.apache.org/repos/asf/commons/proper/dbcp/trunk</connection>
+    <developerConnection>scm:svn:https://svn.apache.org/repos/asf/commons/proper/dbcp/branches/DBCP_1_3_BRANCH</developerConnection>
+    <url>http://svn.apache.org/viewvc/commons/proper/dbcp/branches/DBCP_1_3_BRANCH</url>
+  </scm>
+
+  <developers>
+    <developer>
+      <name>Morgan Delagrange</name>
+      <id>morgand</id>
+      <email></email>
+      <organization></organization>
+    </developer>
+    <developer>
+      <name>Geir Magnusson</name>
+      <id>geirm</id>
+      <email></email>
+      <organization></organization>
+    </developer>
+    <developer>
+      <name>Craig McClanahan</name>
+      <id>craigmcc</id>
+      <email></email>
+      <organization></organization>
+    </developer>
+    <developer>
+      <name>John McNally</name>
+      <id>jmcnally</id>
+      <email></email>
+      <organization></organization>
+    </developer>
+    <developer>
+      <name>Martin Poeschl</name>
+      <id>mpoeschl</id>
+      <email>mpoeschl@marmot.at</email>
+      <organization>tucana.at</organization>
+    </developer>
+    <developer>
+      <name>Rodney Waldhoff</name>
+      <id>rwaldhoff</id>
+      <email></email>
+      <organization></organization>
+    </developer>
+    <developer>
+      <name>David Weinrich</name>
+      <id>dweinr1</id>
+      <email></email>
+      <organization></organization>
+    </developer>
+    <developer>
+      <name>Dirk Verbeeck</name>
+      <id>dirkv</id>
+      <email></email>
+      <organization></organization>
+    </developer>
+    <developer>
+      <name>Yoav Shapira</name>
+      <id>yoavs</id>
+      <email>yoavs@apache.org</email>
+      <organization>Apache Software Foundation</organization>
+    </developer>
+    <developer>
+      <name>Phil Steitz</name>
+      <id>psteitz</id>
+      <email></email>
+      <organization></organization>
+    </developer>
+    <developer>
+      <name>J&#x00f6;rg Schaible</name>
+      <id>joehni</id>
+      <email>joerg.schaible@gmx.de</email>
+      <organization></organization>
+      <timezone>+1</timezone>
+    </developer>
+    <developer>
+      <name>Mark Thomas</name>
+      <id>markt</id>
+      <email>markt@apache.org</email>
+      <organization>Apache Software Foundation</organization>
+    </developer>
+  </developers>
+  <contributors>
+    <contributor>
+      <name>Todd Carmichael</name>
+      <email>toddc@concur.com</email>
+    </contributor>
+    <contributor>
+      <name>Wayne Woodfield</name>
+    </contributor>
+    <contributor>
+      <name>Dain Sundstrom</name>
+      <email>dain@apache.org</email>
+    </contributor>
+    <contributor>
+      <name>Philippe Mouawad</name>
+    </contributor>
+  </contributors>
+
+  <dependencies>
+    <dependency>
+      <groupId>commons-pool</groupId>
+      <artifactId>commons-pool</artifactId>
+      <version>1.5.6</version>
+    </dependency>
+
+    <dependency>
+      <groupId>junit</groupId>
+      <artifactId>junit</artifactId>
+      <version>3.8.2</version>
+      <scope>test</scope>
+    </dependency>
+
+    <!-- For managed connections -->
+    <dependency>
+      <groupId>org.apache.geronimo.specs</groupId>
+      <artifactId>geronimo-jta_1.1_spec</artifactId>
+       <version>1.1</version>
+       <optional>true</optional>
+    </dependency>
+
+    <!-- tomcat naming jars for jndi reference tests -->
+    <dependency>
+      <groupId>tomcat</groupId>
+      <artifactId>naming-common</artifactId>
+      <version>5.0.28</version>
+      <scope>test</scope>
+    </dependency>
+    
+    <dependency>
+      <groupId>tomcat</groupId>
+      <artifactId>naming-java</artifactId>
+      <version>5.0.28</version>
+      <scope>test</scope>
+    </dependency>
+    
+    <!-- dragged in by tomcat-naming jars - only for jndi tests -->
+    <dependency>
+      <groupId>commons-logging</groupId>
+      <artifactId>commons-logging</artifactId>
+       <version>1.1.1</version>
+       <scope>test</scope>
+    </dependency>
+
+    <!-- for testing of managed connections -->
+    <dependency>
+      <groupId>org.apache.geronimo.modules</groupId>
+      <artifactId>geronimo-transaction</artifactId>
+       <version>1.2-beta</version>
+       <scope>test</scope>
+    </dependency>
+
+    <!-- required under jdk 1.4 so jocl can have a sax parser -->
+    <dependency>
+      <groupId>xml-apis</groupId>
+      <artifactId>xml-apis</artifactId>
+      <version>1.3.04</version>
+      <scope>test</scope>
+    </dependency>
+    <dependency>
+      <groupId>xerces</groupId>
+      <artifactId>xercesImpl</artifactId>
+      <version>2.4.0</version>
+      <scope>test</scope>
+    </dependency>
+  </dependencies>
+
+  <properties>
+    <maven.compile.source>1.4</maven.compile.source>
+    <maven.compile.target>1.4</maven.compile.target>
+    <commons.componentid>dbcp</commons.componentid>
+    <commons.release.version>1.3</commons.release.version>
+    <commons.jira.id>DBCP</commons.jira.id>
+    <commons.jira.pid>12310469</commons.jira.pid>
+  </properties> 
+
+  <build>
+    <sourceDirectory>src/java</sourceDirectory>
+    <testSourceDirectory>src/test</testSourceDirectory>
+    <resources>
+      <resource>
+        <directory>src/test</directory>
+        <includes>
+          <include>testpool.jocl</include>
+        </includes>
+      </resource>
+      <resource>
+        <directory>.</directory>
+        <targetPath>META-INF</targetPath>
+          <includes>
+            <include>NOTICE.txt</include>
+            <include>LICENSE.txt</include>
+          </includes>
+        </resource>
+      </resources>
+      <testResources>
+        <testResource>
+          <directory>${basedir}/src/test</directory>
+          <includes>
+            <include>testpool.jocl</include>
+          </includes>
+        </testResource>
+      </testResources>
+      <plugins>
+        <!-- Specify cobertura version for "cobertura:cobertura" goal -->
+        <plugin>
+          <groupId>org.codehaus.mojo</groupId>
+          <artifactId>cobertura-maven-plugin</artifactId>
+          <version>2.3</version>
+        </plugin>
+        <plugin>
+          <groupId>org.apache.maven.plugins</groupId>
+          <artifactId>maven-surefire-plugin</artifactId>
+            <configuration>
+            <reportFormat>plain</reportFormat>
+              <excludes>
+                <!-- Test support files -->
+                <exclude>**/Tester*.java</exclude>
+                <!-- Exclude nested classes which Surefire cannot handle --> 
+                <exclude>**/Test*$*.java</exclude>
+              </excludes>
+          </configuration>
+        </plugin>
+        <plugin>
+          <artifactId>maven-assembly-plugin</artifactId>
+          <configuration>
+            <descriptors>
+              <descriptor>src/assembly/bin.xml</descriptor>
+              <descriptor>src/assembly/src.xml</descriptor>
+            </descriptors>
+            <tarLongFileMode>gnu</tarLongFileMode>
+          </configuration>
+        </plugin>
+      </plugins>
+    </build>
+    <reporting>
+      <plugins>
+        <plugin>
+          <groupId>org.apache.maven.plugins</groupId>
+          <artifactId>maven-javadoc-plugin</artifactId>
+          <version>2.4</version>
+          <configuration>
+            <links>
+              <link>http://java.sun.com/j2se/1.5.0/docs/api</link>
+              <link>http://commons.apache.org/pool/api-1.5.4</link>
+              <link>http://java.sun.com/j2ee/sdk_1.3/techdocs/api</link>
+            </links>
+          </configuration>
+        </plugin>
+        <plugin>
+          <groupId>org.apache.maven.plugins</groupId>
+          <artifactId>maven-changes-plugin</artifactId>
+          <version>2.0</version>
+          <configuration>
+            <xmlPath>${basedir}/src/changes/changes.xml</xmlPath>
+            <issueLinkTemplate>%URL%/%ISSUE%</issueLinkTemplate>
+          </configuration>
+          <reportSets>
+            <reportSet>
+              <reports>
+                <report>changes-report</report>
+              </reports>
+            </reportSet>
+          </reportSets>
+        </plugin>
+        <plugin>
+          <groupId>org.apache.maven.plugins</groupId>
+          <artifactId>maven-checkstyle-plugin</artifactId>
+          <version>2.1</version>
+          <configuration>
+            <configLocation>${basedir}/checkstyle.xml</configLocation>
+            <enableRulesSummary>false</enableRulesSummary>
+          </configuration>
+        </plugin>
+        <plugin>
+          <groupId>org.apache.maven.plugins</groupId>
+          <artifactId>maven-pmd-plugin</artifactId>
+          <version>2.4</version>
+          <configuration>
+            <rulesets>
+              <ruleset>checkstyle.xml</ruleset>
+            </rulesets>
+            <targetJdk>${maven.compile.target}</targetJdk>
+          </configuration>
+        </plugin>
+        <plugin>
+        <groupId>org.codehaus.mojo</groupId>
+        <artifactId>clirr-maven-plugin</artifactId>
+        <version>2.2.2</version>
+        <configuration>
+          <comparisonVersion>1.2.2</comparisonVersion>
+          <minSeverity>info</minSeverity>
+        </configuration>
+      </plugin>
+      </plugins>
+    </reporting>
+</project>
diff -uNr commons-dbcp-1.4-src/pom.xml commons-dbcp-1.4.x/pom.xml
--- commons-dbcp-1.4-src/pom.xml	2010-02-08 01:59:20.000000000 +0900
+++ commons-dbcp-1.4.x/pom.xml	2011-04-26 04:18:20.891454000 +0900
@@ -22,16 +22,16 @@
   <parent>
     <groupId>org.apache.commons</groupId>
     <artifactId>commons-parent</artifactId>
-    <version>12</version>
+    <version>20</version>
   </parent>
   <modelVersion>4.0.0</modelVersion>
   <groupId>commons-dbcp</groupId>
   <artifactId>commons-dbcp</artifactId>
-  <version>1.4</version>
+  <version>1.4.1-SNAPSHOT</version>
   <name>Commons DBCP</name>
 
   <inceptionYear>2001</inceptionYear>
-  <description>Commons Database Connection Pooling</description>
+  <description>Apache Commons DBCP software implements Database Connection Pooling</description>
   <url>http://commons.apache.org/dbcp/</url>
 
   <distributionManagement>
@@ -149,7 +149,7 @@
     <dependency>
       <groupId>commons-pool</groupId>
       <artifactId>commons-pool</artifactId>
-      <version>1.5.4</version>
+      <version>1.5.6</version>
     </dependency>
 
     <dependency>
@@ -196,6 +196,16 @@
       <artifactId>geronimo-transaction</artifactId>
        <version>1.2-beta</version>
        <scope>test</scope>
+       <exclusions>
+         <exclusion>
+           <artifactId>junit</artifactId>
+           <groupId>junit</groupId>
+         </exclusion>
+         <exclusion>
+           <artifactId>commons-logging</artifactId>
+           <groupId>commons-logging</groupId>
+         </exclusion>
+       </exclusions>
     </dependency>
   </dependencies>
 
@@ -204,6 +214,9 @@
     <maven.compile.target>1.6</maven.compile.target>
     <commons.componentid>dbcp</commons.componentid>
     <commons.release.version>1.4</commons.release.version>
+    <commons.release.desc>for JDBC 4 (JDK 1.6)</commons.release.desc>
+    <commons.release.2.version>1.3</commons.release.2.version>
+    <commons.release.2.desc>for JDBC 3 (JDK 1.4-1.5)</commons.release.2.desc>
     <commons.jira.id>DBCP</commons.jira.id>
     <commons.jira.pid>12310469</commons.jira.pid>
   </properties> 
@@ -287,12 +300,12 @@
         <plugin>
           <groupId>org.apache.maven.plugins</groupId>
           <artifactId>maven-javadoc-plugin</artifactId>
-          <version>2.4</version>
+          <version>2.5</version>
           <configuration>
             <links>
-              <link>http://java.sun.com/j2se/1.5.0/docs/api</link>
-              <link>http://commons.apache.org/pool/api-1.5.4</link>
-              <link>http://java.sun.com/j2ee/sdk_1.3/techdocs/api</link>
+              <link>http://download.oracle.com/javase/1.5.0/docs/api</link>
+              <link>http://commons.apache.org/pool/api-1.5.6</link>
+              <link>http://download.oracle.com/javaee/1.3/api</link>
             </links>
           </configuration>
         </plugin>
@@ -301,7 +314,7 @@
           <artifactId>maven-changes-plugin</artifactId>
           <version>2.0</version>
           <configuration>
-            <xmlPath>${basedir}/xdocs/changes.xml</xmlPath>
+            <xmlPath>${basedir}/src/changes/changes.xml</xmlPath>
             <issueLinkTemplate>%URL%/%ISSUE%</issueLinkTemplate>
             <template>dbcp-release-notes.vm</template>
             <templateDirectory>src/template</templateDirectory>
diff -uNr commons-dbcp-1.4-src/release-process.txt commons-dbcp-1.4.x/release-process.txt
--- commons-dbcp-1.4-src/release-process.txt	1970-01-01 09:00:00.000000000 +0900
+++ commons-dbcp-1.4.x/release-process.txt	2010-01-25 12:21:49.701949000 +0900
@@ -0,0 +1,100 @@
+################################################################################
+#       http://www.apache.org/licenses/LICENSE-2.0
+#
+#   Unless required by applicable law or agreed to in writing, software
+#   distributed under the License is distributed on an "AS IS" BASIS,
+#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+#   See the License for the specific language governing permissions and
+#   limitations under the License.
+################################################################################
+This document describes the process used to produce DBCP 1.3.x/1.4.x release
+candidates from the common source code maintained in DBCP's svn trunk.
+
+0.  Prepare and validate changes, testing with JDK 1.4 and 1.5 using Ant
+    and the code in trunk.   
+
+1.  Change the version numbers in pom.xml, build.xml,
+    pom-1.3.xml and build-1.3.xml to the new .x version.
+
+3.  Regenerate download_dbcp.xml using the commons-build plugin:
+    mvn commons:download-page
+
+4.  Regenerate RELEASE_NOTES.txt
+    mvn changes:announcement-generate
+    mv target/announcement/dbcp-release-notes.vm RELEASE-NOTES.txt
+    The formatting may need some tweaking. Check RELEASE-Notes.txt
+    in.
+
+5.  Test artifact generation from trunk:
+    mvn -Prc install
+    Inspect the 1.4.x tarballs in /target and the maven artifacts in 
+    your local maven repo.  Fix any problems.
+
+6.  Check in all changes to trunk; re-run tests.
+
+    Now we create a branch which will be used to set up the JDBC3
+    version of the code. This can be done in two different ways:
+    
+7a. Create the branch directly in SVN:
+
+    [If necessary, delete any existing such branch first]
+    
+    svn copy -m"Create 1.3.x compatibility release branch." \
+    https://svn.apache.org/repos/asf/commons/proper/dbcp/trunk \
+    https://svn.apache.org/repos/asf/commons/proper/dbcp/branches/DBCP_1_3_x_BRANCH
+
+8a. Check out the branch into a local workspace:
+
+    svn co https://svn.apache.org/repos/asf/commons/proper/dbcp/branches/DBCP_1_3_x_BRANCH
+    
+    Alternatively:
+    
+7b.  Check out DBCP fully - i.e., trunk, branches, tags.  
+
+8b.  From the top level of the checkout, execute
+    svn cp trunk branches/DBCP_1_3_x_BRANCH
+    svn commit -m "Created 1.3.x compatibility release branch."
+    (where x is the final digit of the new release number)
+
+    Whichever method was chosen above, continue as follows:
+
+9.  From the DBCP_1_3_x_BRANCH
+    svn rm pom.xml
+    svn rm build.xml
+    svn rm findbugs-exclude-filter.xml
+    svn mv build-1.3.xml build.xml
+    svn mv pom-1.3.xml pom.xml
+
+10. From the DBCP_1_3_x_BRANCH, using JDK 1.4 or 1.5
+    cp build.properties.sample build.properties (make sure all referenced jars exist)
+    ant filter-sources
+    ant clean test
+    mvn clean site
+    svn commit -m "Filtered sources to remove JDBC 4 methods."
+
+11a. Create release tags directly in SVN.
+
+    svn cp -m "Tagging 1.3.x RCy" \
+        https://svn.apache.org/repos/asf/commons/proper/dbcp/branches/DBCP_1_3_x_BRANCH \
+        https://svn.apache.org/repos/asf/commons/proper/dbcp/tags/DBCP_1_3_x_RCy
+    (where x is dot level, y is RC number)
+    svn cp -m "Tagging 1.4.x RCy" \
+        https://svn.apache.org/repos/asf/commons/proper/dbcp/trunk \
+        https://svn.apache.org/repos/asf/commons/proper/dbcp/tags/DBCP_1_4_x_RCy
+
+11b. Create release tags from workspace.  From the top-level dbcp directory
+    svn cp branches/DBCP_1_3_x_BRANCH tags/DBCP_1_3_x_RCy  (where x is dot level, y is RC number)
+    svn cp trunk tags/DBCP_1_4_x_RCy
+    svn commit -m "Tagging 1.3.x RCy" tags/DBCP_1_3_x_RCy
+    svn commit -m "Tagging 1.4.x RCy" tags/DBCP_1_4_x_RCy
+
+12. From a fresh checkout of the DBCP_1_4_x_RCy tag, using JDK 1.6 execute
+    mvn -Prc install
+
+13. From a fresh checkout of the DBCP_1_3_x_RCy tag using JDK 1.5,
+    mvn -Prc install
+
+14. Collect the maven released artifacts from the 1.3.x/1.4.x dbcp directories
+    in your local repo and the tarballs/zips from the /target directories
+    in trunk and the 1.3 branch.
+
diff -uNr commons-dbcp-1.4-src/src/assembly/src.xml commons-dbcp-1.4.x/src/assembly/src.xml
--- commons-dbcp-1.4-src/src/assembly/src.xml	2010-02-08 01:59:19.000000000 +0900
+++ commons-dbcp-1.4.x/src/assembly/src.xml	2010-04-11 08:22:31.610429000 +0900
@@ -43,8 +43,5 @@
         <fileSet>
             <directory>src</directory>
         </fileSet>
-        <fileSet>
-            <directory>xdocs</directory>
-        </fileSet>
     </fileSets>
 </assembly>
diff -uNr commons-dbcp-1.4-src/src/changes/changes.xml commons-dbcp-1.4.x/src/changes/changes.xml
--- commons-dbcp-1.4-src/src/changes/changes.xml	1970-01-01 09:00:00.000000000 +0900
+++ commons-dbcp-1.4.x/src/changes/changes.xml	2011-05-02 10:58:39.406969000 +0900
@@ -0,0 +1,471 @@
+<?xml version="1.0"?>
+<!--
+   Licensed to the Apache Software Foundation (ASF) under one or more
+  contributor license agreements.  See the NOTICE file distributed with
+  this work for additional information regarding copyright ownership.
+  The ASF licenses this file to You under the Apache License, Version 2.0
+  (the "License"); you may not use this file except in compliance with
+  the License.  You may obtain a copy of the License at
+
+       http://www.apache.org/licenses/LICENSE-2.0
+
+   Unless required by applicable law or agreed to in writing, software
+   distributed under the License is distributed on an "AS IS" BASIS,
+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+   See the License for the specific language governing permissions and
+   limitations under the License.
+-->
+
+<!--
+This file is used by the maven-changes-plugin to generate the release notes.
+Useful ways of finding items to add to this file are:
+
+1.  Add items when you fix a bug or add a feature (this makes the 
+release process easy :-).
+
+2.  Do a bugzilla search for tickets closed since the previous release.
+
+3.  Use the report generated by the maven-changelog-plugin to see all
+CVS commits.  Set the project.properties' maven.changelog.range 
+property to the number of days since the last release.
+
+
+The <action> type attribute can be add,update,fix,remove.
+-->
+
+<document>
+  <properties>
+    <title>Commons DBCP Release Notes</title>
+  </properties>
+  <body>
+    <release version="2.0" date="TBD" description="TBD">
+    </release>
+    <release version="1.4.1" date="TBD" description="TBD">
+      <action dev="psteitz" issue="DBCP-334" type="update" due-to="Alberto Mozzone">
+        Exposed GenericObjectPool's softMinEvictableIdleTimeMillis property for
+        configuration and use by BasicDataSource.
+      </action>
+      <action dev="psteitz" issue="DBCP-337" type="fix" due-to="Rob Gansevles">
+        Made equals reflexive in DelegatingStatement (and subclasses), DelegatingMetaData,
+        DelegatingResultSet and PoolingDriver#PoolGuardConnectionWrapper.
+      </action>
+      <action dev="psteitz" issue="DBCP-342" type="fix" due-to="Byungchol Kim">
+        Modified createDataSource method in BasicDataSource to ensure that GenericObjectPool
+        Evictor tasks are not started and orphaned when BasicDataSource encounters errors on
+        initialization.  Prior to this fix, when minIdle and timeBetweenEvictionRunsMillis
+        are both positive, Evictors orphaned by failed initialization can continue to
+        generate database connection requests.  This issue is duplicated by DBCP-339
+        and DBCP-93.
+      </action>
+      <action dev="psteitz" issue="DBCP-330" type="fix">
+        Changed DelegatingDatabaseMetaData to no longer add itself to the AbandonedTrace
+        of its parent connection.  This was causing excessive memory consumption and was
+        not necessary, as resultsets created by DelegatingDatabaseMetaData instances are
+        attached to the parent connection's trace on creation.  Also fixes DBCP-352.
+      </action>
+      <action dev="psteitz" issue="DBCP-343" type="fix">
+        Modified execute methods of Statement objects to ensure that whenever
+        a statement is used, the lastUsed property of its parent connection is
+        updated.
+      </action>
+      <action dev="markt" issue="DBCP-333" type="fix">
+        Correctly implemented the option to configure the class loader used to load
+        the JDBC driver.
+      </action>
+      <action dev="psteitz" issue="DBCP-346" type="update" due-to="Ken Tatsushita">
+        LIFO configuration option has been added to BasicDataSource.  When set
+        to true (the default), the pool acts as a LIFO queue; setting to false
+        causes connections to enter and exit to pool in FIFO order.
+      </action>
+      <action dev="psteitz" issue="DBCP-344" type="fix" due-to="Jeremy Whiting">
+        Test transitive dependencies brought in by geronimo-transaction created
+        version conflicts (commons logging and junit).  These have been explicitly
+        excluded in the POM.
+      </action>
+      <action dev="psteitz" issue="DBCP-348" type="fix" due-to="Eiji Takahashi">
+        BasicDataSourceFactory incorrectly used "initConnectSqls" in versions
+        1.3 and 1.4 of DBCP as the property name for connectionInitSqls.
+        Online docs for 1.3/1/4 have been updated to reflect this inconsistency.
+        The BasicDataSourceFactory property name has been changed to "connectInitSqls"
+        to match the online docs and the BasicDataSource property name.
+      </action>
+    </release>
+    <release version="1.4" date="2010-02-14" description="This release includes
+     new features as well as bug fixes and enhancements.  Some bug fixes
+     change semantics (e.g. connection close is now idempotent).  The 1.3
+     and 1.4 releases of DBCP are built from the same sources.  Version 1.4 
+     supports JDBC 4, so requires JDK 1.6. Applications running under
+     JDK 1.4-1.5 must use DBCP 1.3. Applications running under JDK 1.6
+     should use DBCP 1.4. Other than support for the added methods in JDBC 4,
+     there is nothing new or different in DBCP 1.4 vs. DBCP 1.3.   The list of
+     changes below since 1.2.2 applies to both the 1.3 and 1.4 release.  Other than
+     the one issue related to adding JDBC 4 support (DBCP-191), all bug fixes
+     or new features are included in both DBCP 1.3 and 1.4 ">
+      <action dev="psteitz" type="fix" issue="DBCP-320">
+        Eliminated poolKeys cache from PerUserPoolDataSource.
+      </action>
+      <action dev="sebb" type="fix" issue="DBCP-321">
+        Eliminated userKeys LRUMap cache from SharedPoolDataSource.
+      </action>
+      <action dev="psteitz" type="fix" issue="DBCP-319" due-to="Sebastian Bazley">
+        Made private fields final where possible.
+      </action>
+      <action dev="sebb" type="fix" issue="DBCP-318" due-to="Sebastian Bazley">
+        PerUserPoolDataSource.getPooledConnectionAndInfo multi-threading bug.
+      </action>
+      <action dev="sebb" type="fix" issue="DBCP-315" due-to="Sebastian Bazley">
+        Remove throws clause from method that does not throw an exception.
+      </action>
+      <action dev="sebb" type="fix" issue="DBCP-313" due-to="Sebastian Bazley">
+        Remove code that catches and ignores Exceptions when calling
+        PooledConnection.removeConnectionEventListener(ConnectionEventListener)
+        as the method does not throw any Exceptions.
+      </action>
+      <action dev="sebb" type="fix" issue="DBCP-316" due-to="Sebastian Bazley">
+        Remove impossible null check.
+      </action>
+      <action dev="sebb" type="update" issue="DBCP-314" due-to="Sebastian Bazley">
+        Renamed variables with duplicate names in different scopes.
+      </action>
+      <action dev="psteitz" type="update" issue="DBCP-312" due-to="Glen Mazza">
+        Clarified javadoc for BasicDataSource close() method.
+      </action>
+      <action dev="psteitz" type="add" issue="DBCP-204" due-to="Wei Chen">
+        Made PoolingConnection pool CallableStatements. When BasicDataSource's 
+        poolPreparedStatements property is true, CallableStatements are now
+        pooled along with PreparedStatements. The maxOpenPreparedStatements
+        property limits the combined number of Callable and Prepared statements
+        that can be in use at a given time.
+      </action>
+      <action dev="markt" type="update" issue="DBCP-305" due-to="Christopher Schultz">
+        Use an API specific exception for logging abandoned objects to make
+        scanning the logs for these exceptions simpler and to provide a better
+        message that includes the creation time of the abandoned object.
+      </action>
+      <action dev="markt" type="fix" issue="DBCP-303" due-to="Dave Oxley">
+        Ensure Statement.getGeneratedKeys() works correctly with the CPDS
+        adapter.
+      </action>
+      <action dev="psteitz" type="fix" issue="DBCP-302" due-to="Sebastian Bazley">
+        Removed incorrectly advertised ClassNotFoundException from
+        JOCLContentHandler.ConstructorDetails.createObject().
+      </action>
+      <action dev="markt" type="update" issue="DBCP-203" due-to="Mark Grand">
+        Make the class loader used to load the JDBC driver configurable for the
+        BasicDatasource.
+      </action>
+      <action dev="markt" type="fix" issue="DBCP-8">
+        Handle user password changes for InstanceKeyDataSources.
+      </action>
+      <action dev="psteitz" type="update" issue="DBCP-289" due-to="Marc Kannegie√üer">
+        Made XADataSource configurable in BasicManagedDataSource.
+      </action>
+      <action dev="psteitz" type="fix" issue="DBCP-294" due-to="Philippe Mouawad">
+        Added PoolableManagedConnection and PoolableManagedConnectionFactory so that
+        pooled managed connections can unregister themselves from transaction registries,
+        avoiding resource leaks.
+      </action>
+      <action dev="psteitz" type="update" issue="DBCP-276">
+        Added connectionProperties property to DriverAdapterCPDS.
+      </action>
+      <action dev="psteitz" type="add" issue="DBCP-226">
+        Added a validationQueryTimeout configuration parameter to BasicDataSource
+        allowing the user to specify a timeout value (in seconds) for connection
+        validation queries. 
+      </action>
+      <action dev="psteitz" type="add" issue="DBCP-175" due-to="Jiri Melichna and Jerome Lacoste">
+        Added a connectionInitSqls configuration parameter to BasicDataSource
+        allowing the user to specify a collection of SQL statements to execute
+        one time when a physical database connection is first opened.
+      </action>
+      <action dev="markt" type="fix" issue="DBCP-212">
+        PoolableConnectionFactory.makeObject() is no longer synchronized. This
+        provides improved response times when load spikes at the cost of a
+        faster rise in database server load. This change was made as a partial
+        fix for DBCP-212.  The synchronization changes in Commons Pool 1.5 complete
+        the fix for this issue.
+      </action>
+      <action dev="psteitz" type="fix" issue="DBCP-242">
+        Reverted DelegatingConnection close to 1.2.2 version to ensure
+        open statements are closed before the underlying connection is closed.
+      </action>
+      <action dev="markt" type="fix" issue="DBCP-235">
+        Refactor DelegatingConnection and ManagedConnection enable overridden
+        equals() and hashcode() to work correctly.
+      </action>
+      <action dev="markt" type="update" issue="DBCP-265">
+        Add a DelegatingDatabaseMetaData to track ResultSets returned from
+        DatabaseMetaData objects.
+      </action>
+      <action dev="markt" type="fix" issue="DBCP-215">
+        Modified BasicDataSourceFactory to complete initialization of the pool
+        by creating initialSize connections rather than leaving this to lazy
+        initialization when the pool is used.
+      </action>
+      <action dev="markt" type="fix" issue="DBCP-253">
+        Eliminated masked _stmt field in descendents of DelegatingStatement.
+       </action>
+      <action dev="markt" type="fix" issue="DBCP-191" due-to="Michael Heuer and J. David Beutel" >
+        Modified DBCP sources to support compilation under JDK 1.4-1.6
+        using Ant flags to do conditional compilation.
+      </action>
+      <action dev="markt" type="fix" issue="DBCP-272">
+        Added a static initializer to BasicDatasource that calls
+        DriverManager.getDrivers() to force initialization before we ever do
+        anything that might use Class.forName() to load (and register) a JDBC
+        driver.
+      </action>
+      <action dev="markt" type="fix" issue="DBCP-4">
+        Eliminated direct System.out calls in AbandonedTrace.
+      </action>
+      <action dev="niallp" type="fix" issue="DBCP-264">
+        Modified DelegatingStatment close to clear open batches.
+      </action>
+      <action dev="psteitz" type="fix" issue="DBCP-255">
+        Eliminated unused private "parent" field in AbandonedTrace.
+      </action>
+      <action dev="psteitz" type="fix" issue="DBCP-273" due-to="Mark Lin">
+        Fixed errors handling boolean-valued Reference properties in 
+        InstanceKeyObjectFactory, DriverAdapterCPDS that were causing 
+        testOnBorrow and poolPreparedStatements properties to be incorrectly
+        set when creating objects from javax.naming.Reference instances.
+      </action>
+      <action dev="psteitz" type="fix" issue="DBCP-271" due-to="Sebastian Bazley">
+        Made private instance fields of AbandonedTrace volatile (parent,
+        createdBy, lastUsed, createdTime) or final (trace).
+      </action>
+      <action dev="psteitz" type="fix" issue="DBCP-270" due-to="Filip Hanik">
+        Narrowed synchronization in AbandonedTrace to resolve an Evictor deadlock.
+      </action>
+      <action dev="bayard" type="fix" issue="DBCP-218">
+        Corrected Javadoc to state that getLoginTimeout and setLoginTimeout are
+        NOT supported by BasicDataSource.
+      </action>
+      <action dev="bayard" type="update" issue="DBCP-211">
+        Added Maven 2 pom.xml. Removed a block of code from TestJOCLed that set
+        the Xerces parser manually. This was to support early JDKs. The 1.3
+        version of DBCP requires JDK 1.4+.
+      </action>
+      <action dev="psteitz" type="add" issue="DBCP-228" due-to="Dain Sundstrom">
+        Added support for pooling managed connections.
+      </action>
+      <action dev="psteitz" type="add" issue="DBCP-230" due-to="Dain Sundstrom">
+        Added BasicManagedDataSource, extending BasicDataSource.
+        Also improved extensibility of BasicDataSource by encapsulating
+        methods to create object pool, connection factory and datasource
+        instance previously embedded in createDataSource.
+      </action>
+      <action dev="psteitz" type="update" issue="DBCP-233" due-to="Dain Sundstrom">
+        Changed behavior to allow Connection, Statement, PreparedStatement,
+        CallableStatement and ResultSet to be closed multiple times. The first
+        time close is called the resource is closed and any subsequent calls
+        have no effect. This behavior is required as per the JavaDocs for these
+        classes. Also added tests for closing all types multiple times and
+        updated any tests that incorrectly assert that a resource can not be
+        closed more then once.  Fixes DBCP-3, DBCP-5, DBCP-23 and DBCP-134.
+      </action>
+      <action dev="psteitz" type="update" issue="DBCP-11" due-to="Dain Sundstrom">
+        Modified PoolingDataSource, PoolingDriver and DelegatingStatement to
+        assure that all returned Statements, PreparedStatements, 
+        CallableStatements and ResultSets are wrapped with a delegating object,
+        which already properly handle the back pointers for Connection and
+        Statement.  Also added tests to to assure that the *same* object used 
+        to create the statement or result set is returned  from either 
+        getConnection() or getStatement().
+      </action>
+      <action dev="dain" type="update" issue="DBCP-143">
+        SQLNestedException has been deprecated and will be replaced in DBCP 2.0 with
+        SQLException and standard Java exception chaining.
+      </action>
+      <action dev="dain" type="fix" issue="DBCP-221">
+        BasicDataSource.close() now permanently marks the data source as closed,
+        and no new connections can be obtained from the data source. At close all
+        idle connections are destroyed and the method returns.  As the remaining
+        active connections are closed, they are destroyed.
+      </action>
+      <action dev="psteitz" type="fix" issue="DBCP-241">
+        Eliminated potential sources of NullPointerExceptions in 
+        PoolingConnection.
+      </action>
+      <action dev="psteitz" type="fix" issue="DBCP-216" due-to="Marcos Sanz">
+        Improved error recovery and listener cleanup in 
+        KeyedCPDSConnectionFactory. Substituted calls to destroyObject with
+         _pool.invalidateObject on error to ensure pool active count is
+        decremented on error events. Ensured that events from closed or invalid
+        connections are ignored and listeners are cleaned up. 
+      </action>
+      <action dev="psteitz" type="fix" issue="DBCP-245" due-to="Michael Drechsel">
+        Fixed error in SharedPoolDataSource causing incorrect passwords to be 
+        stored under certain conditions.
+      </action> 
+      <action dev="psteitz" type="fix" issue="DBCP-237" due-to="Oliver Matz">
+        Added exception handler to ensure that PooledConnections are not
+        orphaned when an exception occurs in setUpDefaults or clearWarnings in 
+        IntanceKeyDataSource.getConnection.
+      </action> 
+      <action dev="psteitz" type="fix" issue="DBCP-252" due-to="FindBugs">
+        Made getPool synchronized in PoolableConnectionFactory.
+        Fixes inconsistent synchronization accessing _pool.
+      </action> 
+      <action dev="psteitz" type="fix" issue="DBCP-252" due-to="FindBugs">
+        Fixed inconsistent synchronization on _rollbackAfterValidation,
+        _validationQuery and _pool in CPDSConnectionFactory and 
+        KeyedCPDSConnectionFactory by making the first two volatile and making
+        both getter and setter for _pool synchronized.
+      </action> 
+    </release>
+    <release version="1.3" date="2010-02-14" description="Compatability release for JDBC 3.
+      See version 1.4 description and change log.">
+     <action type="update">
+        See &lt;a href="changes-report.html#a1.4"&gt;DBCP 1.4 Changes &lt;/a&gt; for details. Version
+        1.3 is identical to 1.4, other than JDBC 4 methods being filtered out of the DBCP 1.3 sources. Changes
+        Since 1.2.2 are the same for 1.3 and 1.4.
+      </action>
+    </release>
+    <release version="1.2.2" date="2007-04-04"
+      description="This is a maintenance release containing bug fixes
+      and enhancements. All API changes are binary compatible with version 1.2.1.">
+      <action dev="dirkv " type="add">
+        Add a &lt;i&gt;JNDI How To&lt;/i&gt; to the User Guide.
+      </action>
+      <action dev="dirkv " type="fix" issue="DBCP-108" due-to="Maxwell Grender-Jones">
+        DriverManagerConnectionFactory: blank username/password handling.
+      </action>
+      <action dev="dirkv " type="fix" issue="DBCP-113" due-to="Rohan Lenard">
+        Broken behaviour for BasicDataSource.setMaxActive(0).
+      </action>
+      <action dev="dirkv " type="fix" issue="DBCP-36" due-to="Jonathan Whitall">
+        BasicDataSource does not work with getConnection(String, String).
+      </action>
+      <action dev="dirkv " type="update" issue="DBCP-164" due-to="Todd Carmichael">
+        Enhancements to prepared statement in DriverAdapterCPDS.
+      </action>
+      <action dev="yoavs" type="update" issue="DBCP-186" due-to="Ralf Hauser">
+        Better messages and docs for LoginTimeout UnsupportedOperationException.
+      </action>
+      <action dev="yoavs" type="fix" issue="DBCP-50" due-to="Nicky Nicolson">
+        Error in JOCL snippet in org.apache.commons.dbcp package javadoc.
+      </action>
+      <action dev="yoavs" type="update" issue="DBCP-165" due-to="QM">
+        Added toString() methods to DelegatingPreparedStatement and DelegatingStatement
+      </action>
+      <action dev="yoavs" type="fix">
+        Changes to make DBCP compile on JDK 1.5 by adding source="1.4" to compiler
+        arguments (there are compiler errors in JDK 5.0 without this source switch
+        that cannot be fixed without JDK 5.0-specific syntax).
+      </action>
+      <action dev="dirkv " type="fix" issue="DBCP-20" due-to="Chris Nappin">
+        Per-user pooling with Oracle driver and default isolation settings.
+      </action>
+      <action dev="dirkv " type="fix" issue="DBCP-9" due-to="Adrian Baker">
+        Error in JOCL document in javadoc.
+      </action>
+      <action dev="sullis" type="update">
+        Added toString() method to DelegatingConnection.
+      </action>
+      <action dev="dirkv " type="update" issue="DBCP-181" due-to="Meikel Bisping">
+        Add DriverManager.invalidateConnection().
+      </action>
+      <action dev="dirkv " type="fix" issue="DBCP-184" due-to="Meikel Bisping">
+        Improved Exception nesting in ConnectionPool.
+      </action>
+      <action dev="dennisl" type="fix" issue="DBCP-144" due-to="Sebb">
+        Fix broken website links for examples.
+      </action>
+      <action dev="psteitz" type="fix" issue="DBCP-28" 
+        due-to="Huw Lewis, James Ring">
+        Modified PoolableConnection close method to invalidate instance
+        when invoked on an already closed connection.
+      </action>
+      <action dev="joehni" type="fix" issue="DBCP-81">
+        Inserted null checks to avoid NPE in close operations.
+      </action>
+      <action dev="psteitz" type="fix" issue="DBCP-105" 
+        due-to="Sandy McArthur, Thomas Fischer">
+        Changed getReference method in InstanceKeyDataSource to return a
+        concrete factory and added implementations of getReference in concrete
+        subclasses.
+      </action>
+      <action dev="psteitz" type="fix" issue="DBCP-39" due-to="Jindrich Vimr">
+        Inserted null check in close method of SharedPoolDataSource to avoid
+        NPE when invoked on non-initialized pool.
+      </action>
+      <action dev="psteitz" type="fix" issue="DBCP-71" due-to="Douglas Squirrel">
+        Document fact that true values for testOnBorrow, testOnReturn, testWhileIdle
+        only have effect when validationQuery is set to a non-null string.
+      </action>
+      <action dev="psteitz" type="fix" issue="DBCP-102">
+        Modified activateObject in PoolableConnection to test connection
+        properties before resetting to defaults.
+      </action>
+      <action dev="sandymac" type="fix" issue="DBCP-188">
+        Corrected maxActive documentation in configuration.html.
+      </action>
+      <action dev="psteitz"  type="update">
+        Upgraded dependency to Pool 1.3.
+      </action>
+      <action dev="psteitz" type="update" issue="DBCP-187" due-to="Ralf Hauser">
+        Added connection info to SQLException messages when closed connections
+        (resp stmts) are accessed in DelegatingConnection, DelegatingStatement.
+      </action>
+      <action dev="psteitz" type="fix" issue="DBCP-41" due-to="Anton Tagunov">
+        Fixed errors in pool parameter documentation and made
+        0 value for _maxPreparedStatements in DriverAdapterCPDS behave
+        like a negative value, to be consistent with documentation
+        and pool behavior.
+      </action>
+      <action dev="psteitz" type="fix" issue="DBCP-100">
+        Made userKeys an instance variable (i.e., not static)
+        in SharedPoolDataSource.
+      </action>
+      <action dev="psteitz" type="fix" issue="DBCP-198">
+        Changed implementation of equals in 
+        PoolingDataSource.PoolGuardConnectionWrapper
+        to ensure it is reflexive, even when wrapped connections are not
+        DelegatingConnections.
+      </action>
+      <action dev="psteitz" type="update" issue="DBCP-116" due-to="Thomas Fischer">
+        Added rollbackAfterValidation property and code to issue a rollback on a
+        connection after validation when this property is set to true to eliminate
+        Oracle driver exceptions. Default property value is false.
+      </action>
+      <action dev="psteitz" type="update" issue="DBCP-68">
+        Removed dependency on Commons Collections by adding collections
+        2.1 sources for LRUMap and SequencedHashMap with package scope to 
+        datasources package.
+      </action>
+      <action dev="psteitz" type="fix" issue="DBCP-65">
+        Removed synchronization from prepareStatement methods in
+        PoolingConnection. Synchronization in these methods was causing
+        deadlocks. No resources other than the prepared statement pool are
+        accessed by these methods, and the pool methods are synchronized. 
+        Also fixes DBCP-202.
+      </action>
+    </release>   
+
+    <release version="1.2.1" date="2004-06-12" description="Maintenance Release to restore JDK 1.3 compatibility">
+      <action type="fix">
+        See &lt;a href="release-notes-1.2.1.html"&gt;DBCP 1.2.1 Release Notes&lt;/a&gt; for details.
+      </action>
+    </release>   
+
+    <release version="1.2" date="2004-06-07">
+      <action type="update">
+        See &lt;a href="release-notes-1.2.html"&gt;DBCP 1.2 Release Notes&lt;/a&gt; for details.
+      </action>
+    </release>   
+
+    <release version="1.1" date="2003-10-20">
+      <action type="update">
+        See &lt;a href="release-notes-1.1.html"&gt;DBCP 1.1 Release Notes&lt;/a&gt; for details.
+      </action>
+    </release>   
+ 
+   <release version="1.0" date="2002-08-12" description="Initial Release">
+      <action type="add">
+        Initial Release
+      </action>
+    </release>   
+
+  </body>
+</document>
diff -uNr commons-dbcp-1.4-src/src/java/org/apache/commons/dbcp/AbandonedConfig.java commons-dbcp-1.4.x/src/java/org/apache/commons/dbcp/AbandonedConfig.java
--- commons-dbcp-1.4-src/src/java/org/apache/commons/dbcp/AbandonedConfig.java	2010-02-08 01:59:20.000000000 +0900
+++ commons-dbcp-1.4.x/src/java/org/apache/commons/dbcp/AbandonedConfig.java	2011-04-26 04:25:41.128205000 +0900
@@ -23,7 +23,7 @@
  * Configuration settings for handling abandoned db connections.
  *                                                            
  * @author Glenn L. Nielsen           
- * @version $Revision: 758745 $ $Date: 2009-03-26 13:02:20 -0400 (Thu, 26 Mar 2009) $
+ * @version $Revision: 1096570 $ $Date: 2011-04-26 04:25:41 +0900 (Tue, 26 Apr 2011) $
  */
 public class AbandonedConfig {
 
@@ -34,14 +34,14 @@
     private boolean removeAbandoned = false;
 
     /**
-     * Flag to remove abandoned connections if they exceed the
-     * removeAbandonedTimeout.
+     * <p>Flag to remove abandoned connections if they exceed the
+     * removeAbandonedTimeout.</p>
      *
-     * Set to true or false, default false.
-     * If set to true a connection is considered abandoned and eligible
-     * for removal if it has been idle longer than the removeAbandonedTimeout.
-     * Setting this to true can recover db connections from poorly written    
-     * applications which fail to close a connection.
+     * <p>The default value is false.</p>
+     * 
+     * <p>If set to true a connection is considered abandoned and eligible
+     * for removal if it has been idle longer than the
+     * {@link #getRemoveAbandoned() removeAbandonedTimeout}.</p>
      *
      * @return true if abandoned connections are to be removed
      */
@@ -50,17 +50,16 @@
     }
 
     /**
-     * Flag to remove abandoned connections if they exceed the
-     * removeAbandonedTimeout.
+     * <p>Flag to remove abandoned connections if they exceed the
+     * removeAbandonedTimeout.</p>
      *
-     * Set to true or false, default false.
-     * If set to true a connection is considered abandoned and eligible   
-     * for removal if it has been idle longer than the removeAbandonedTimeout.
-     * Setting this to true can recover db connections from poorly written
-     * applications which fail to close a connection.
+     * <p>If set to true a connection is considered abandoned and eligible   
+     * for removal if it has been idle longer than the
+     * {@link #getRemoveAbandoned() removeAbandonedTimeout}.</p>
      *
      * @param removeAbandoned true means abandoned connections will be
      *   removed
+     * @see #getRemoveAbandoned()
      */
     public void setRemoveAbandoned(boolean removeAbandoned) {
         this.removeAbandoned = removeAbandoned;
@@ -71,23 +70,36 @@
      */
     private int removeAbandonedTimeout = 300;
 
-    /**
-     * Timeout in seconds before an abandoned connection can be removed.
-     *
-     * Defaults to 300 seconds.
-     *
-     * @return abandoned timeout in seconds
+    /** 
+     * <p>Timeout in seconds before an abandoned connection can be removed.</p>
+     * 
+     * <p>Creating a Statement, PreparedStatement or CallableStatement or using
+     * one of these to execute a query (using one of the execute methods)
+     * resets the lastUsed property of the parent connection.</p>
+     * 
+     * <p>Abandoned connection cleanup happens when
+     * <code><ul>
+     * <li><code>{@link #getRemoveAbandoned() removeAbandoned} == true</li>
+     * <li>{@link #getNumIdle() numIdle} &lt; 2</li>
+     * <li>{@link #getNumActive() numActive} &gt; {@link #getMaxActive() maxActive} - 3</li>
+     * </ul></code></p>
+     * 
+     * <p>The default value is 300 seconds.</p>
      */
     public int getRemoveAbandonedTimeout() {
         return (this.removeAbandonedTimeout);
     }
 
     /**
-     * Timeout in seconds before an abandoned connection can be removed.
-     *
-     * Defaults to 300 seconds.
-     *
-     * @param removeAbandonedTimeout abandoned timeout in seconds
+     * <p>Sets the timeout in seconds before an abandoned connection can be
+     * removed.</p>
+     * 
+     * <p>Setting this property has no effect if 
+     * {@link #getRemoveAbandoned() removeAbandoned} is false.</p>
+     *
+     * @param removeAbandonedTimeout new abandoned timeout in seconds
+     * @see #getRemoveAbandonedTimeout()
+     * @see #getRemoveAbandoned()
      */
     public void setRemoveAbandonedTimeout(int removeAbandonedTimeout) {
         this.removeAbandonedTimeout = removeAbandonedTimeout;
diff -uNr commons-dbcp-1.4-src/src/java/org/apache/commons/dbcp/BasicDataSource.java commons-dbcp-1.4.x/src/java/org/apache/commons/dbcp/BasicDataSource.java
--- commons-dbcp-1.4-src/src/java/org/apache/commons/dbcp/BasicDataSource.java	2010-02-08 01:59:20.000000000 +0900
+++ commons-dbcp-1.4.x/src/java/org/apache/commons/dbcp/BasicDataSource.java	2011-05-02 10:58:39.406969000 +0900
@@ -48,7 +48,7 @@
  * @author Glenn L. Nielsen
  * @author Craig R. McClanahan
  * @author Dirk Verbeeck
- * @version $Revision: 895844 $ $Date: 2010-01-04 20:50:04 -0500 (Mon, 04 Jan 2010) $
+ * @version $Revision: 1098458 $ $Date: 2011-05-02 10:58:39 +0900 (Mon, 02 May 2011) $
  */
 public class BasicDataSource implements DataSource {
     
@@ -261,6 +261,39 @@
     }
     
     /**
+     * True means that borrowObject returns the most recently used ("last in")
+     * connection in the pool (if there are idle connections available).  False
+     * means that the pool behaves as a FIFO queue - connections are taken from
+     * the idle instance pool in the order that they are returned to the pool.
+     */
+    private boolean lifo = GenericObjectPool.DEFAULT_LIFO;
+
+    /**
+     * Returns the LIFO property. 
+     * 
+     * @return true if connection pool behaves as a LIFO queue.
+     * 
+     * @see #lifo 
+     */ 
+    public synchronized boolean getLifo() {
+        return this.lifo;
+    }
+
+    /**
+     * Sets the LIFO property. True means the pool behaves as a LIFO queue;
+     * false means FIFO.
+     *  
+     * @param lifo the new value for the LIFO property
+     *  
+     */    
+    public synchronized void setLifo(boolean lifo) {
+        this.lifo = lifo;   
+        if (connectionPool != null) {
+            connectionPool.setLifo(lifo);
+        }
+    }
+    
+    /**
      * The maximum number of active connections that can be allocated from
      * this pool at the same time, or negative for no limit.
      */
@@ -294,7 +327,7 @@
 
     /**
      * The maximum number of connections that can remain idle in the
-     * pool, without extra ones being released, or negative for no limit.
+     * pool, without extra ones being destroyed, or negative for no limit.
      * If maxIdle is set too low on heavily loaded systems it is possible you
      * will see connections being closed and almost immediately new connections
      * being opened. This is a result of the active threads momentarily closing
@@ -306,7 +339,7 @@
 
     /**
      * <p>Returns the maximum number of connections that can remain idle in the
-     * pool.
+     * pool. Excess idle connections are destroyed on return to the pool.
      * </p>
      * <p>A negative value indicates that there is no limit</p>
      * 
@@ -318,7 +351,7 @@
 
     /**
      * Sets the maximum number of connections that can remain idle in the
-     * pool.
+     * pool. Excess idle connections are destroyed on return to the pool.
      * 
      * @see #getMaxIdle()
      * @param maxIdle the new value for maxIdle
@@ -332,12 +365,18 @@
 
     /**
      * The minimum number of active connections that can remain idle in the
-     * pool, without extra ones being created, or 0 to create none.
+     * pool, without extra ones being created when the evictor runs, or 0 to create none. 
+     * The pool attempts to ensure that minIdle connections are available when the idle object evictor
+     * runs. The value of this property has no effect unless {@link #timeBetweenEvictionRunsMillis}
+     * has a positive value.
      */
     protected int minIdle = GenericObjectPool.DEFAULT_MIN_IDLE;
 
     /**
-     * Returns the minimum number of idle connections in the pool
+     * Returns the minimum number of idle connections in the pool. The pool attempts
+     * to ensure that minIdle connections are available when the idle object evictor
+     * runs. The value of this property has no effect unless {@link #timeBetweenEvictionRunsMillis}
+     * has a positive value.
      * 
      * @return the minimum number of idle connections
      * @see GenericObjectPool#getMinIdle()
@@ -347,7 +386,10 @@
     }
 
     /**
-     * Sets the minimum number of idle connections in the pool.
+     * Sets the minimum number of idle connections in the pool. The pool attempts
+     * to ensure that minIdle connections are available when the idle object evictor
+     * runs. The value of this property has no effect unless {@link #timeBetweenEvictionRunsMillis}
+     * has a positive value.
      * 
      * @param minIdle the new value for minIdle
      * @see GenericObjectPool#setMinIdle(int)
@@ -576,7 +618,7 @@
      * Returns the value of the {@link #timeBetweenEvictionRunsMillis}
      * property.
      * 
-     * @return the time (in miliseconds) between evictor runs
+     * @return the time (in milliseconds) between evictor runs
      * @see #timeBetweenEvictionRunsMillis
      */
     public synchronized long getTimeBetweenEvictionRunsMillis() {
@@ -630,7 +672,7 @@
 
     /**
      * The minimum amount of time an object may sit idle in the pool before it
-     * is eligable for eviction by the idle object evictor (if any).
+     * is eligible for eviction by the idle object evictor (if any).
      */
     protected long minEvictableIdleTimeMillis =
         GenericObjectPool.DEFAULT_MIN_EVICTABLE_IDLE_TIME_MILLIS;
@@ -658,6 +700,57 @@
             connectionPool.setMinEvictableIdleTimeMillis(minEvictableIdleTimeMillis);
         }
     }
+    
+    /**
+     * The minimum amount of time a connection may sit idle in the pool before
+     * it is eligible for eviction by the idle object evictor, with the extra
+     * condition that at least "minIdle" connections remain in the pool.
+     * Note that {@code minEvictableIdleTimeMillis} takes precedence over this
+     * parameter.  See {@link #getSoftMinEvictableIdleTimeMillis()}.
+     */
+    private long softMinEvictableIdleTimeMillis = GenericObjectPool.DEFAULT_SOFT_MIN_EVICTABLE_IDLE_TIME_MILLIS;
+    
+    /**
+     * Sets the minimum amount of time a connection may sit idle in the pool
+     * before it is eligible for eviction by the idle object evictor, with the
+     * extra condition that at least "minIdle" connections remain in the pool.
+     *
+     * @param softMinEvictableIdleTimeMillis minimum amount of time a
+     * connection may sit idle in the pool before it is eligible for eviction,
+     * assuming there are minIdle idle connections in the pool.
+     * @since 1.4.1
+     * @see #getSoftMinEvictableIdleTimeMillis
+     */
+    public synchronized void setSoftMinEvictableIdleTimeMillis(long softMinEvictableIdleTimeMillis) {
+        this.softMinEvictableIdleTimeMillis = softMinEvictableIdleTimeMillis;
+        if (connectionPool != null) {
+            connectionPool.setSoftMinEvictableIdleTimeMillis(softMinEvictableIdleTimeMillis);
+        }
+    }
+    
+    /**
+     * <p>Returns the minimum amount of time a connection may sit idle in the
+     * pool before it is eligible for eviction by the idle object evictor, with
+     * the extra condition that at least "minIdle" connections remain in the
+     * pool.</p>
+     * 
+     * <p>When {@link #getMinEvictableIdleTimeMillis() miniEvictableIdleTimeMillis} 
+     * is set to a positive value, miniEvictableIdleTimeMillis is examined
+     * first by the idle connection evictor - i.e. when idle connections are
+     * visited by the evictor, idle time is first compared against
+     * {@code minEvictableIdleTimeMillis} (without considering the number of idle
+     * connections in the pool) and then against 
+     * {@code softMinEvictableIdleTimeMillis}, including the {@code minIdle},
+     * constraint.</p>
+     *
+     * @return minimum amount of time a connection may sit idle in the pool before
+     * it is eligible for eviction, assuming there are minIdle idle connections
+     * in the pool
+     * @since 1.4.1
+     */
+    public synchronized long getSoftMinEvictableIdleTimeMillis() {
+        return softMinEvictableIdleTimeMillis;
+    }
 
     /**
      * The indication of whether objects will be validated by the idle object
@@ -1138,20 +1231,22 @@
     private AbandonedConfig abandonedConfig;
 
     /**                       
-     * Flag to remove abandoned connections if they exceed the
-     * removeAbandonedTimout.
+     * <p>Flag to remove abandoned connections if they exceed the
+     * removeAbandonedTimout.</p>
      *
-     * Set to true or false, default false.
-     * If set to true a connection is considered abandoned and eligible
-     * for removal if it has been idle longer than the removeAbandonedTimeout.
-     * Setting this to true can recover db connections from poorly written    
-     * applications which fail to close a connection.
-     * <p>
-     * Abandonded connections are identified and removed when 
+     * <p>The default value is false.<p>
+     * 
+     * <p>If set to true a connection is considered abandoned and eligible
+     * for removal if it has not been used for more than
+     * {@link #getRemoveAbandonedTimeout() removeAbandonedTimeout} seconds.</p>
+     * 
+     * <p>Abandoned connections are identified and removed when 
      * {@link #getConnection()} is invoked and the following conditions hold
      * <ul><li>{@link #getRemoveAbandoned()} = true </li>
      *     <li>{@link #getNumActive()} > {@link #getMaxActive()} - 3 </li>
      *     <li>{@link #getNumIdle()} < 2 </li></ul></p>
+     *
+     * @see #getRemoveAbandonedTimeout()
      */                                                                   
     public boolean getRemoveAbandoned() {   
         if (abandonedConfig != null) {
@@ -1161,7 +1256,18 @@
     }                                    
                                  
     /**
-     * @param removeAbandoned new removeAbandoned property value
+     * <p>Flag to remove abandoned connections if they exceed the
+     * removeAbandonedTimeout.</p>
+     *
+     * <p>If set to true a connection is considered abandoned and eligible   
+     * for removal if it has been idle longer than the
+     * {@link #getRemoveAbandoned() removeAbandonedTimeout}.</p>
+     * 
+     * <p>Setting this to true can recover db connections from poorly written
+     * applications which fail to close a connection.</p>
+     *
+     * @param removeAbandoned true means abandoned connections will be
+     *   removed
      * @see #getRemoveAbandoned()
      */
     public void setRemoveAbandoned(boolean removeAbandoned) {
@@ -1172,12 +1278,22 @@
         this.restartNeeded = true;
     }                                                        
                                                
-    /**
-     * Timeout in seconds before an abandoned connection can be removed.
-     *
-     * Defaults to 300 seconds. 
-     * @return abandoned connection timeout        
-     */                                                                 
+    /** 
+     * <p>Timeout in seconds before an abandoned connection can be removed.</p>
+     * 
+     * <p>Creating a Statement, PreparedStatement or CallableStatement or using
+     * one of these to execute a query (using one of the execute methods)
+     * resets the lastUsed property of the parent connection.</p>
+     * 
+     * <p>Abandoned connection cleanup happens when
+     * <code><ul>
+     * <li><code>{@link #getRemoveAbandoned() removeAbandoned} == true</li>
+     * <li>{@link #getNumIdle() numIdle} &lt; 2</li>
+     * <li>{@link #getNumActive() numActive} &gt; {@link #getMaxActive() maxActive} - 3</li>
+     * </ul></code></p>
+     * 
+     * <p>The default value is 300 seconds.</p>
+     */                                                  
     public int getRemoveAbandonedTimeout() { 
         if (abandonedConfig != null) {
             return abandonedConfig.getRemoveAbandonedTimeout();
@@ -1186,7 +1302,15 @@
     }                                        
 
     /**
-     * @param removeAbandonedTimeout new removeAbandonedTimeout value
+     * <p>Sets the timeout in seconds before an abandoned connection can be
+     * removed.</p>
+     * 
+     * <p>Setting this property has no effect if 
+     * {@link #getRemoveAbandoned() removeAbandoned} is false.</p>
+     *
+     * @param removeAbandonedTimeout new abandoned timeout in seconds
+     * @see #getRemoveAbandonedTimeout()
+     * @see #getRemoveAbandoned()
      */               
     public void setRemoveAbandonedTimeout(int removeAbandonedTimeout) {
         if (abandonedConfig == null) {
@@ -1385,25 +1509,71 @@
         }
 
         // Set up the poolable connection factory
-        createPoolableConnectionFactory(driverConnectionFactory, statementPoolFactory, abandonedConfig);
-
-        // Create and return the pooling data source to manage the connections
-        createDataSourceInstance();
+        boolean success = false;
+        try {
+            createPoolableConnectionFactory(driverConnectionFactory,
+                    statementPoolFactory, abandonedConfig);
+            success = true;
+        } catch (SQLException se) {
+            throw se;
+        } catch (RuntimeException rte) {
+            throw rte; 
+        } catch (Exception ex) {
+            throw new SQLException("Error creating connection factory", ex);
+        } finally {
+            if (!success) {
+                closeConnectionPool();
+            }
+        }
         
+        // Create the pooling data source to manage connections
+        success = false;
+        try {
+            createDataSourceInstance();
+            success = true;
+        } catch (SQLException se) {
+            throw se;
+        } catch (RuntimeException rte) {
+            throw rte;
+        } catch (Exception ex) {
+            throw new SQLException("Error creating datasource", ex);
+        } finally {
+            if (!success) {
+                closeConnectionPool();
+            }  
+        }
+        
+        // If initialSize > 0, preload the pool
         try {
             for (int i = 0 ; i < initialSize ; i++) {
                 connectionPool.addObject();
             }
         } catch (Exception e) {
+            closeConnectionPool();
             throw new SQLNestedException("Error preloading the connection pool", e);
         }
         
+        // If timeBetweenEvictionRunsMillis > 0, start the pool's evictor task
+        startPoolMaintenance();
+        
         return dataSource;
     }
 
     /**
-     * Creates a JDBC connection factory for this datasource.  This method only
-     * exists so subclasses can replace the implementation class.
+     * Creates a JDBC connection factory for this datasource.  The JDBC driver
+     * is loaded using the following algorithm:
+     * <ol>
+     * <li>If {@link #driverClassName} is specified that class is loaded using
+     * the {@link ClassLoader} of this class or, if {@link #driverClassLoader}
+     * is set, {@link #driverClassName} is loaded with the specified
+     * {@link ClassLoader}.</li>
+     * <li>If {@link #driverClassName} is specified and the previous attempt
+     * fails, the class is loaded using the context class loader of the current
+     * thread.</li>
+     * <li>If a driver still isn't loaded one is loaded via the
+     * {@link DriverManager} using the specified {@link #url}.
+     * </ol>
+     * This method exists so subclasses can replace the implementation class.
      */
     protected ConnectionFactory createConnectionFactory() throws SQLException {
         // Load the JDBC driver class
@@ -1412,9 +1582,10 @@
             try {
                 try {
                     if (driverClassLoader == null) {
-                        Class.forName(driverClassName);
+                        driverFromCCL = Class.forName(driverClassName);
                     } else {
-                        Class.forName(driverClassName, true, driverClassLoader);
+                        driverFromCCL = Class.forName(
+                                driverClassName, true, driverClassLoader);
                     }
                 } catch (ClassNotFoundException cnfe) {
                     driverFromCCL = Thread.currentThread(
@@ -1481,6 +1652,12 @@
     /**
      * Creates a connection pool for this datasource.  This method only exists
      * so subclasses can replace the implementation class.
+     * 
+     * This implementation configures all pool properties other than 
+     * timeBetweenEvictionRunsMillis.  Setting that property is deferred to
+     * {@link #startPoolMaintenance()}, since setting timeBetweenEvictionRunsMillis
+     * to a positive value causes {@link GenericObjectPool}'s eviction timer
+     * to be started.
      */
     protected void createConnectionPool() {
         // Create an object pool to contain our active connections
@@ -1497,16 +1674,41 @@
         gop.setMaxWait(maxWait);
         gop.setTestOnBorrow(testOnBorrow);
         gop.setTestOnReturn(testOnReturn);
-        gop.setTimeBetweenEvictionRunsMillis(timeBetweenEvictionRunsMillis);
         gop.setNumTestsPerEvictionRun(numTestsPerEvictionRun);
         gop.setMinEvictableIdleTimeMillis(minEvictableIdleTimeMillis);
         gop.setTestWhileIdle(testWhileIdle);
+        gop.setLifo(lifo);
         connectionPool = gop;
     }
+    
+    /**
+     * Closes the connection pool, silently swallowing any exception that occurs.
+     */
+    private void closeConnectionPool() {
+        GenericObjectPool oldpool = connectionPool;
+        connectionPool = null;
+        try {
+            if (oldpool != null) {
+                oldpool.close();
+            }
+        } catch(Exception e) {
+            // Do not propagate
+        }
+    }
+    
+    /**
+     * Starts the connection pool maintenance task, if configured. 
+     */
+    protected void startPoolMaintenance() {
+        if (connectionPool != null && timeBetweenEvictionRunsMillis > 0) {
+            connectionPool.setTimeBetweenEvictionRunsMillis(
+                    timeBetweenEvictionRunsMillis);
+        }
+    }
 
     /**
      * Creates the actual data source instance.  This method only exists so
-     * subclasses can replace the implementation class.
+     * that subclasses can replace the implementation class.
      * 
      * @throws SQLException if unable to create a datasource instance
      */
diff -uNr commons-dbcp-1.4-src/src/java/org/apache/commons/dbcp/BasicDataSourceFactory.java commons-dbcp-1.4.x/src/java/org/apache/commons/dbcp/BasicDataSourceFactory.java
--- commons-dbcp-1.4-src/src/java/org/apache/commons/dbcp/BasicDataSourceFactory.java	2010-02-08 01:59:20.000000000 +0900
+++ commons-dbcp-1.4.x/src/java/org/apache/commons/dbcp/BasicDataSourceFactory.java	2011-05-02 10:58:39.406969000 +0900
@@ -41,7 +41,7 @@
  *
  * @author Craig R. McClanahan
  * @author Dirk Verbeeck
- * @version $Revision: 828639 $ $Date: 2009-10-22 06:27:43 -0400 (Thu, 22 Oct 2009) $
+ * @version $Revision: 1098458 $ $Date: 2011-05-02 10:58:39 +0900 (Mon, 02 May 2011) $
  */
 public class BasicDataSourceFactory implements ObjectFactory {
 
@@ -50,6 +50,7 @@
     private final static String PROP_DEFAULTTRANSACTIONISOLATION = "defaultTransactionIsolation";
     private final static String PROP_DEFAULTCATALOG = "defaultCatalog";
     private final static String PROP_DRIVERCLASSNAME = "driverClassName";
+    private final static String PROP_LIFO = "lifo";
     private final static String PROP_MAXACTIVE = "maxActive";
     private final static String PROP_MAXIDLE = "maxIdle";
     private final static String PROP_MINIDLE = "minIdle";
@@ -60,6 +61,7 @@
     private final static String PROP_TIMEBETWEENEVICTIONRUNSMILLIS = "timeBetweenEvictionRunsMillis";
     private final static String PROP_NUMTESTSPEREVICTIONRUN = "numTestsPerEvictionRun";
     private final static String PROP_MINEVICTABLEIDLETIMEMILLIS = "minEvictableIdleTimeMillis";
+    private final static String PROP_SOFTMINEVICTABLEIDLETIMEMILLIS = "softMinEvictableIdleTimeMillis";
     private final static String PROP_TESTWHILEIDLE = "testWhileIdle";
     private final static String PROP_PASSWORD = "password";
     private final static String PROP_URL = "url";
@@ -67,11 +69,11 @@
     private final static String PROP_VALIDATIONQUERY = "validationQuery";
     private final static String PROP_VALIDATIONQUERY_TIMEOUT = "validationQueryTimeout";
     /**
-     * The property name for initConnectionSqls.
+     * The property name for connectionInitSqls.
      * The associated value String must be of the form [query;]*
      * @since 1.3
      */
-    private final static String PROP_INITCONNECTIONSQLS = "initConnectionSqls";
+    private final static String PROP_CONNECTIONINITSQLS = "connectionInitSqls";
     private final static String PROP_ACCESSTOUNDERLYINGCONNECTIONALLOWED = "accessToUnderlyingConnectionAllowed";
     private final static String PROP_REMOVEABANDONED = "removeAbandoned";
     private final static String PROP_REMOVEABANDONEDTIMEOUT = "removeAbandonedTimeout";
@@ -86,6 +88,7 @@
         PROP_DEFAULTTRANSACTIONISOLATION,
         PROP_DEFAULTCATALOG,
         PROP_DRIVERCLASSNAME,
+        PROP_LIFO,
         PROP_MAXACTIVE,
         PROP_MAXIDLE,
         PROP_MINIDLE,
@@ -96,13 +99,14 @@
         PROP_TIMEBETWEENEVICTIONRUNSMILLIS,
         PROP_NUMTESTSPEREVICTIONRUN,
         PROP_MINEVICTABLEIDLETIMEMILLIS,
+        PROP_SOFTMINEVICTABLEIDLETIMEMILLIS,
         PROP_TESTWHILEIDLE,
         PROP_PASSWORD,
         PROP_URL,
         PROP_USERNAME,
         PROP_VALIDATIONQUERY,
         PROP_VALIDATIONQUERY_TIMEOUT,
-        PROP_INITCONNECTIONSQLS,
+        PROP_CONNECTIONINITSQLS,
         PROP_ACCESSTOUNDERLYINGCONNECTIONALLOWED,
         PROP_REMOVEABANDONED,
         PROP_REMOVEABANDONEDTIMEOUT,
@@ -218,6 +222,11 @@
             dataSource.setDriverClassName(value);
         }
 
+        value = properties.getProperty(PROP_LIFO);
+        if (value != null) {
+            dataSource.setLifo(Boolean.valueOf(value).booleanValue());
+        }
+        
         value = properties.getProperty(PROP_MAXACTIVE);
         if (value != null) {
             dataSource.setMaxActive(Integer.parseInt(value));
@@ -267,6 +276,11 @@
         if (value != null) {
             dataSource.setMinEvictableIdleTimeMillis(Long.parseLong(value));
         }
+        
+        value = properties.getProperty(PROP_SOFTMINEVICTABLEIDLETIMEMILLIS);
+        if (value != null) {
+            dataSource.setSoftMinEvictableIdleTimeMillis(Long.parseLong(value));
+        }
 
         value = properties.getProperty(PROP_TESTWHILEIDLE);
         if (value != null) {
@@ -328,7 +342,7 @@
             dataSource.setMaxOpenPreparedStatements(Integer.parseInt(value));
         }
 
-        value = properties.getProperty(PROP_INITCONNECTIONSQLS);
+        value = properties.getProperty(PROP_CONNECTIONINITSQLS);
         if (value != null) {
             StringTokenizer tokenizer = new StringTokenizer(value, ";");
             dataSource.setConnectionInitSqls(Collections.list(tokenizer));
diff -uNr commons-dbcp-1.4-src/src/java/org/apache/commons/dbcp/DelegatingCallableStatement.java commons-dbcp-1.4.x/src/java/org/apache/commons/dbcp/DelegatingCallableStatement.java
--- commons-dbcp-1.4-src/src/java/org/apache/commons/dbcp/DelegatingCallableStatement.java	2010-02-08 01:59:20.000000000 +0900
+++ commons-dbcp-1.4.x/src/java/org/apache/commons/dbcp/DelegatingCallableStatement.java	2011-04-29 06:46:47.432072000 +0900
@@ -53,7 +53,7 @@
  * @author Glenn L. Nielsen
  * @author James House
  * @author Dirk Verbeeck
- * @version $Revision: 883941 $ $Date: 2009-11-24 19:58:50 -0500 (Tue, 24 Nov 2009) $
+ * @version $Revision: 1097625 $ $Date: 2011-04-29 06:46:47 +0900 (Fri, 29 Apr 2011) $
  */
 public class DelegatingCallableStatement extends DelegatingPreparedStatement
         implements CallableStatement {
@@ -72,6 +72,7 @@
     }
 
     public boolean equals(Object obj) {
+    	if (this == obj) return true;
         CallableStatement delegate = (CallableStatement) getInnermostDelegate();
         if (delegate == null) {
             return false;
diff -uNr commons-dbcp-1.4-src/src/java/org/apache/commons/dbcp/DelegatingConnection.java commons-dbcp-1.4.x/src/java/org/apache/commons/dbcp/DelegatingConnection.java
--- commons-dbcp-1.4-src/src/java/org/apache/commons/dbcp/DelegatingConnection.java	2010-02-08 01:59:20.000000000 +0900
+++ commons-dbcp-1.4.x/src/java/org/apache/commons/dbcp/DelegatingConnection.java	2011-05-03 09:40:07.520020000 +0900
@@ -60,7 +60,7 @@
  * @author Glenn L. Nielsen
  * @author James House
  * @author Dirk Verbeeck
- * @version $Revision: 896719 $ $Date: 2010-01-06 18:42:22 -0500 (Wed, 06 Jan 2010) $
+ * @version $Revision: 1098877 $ $Date: 2011-05-03 09:40:07 +0900 (Tue, 03 May 2011) $
  */
 public class DelegatingConnection extends AbandonedTrace
         implements Connection {
@@ -182,12 +182,10 @@
             return true;
         }
         Connection delegate = getInnermostDelegateInternal();
-        if (delegate == null) {
-            return false;
-        }
         if (obj instanceof DelegatingConnection) {    
             DelegatingConnection c = (DelegatingConnection) obj;
-            return c.innermostDelegateEquals(delegate);
+            Connection cDelegate = c.getInnermostDelegateInternal();
+            return delegate == cDelegate || (delegate != null && delegate.equals(cDelegate));
         }
         else {
             return delegate.equals(obj);
diff -uNr commons-dbcp-1.4-src/src/java/org/apache/commons/dbcp/DelegatingDatabaseMetaData.java commons-dbcp-1.4.x/src/java/org/apache/commons/dbcp/DelegatingDatabaseMetaData.java
--- commons-dbcp-1.4-src/src/java/org/apache/commons/dbcp/DelegatingDatabaseMetaData.java	2010-02-08 01:59:20.000000000 +0900
+++ commons-dbcp-1.4.x/src/java/org/apache/commons/dbcp/DelegatingDatabaseMetaData.java	2011-04-29 06:46:47.432072000 +0900
@@ -26,20 +26,14 @@
 import java.sql.SQLException;
 
 /**
- * A base delegating implementation of {@link DatabaseMetaData}.
- * <p>
- * Those methods that create {@link ResultSet} objects, are wrapped to
+ * <p>A base delegating implementation of {@link DatabaseMetaData}.</p>
+ * 
+ * <p>Methods that create {@link ResultSet} objects are wrapped to
  * create {@link DelegatingResultSet} objects and the remaining methods
  * simply call the corresponding method on the "delegate"
- * provided in my constructor.
- * <p>
- * Extends AbandonedTrace to implement DatabaseMetaData tracking and
- * logging of code which created the DatabaseMetaData. Tracking
- * the DatabaseMetaData ensures that the Connection which created it can
- * close any associated ResultSets on Connection close.
+ * provided in the constructor.</p>
  */
-public class DelegatingDatabaseMetaData extends AbandonedTrace
-        implements DatabaseMetaData {
+public class DelegatingDatabaseMetaData implements DatabaseMetaData {
 
     /** My delegate {@link DatabaseMetaData} */
     protected DatabaseMetaData _meta;
@@ -49,7 +43,7 @@
 
     public DelegatingDatabaseMetaData(DelegatingConnection c,
             DatabaseMetaData m) {
-        super(c);
+        super();
         _conn = c;
         _meta = m;
     }
@@ -59,6 +53,7 @@
     }
 
     public boolean equals(Object obj) {
+    	if (this == obj) return true;
         DatabaseMetaData delegate = getInnermostDelegate();
         if (delegate == null) {
             return false;
diff -uNr commons-dbcp-1.4-src/src/java/org/apache/commons/dbcp/DelegatingPreparedStatement.java commons-dbcp-1.4.x/src/java/org/apache/commons/dbcp/DelegatingPreparedStatement.java
--- commons-dbcp-1.4-src/src/java/org/apache/commons/dbcp/DelegatingPreparedStatement.java	2010-02-08 01:59:20.000000000 +0900
+++ commons-dbcp-1.4.x/src/java/org/apache/commons/dbcp/DelegatingPreparedStatement.java	2011-04-29 06:46:47.432072000 +0900
@@ -52,7 +52,7 @@
  * @author Glenn L. Nielsen
  * @author James House
  * @author Dirk Verbeeck
- * @version $Revision: 883941 $ $Date: 2009-11-24 19:58:50 -0500 (Tue, 24 Nov 2009) $
+ * @version $Revision: 1097625 $ $Date: 2011-04-29 06:46:47 +0900 (Fri, 29 Apr 2011) $
  */
 public class DelegatingPreparedStatement extends DelegatingStatement
         implements PreparedStatement {
@@ -71,6 +71,7 @@
     }
 
     public boolean equals(Object obj) {
+    	if (this == obj) return true;
         PreparedStatement delegate = (PreparedStatement) getInnermostDelegate();
         if (delegate == null) {
             return false;
@@ -92,6 +93,9 @@
 
     public ResultSet executeQuery() throws SQLException {
         checkOpen();
+        if (_conn != null) {
+            _conn.setLastUsed();
+        }
         try {
             return DelegatingResultSet.wrapResultSet(this,((PreparedStatement)_stmt).executeQuery());
         }
@@ -101,8 +105,18 @@
         }
     }
 
-    public int executeUpdate() throws SQLException
-    { checkOpen(); try { return ((PreparedStatement)_stmt).executeUpdate(); } catch (SQLException e) { handleException(e); return 0; } }
+    public int executeUpdate() throws SQLException {
+        checkOpen();
+        if (_conn != null) {
+            _conn.setLastUsed();
+        }
+        try {
+            return ((PreparedStatement) _stmt).executeUpdate();
+        } catch (SQLException e) {
+            handleException(e);
+            return 0;
+        }
+    }
 
     public void setNull(int parameterIndex, int sqlType) throws SQLException
     { checkOpen(); try { ((PreparedStatement)_stmt).setNull(parameterIndex,sqlType); } catch (SQLException e) { handleException(e); } }
@@ -168,8 +182,18 @@
     public void setObject(int parameterIndex, Object x) throws SQLException
     { checkOpen(); try { ((PreparedStatement)_stmt).setObject(parameterIndex, x); } catch (SQLException e) { handleException(e); } }
 
-    public boolean execute() throws SQLException
-    { checkOpen(); try { return ((PreparedStatement)_stmt).execute(); } catch (SQLException e) { handleException(e); return false; } }
+    public boolean execute() throws SQLException {
+        checkOpen();
+        if (_conn != null) {
+            _conn.setLastUsed();
+        }
+        try {
+            return ((PreparedStatement) _stmt).execute();
+        } catch (SQLException e) {
+            handleException(e);
+            return false;
+        }
+    }
 
     public void addBatch() throws SQLException
     { checkOpen(); try { ((PreparedStatement)_stmt).addBatch(); } catch (SQLException e) { handleException(e); } }
diff -uNr commons-dbcp-1.4-src/src/java/org/apache/commons/dbcp/DelegatingResultSet.java commons-dbcp-1.4.x/src/java/org/apache/commons/dbcp/DelegatingResultSet.java
--- commons-dbcp-1.4-src/src/java/org/apache/commons/dbcp/DelegatingResultSet.java	2010-02-08 01:59:20.000000000 +0900
+++ commons-dbcp-1.4.x/src/java/org/apache/commons/dbcp/DelegatingResultSet.java	2011-04-29 06:46:47.432072000 +0900
@@ -56,7 +56,7 @@
  * @author Glenn L. Nielsen
  * @author James House
  * @author Dirk Verbeeck
- * @version $Revision: 883941 $ $Date: 2009-11-24 19:58:50 -0500 (Tue, 24 Nov 2009) $
+ * @version $Revision: 1097625 $ $Date: 2011-04-29 06:46:47 +0900 (Fri, 29 Apr 2011) $
  */
 public class DelegatingResultSet extends AbandonedTrace implements ResultSet {
 
@@ -118,6 +118,7 @@
     }
 
     public boolean equals(Object obj) {
+    	if (this == obj) return true;
         ResultSet delegate = getInnermostDelegate();
         if (delegate == null) {
             return false;
diff -uNr commons-dbcp-1.4-src/src/java/org/apache/commons/dbcp/DelegatingStatement.java commons-dbcp-1.4.x/src/java/org/apache/commons/dbcp/DelegatingStatement.java
--- commons-dbcp-1.4-src/src/java/org/apache/commons/dbcp/DelegatingStatement.java	2010-02-08 01:59:20.000000000 +0900
+++ commons-dbcp-1.4.x/src/java/org/apache/commons/dbcp/DelegatingStatement.java	2011-04-29 06:46:47.432072000 +0900
@@ -41,7 +41,7 @@
  * @author Glenn L. Nielsen
  * @author James House
  * @author Dirk Verbeeck
- * @version $Revision: 896443 $ $Date: 2010-01-06 08:42:27 -0500 (Wed, 06 Jan 2010) $
+ * @version $Revision: 1097625 $ $Date: 2011-04-29 06:46:47 +0900 (Fri, 29 Apr 2011) $
  */
 public class DelegatingStatement extends AbandonedTrace implements Statement {
     /** My delegate. */
@@ -73,10 +73,17 @@
     }
 
     /**
-     * This method considers two objects to be equal 
-     * if the underlying jdbc objects are equal.
+     * <p>This method considers two objects to be equal 
+     * if the underlying jdbc objects are equal.</p>
+     * 
+     * <p>If {@code obj} is a DelegatingStatement, this DelegatingStatement's 
+     * {@link #getInnermostDelegate() innermostDelegate} is compared with
+     * the innermost delegate of obj; otherwise obj itself is compared with the
+     * the Statement returned by {@link #getInnermostDelegate()}.</p>
+     * 
      */
     public boolean equals(Object obj) {
+    	if (obj == this) return true;
         Statement delegate = getInnermostDelegate();
         if (delegate == null) {
             return false;
@@ -204,6 +211,9 @@
 
     public ResultSet executeQuery(String sql) throws SQLException {
         checkOpen();
+        if (_conn != null) {
+            _conn.setLastUsed();
+        }
         try {
             return DelegatingResultSet.wrapResultSet(this,_stmt.executeQuery(sql));
         }
@@ -224,8 +234,17 @@
         }
     }
 
-    public int executeUpdate(String sql) throws SQLException
-    { checkOpen(); try { return _stmt.executeUpdate(sql); } catch (SQLException e) { handleException(e); return 0; } }
+    public int executeUpdate(String sql) throws SQLException {
+        checkOpen();
+        if (_conn != null) {
+            _conn.setLastUsed();
+        }
+        try {
+            return _stmt.executeUpdate(sql);
+        } catch (SQLException e) {
+            handleException(e); return 0;
+        }
+    }
 
     public int getMaxFieldSize() throws SQLException
     { checkOpen(); try { return _stmt.getMaxFieldSize(); } catch (SQLException e) { handleException(e); return 0; } }
@@ -260,8 +279,18 @@
     public void setCursorName(String name) throws SQLException
     { checkOpen(); try { _stmt.setCursorName(name); } catch (SQLException e) { handleException(e); } }
 
-    public boolean execute(String sql) throws SQLException
-    { checkOpen(); try { return _stmt.execute(sql); } catch (SQLException e) { handleException(e); return false; } }
+    public boolean execute(String sql) throws SQLException {
+        checkOpen();
+        if (_conn != null) {
+            _conn.setLastUsed();
+        }
+        try {
+            return _stmt.execute(sql);
+        } catch (SQLException e) {
+            handleException(e);
+            return false;
+        }
+    }
 
     public int getUpdateCount() throws SQLException
     { checkOpen(); try { return _stmt.getUpdateCount(); } catch (SQLException e) { handleException(e); return 0; } }
@@ -293,8 +322,18 @@
     public void clearBatch() throws SQLException
     { checkOpen(); try { _stmt.clearBatch(); } catch (SQLException e) { handleException(e); } }
 
-    public int[] executeBatch() throws SQLException
-    { checkOpen(); try { return _stmt.executeBatch(); } catch (SQLException e) { handleException(e); throw new AssertionError(); } }
+    public int[] executeBatch() throws SQLException {
+        checkOpen();
+        if (_conn != null) {
+            _conn.setLastUsed();
+        }
+        try {
+            return _stmt.executeBatch();
+        } catch (SQLException e) {
+            handleException(e);
+            throw new AssertionError();
+        }
+    }
 
     /**
      * Returns a String representation of this object.
@@ -319,23 +358,83 @@
         }
     }
 
-    public int executeUpdate(String sql, int autoGeneratedKeys) throws SQLException
-    { checkOpen(); try { return _stmt.executeUpdate(sql, autoGeneratedKeys); } catch (SQLException e) { handleException(e); return 0; } }
+    public int executeUpdate(String sql, int autoGeneratedKeys) throws SQLException {
+        checkOpen();
+        if (_conn != null) {
+            _conn.setLastUsed();
+        }
+        try {
+            return _stmt.executeUpdate(sql, autoGeneratedKeys);
+        } catch (SQLException e) {
+            handleException(e);
+            return 0;
+        }
+    }
 
-    public int executeUpdate(String sql, int columnIndexes[]) throws SQLException
-    { checkOpen(); try { return _stmt.executeUpdate(sql, columnIndexes); } catch (SQLException e) { handleException(e); return 0; } }
+    public int executeUpdate(String sql, int columnIndexes[]) throws SQLException {
+        checkOpen();
+        if (_conn != null) {
+            _conn.setLastUsed();
+        }
+        try {
+            return _stmt.executeUpdate(sql, columnIndexes);
+        } catch (SQLException e) {
+            handleException(e);
+            return 0;
+        }
+    }
 
-    public int executeUpdate(String sql, String columnNames[]) throws SQLException
-    { checkOpen(); try { return _stmt.executeUpdate(sql, columnNames); } catch (SQLException e) { handleException(e); return 0; } }
+    public int executeUpdate(String sql, String columnNames[]) throws SQLException {
+        checkOpen();
+        if (_conn != null) {
+            _conn.setLastUsed();
+        }
+        try {
+            return _stmt.executeUpdate(sql, columnNames);
+        } catch (SQLException e) {
+            handleException(e);
+            return 0;
+        }
+    }
 
-    public boolean execute(String sql, int autoGeneratedKeys) throws SQLException
-    { checkOpen(); try { return _stmt.execute(sql, autoGeneratedKeys); } catch (SQLException e) { handleException(e); return false; } }
+    public boolean execute(String sql, int autoGeneratedKeys) throws SQLException {
+        checkOpen();
+        if (_conn != null) {
+            _conn.setLastUsed();
+        }
+        try {
+            return _stmt.execute(sql, autoGeneratedKeys);
+        } catch (SQLException e) {
+            handleException(e);
+            return false;
+        }
+    }
 
-    public boolean execute(String sql, int columnIndexes[]) throws SQLException
-    { checkOpen(); try { return _stmt.execute(sql, columnIndexes); } catch (SQLException e) { handleException(e); return false; } }
+    public boolean execute(String sql, int columnIndexes[]) throws SQLException {
+        checkOpen();
+        if (_conn != null) {
+            _conn.setLastUsed();
+        }
+        try {
+            return _stmt.execute(sql, columnIndexes);
+        } catch (SQLException e) {
+            handleException(e);
+            return false;
+        }
+    }
 
-    public boolean execute(String sql, String columnNames[]) throws SQLException
-    { checkOpen(); try { return _stmt.execute(sql, columnNames); } catch (SQLException e) { handleException(e); return false; } }
+    public boolean execute(String sql, String columnNames[]) throws SQLException {
+        checkOpen();
+        if (_conn != null) {
+            _conn.setLastUsed();
+        }
+        try {
+            return _stmt.execute(sql, columnNames);
+        } catch (SQLException e) {
+            handleException(e);
+            return false;
+        }
+    }
 
     public int getResultSetHoldability() throws SQLException
     { checkOpen(); try { return _stmt.getResultSetHoldability(); } catch (SQLException e) { handleException(e); return 0; } }
diff -uNr commons-dbcp-1.4-src/src/java/org/apache/commons/dbcp/PoolingDriver.java commons-dbcp-1.4.x/src/java/org/apache/commons/dbcp/PoolingDriver.java
--- commons-dbcp-1.4-src/src/java/org/apache/commons/dbcp/PoolingDriver.java	2010-02-08 01:59:20.000000000 +0900
+++ commons-dbcp-1.4.x/src/java/org/apache/commons/dbcp/PoolingDriver.java	2011-04-29 06:46:47.432072000 +0900
@@ -47,7 +47,7 @@
  *
  * @author Rodney Waldhoff
  * @author Dirk Verbeeck
- * @version $Revision: 902692 $ $Date: 2010-01-24 22:28:54 -0500 (Sun, 24 Jan 2010) $
+ * @version $Revision: 1097625 $ $Date: 2011-04-29 06:46:47 +0900 (Fri, 29 Apr 2011) $
  */
 public class PoolingDriver implements Driver {
     /** Register myself with the {@link DriverManager}. */
@@ -304,6 +304,7 @@
         }
 
         public boolean equals(Object obj) {
+            if (this == obj) return true;
             if (delegate == null){
                 return false;
             }
diff -uNr commons-dbcp-1.4-src/src/java/org/apache/commons/dbcp/datasources/PerUserPoolDataSource.java commons-dbcp-1.4.x/src/java/org/apache/commons/dbcp/datasources/PerUserPoolDataSource.java
--- commons-dbcp-1.4-src/src/java/org/apache/commons/dbcp/datasources/PerUserPoolDataSource.java	2010-02-08 01:59:20.000000000 +0900
+++ commons-dbcp-1.4.x/src/java/org/apache/commons/dbcp/datasources/PerUserPoolDataSource.java	2011-03-23 08:13:41.883092000 +0900
@@ -55,7 +55,7 @@
  * 
  *
  * @author John D. McNally
- * @version $Revision: 907288 $ $Date: 2010-02-06 14:42:58 -0500 (Sat, 06 Feb 2010) $
+ * @version $Revision: 1084406 $ $Date: 2011-03-23 08:13:41 +0900 (Wed, 23 Mar 2011) $
  */
 public class PerUserPoolDataSource
     extends InstanceKeyDataSource {
@@ -416,7 +416,7 @@
                 throw new SQLNestedException("RegisterPool failed", ne);
             }
             try {
-                info = (PooledConnectionAndInfo)((ObjectPool) pool).borrowObject();
+                info = (PooledConnectionAndInfo)pool.borrowObject();
             } catch (Exception ex) {
                 throw (SQLException) new SQLException(
                 "Could not retrieve connection info from pool").initCause(ex);
diff -uNr commons-dbcp-1.4-src/src/site/xdoc/building.xml commons-dbcp-1.4.x/src/site/xdoc/building.xml
--- commons-dbcp-1.4-src/src/site/xdoc/building.xml	1970-01-01 09:00:00.000000000 +0900
+++ commons-dbcp-1.4.x/src/site/xdoc/building.xml	2009-11-14 09:52:23.394721000 +0900
@@ -0,0 +1,60 @@
+<?xml version="1.0"?>
+<!--
+Licensed to the Apache Software Foundation (ASF) under one or more
+contributor license agreements.  See the NOTICE file distributed with
+this work for additional information regarding copyright ownership.
+The ASF licenses this file to You under the Apache License, Version 2.0
+(the "License"); you may not use this file except in compliance with
+the License.  You may obtain a copy of the License at
+
+     http://www.apache.org/licenses/LICENSE-2.0
+
+Unless required by applicable law or agreed to in writing, software
+distributed under the License is distributed on an "AS IS" BASIS,
+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+See the License for the specific language governing permissions and
+limitations under the License.
+-->
+<document>
+ <properties>
+  <title>Building</title>
+  <author email="dev@commons.apache.org">Commons Documentation Team</author>
+ </properties>
+<body>
+<!-- ================================================== -->
+<section name="Overview">
+<p>
+  Commons DBCP uses <a href="http://maven.apache.org">Maven</a> or
+  <a href="http://ant.apache.org">Ant</a> as a build system.
+  The maven build requires maven 2 and JDK 1.6.  The Ant build works with
+  JDK 1.4, 1.5 or 1.6.
+</p>
+</section>
+<!-- ================================================== -->
+<section name="Maven Goals">
+  <p>
+    To build a jar file, change into DBCP's root directory and run 
+    <strong><code>mvn package</code></strong>.
+    The result will be in the "target" subdirectory.
+  </p>
+  <p>
+    To build the Javadocs, run <strong><code>mvn javadoc:javadoc</code></strong>.
+    The result will be in "target/site/apidocs/".
+  </p>
+  <p>
+    To build the full website, run <strong><code>mvn site</code></strong>.
+    The result will be in "target/site".
+  </p>
+</section>
+<!-- ================================================== -->
+<section name="Ant Goals">
+  <p>
+    To build a jar file and the javadocs, change into DBCP's root directory
+    and run <strong><code>ant dist</code></strong>.
+    The result will be in the "dist" subdirectory.
+  </p>
+</section>
+
+<!-- ================================================== -->
+</body>
+</document>
diff -uNr commons-dbcp-1.4-src/src/site/xdoc/configuration.xml commons-dbcp-1.4.x/src/site/xdoc/configuration.xml
--- commons-dbcp-1.4-src/src/site/xdoc/configuration.xml	1970-01-01 09:00:00.000000000 +0900
+++ commons-dbcp-1.4.x/src/site/xdoc/configuration.xml	2011-05-02 10:58:39.406969000 +0900
@@ -0,0 +1,392 @@
+<?xml version="1.0" encoding="ISO-8859-1"?>
+ <!--
+   Licensed to the Apache Software Foundation (ASF) under one or more
+  contributor license agreements.  See the NOTICE file distributed with
+  this work for additional information regarding copyright ownership.
+  The ASF licenses this file to You under the Apache License, Version 2.0
+  (the "License"); you may not use this file except in compliance with
+  the License.  You may obtain a copy of the License at
+
+       http://www.apache.org/licenses/LICENSE-2.0
+
+   Unless required by applicable law or agreed to in writing, software
+   distributed under the License is distributed on an "AS IS" BASIS,
+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+   See the License for the specific language governing permissions and
+   limitations under the License.
+  -->
+<document>
+
+ <properties>
+  <title>Configuration</title>
+  <author email="dev@commons.apache.org">Commons Documentation Team</author>
+ </properties>
+
+ <body>
+
+<!--
+<section name="Introduction">
+<p>TODO: add section about tomcat configuration and avoiding the resource leak when reloading tomcat webapps.</p>
+</section>
+-->
+
+<!--
+<section name="Dynamic Properties">
+maxActive
+maxIdle
+minIdle
+maxWait
+testOnBorrow
+testOnReturn
+timeBetweenEvictionRunsMillis
+numTestsPerEvictionRun
+minEvictableIdleTimeMillis
+testWhileIdle
+
+</section>
+-->
+
+<section name="Parameters">
+
+<table>
+<hr><th>Parameter</th><th>Description</th></hr>
+<tr>
+   <td>username</td>
+   <td>The connection username to be passed to our JDBC driver to establish a connection.</td>
+</tr>
+<tr>
+   <td>password</td>
+   <td>The connection password to be passed to our JDBC driver to establish a connection.</td>
+</tr>
+<tr>
+   <td>url</td>
+   <td>The connection URL to be passed to our JDBC driver to establish a connection.</td>
+</tr>
+<tr>
+   <td>driverClassName</td>
+   <td>The fully qualified Java class name of the JDBC driver to be used.</td>
+</tr>
+<tr>
+   <td>connectionProperties</td>
+   <td>The connection properties that will be sent to our JDBC driver when establishing new connections.
+       <br/>Format of the string must be [propertyName=property;]*
+       <br/><strong>NOTE</strong> - The "user" and "password" properties will be passed explicitly, 
+       so they do not need to be included here.
+   </td>
+</tr>
+</table>
+
+
+<table>
+<hr><th>Parameter</th><th>Default</th><th>Description</th></hr>
+<tr>
+   <td>defaultAutoCommit</td>
+   <td>true</td>
+   <td>The default auto-commit state of connections created by this pool.</td>
+</tr>
+<tr>
+   <td>defaultReadOnly</td>
+   <td>driver default</td>
+   <td>The default read-only state of connections created by this pool.
+       If not set then the setReadOnly method will not be called.
+       (Some drivers don't support read only mode, ex: Informix)
+   </td>
+</tr>
+<tr>
+   <td>defaultTransactionIsolation</td>
+   <td>driver default</td>
+   <td>The default TransactionIsolation state of connections created by this pool.
+       One of the following: (see 
+       <a href="http://java.sun.com/j2se/1.4.2/docs/api/java/sql/Connection.html#field_summary">javadoc</a>)
+       <ul>
+          <li>NONE</li>
+          <li>READ_COMMITTED</li>
+          <li>READ_UNCOMMITTED</li>
+          <li>REPEATABLE_READ</li>
+          <li>SERIALIZABLE</li>
+       </ul>
+   </td>
+</tr>
+<tr>
+   <td>defaultCatalog</td>
+   <td></td>
+   <td>The default catalog of connections created by this pool.</td>
+</tr>
+</table>
+
+
+<table>
+<hr><th>Parameter</th><th>Default</th><th>Description</th></hr>
+<tr>
+   <td>initialSize</td>
+   <td>0</td>
+   <td>
+      The initial number of connections that are created when the pool
+      is started.
+      <br/>Since: 1.2
+   </td>
+</tr>
+<tr>
+   <td>maxActive</td>
+   <td>8</td>
+   <td>
+      The maximum number of active connections that can be allocated from
+      this pool at the same time, or negative for no limit.
+   </td>
+</tr>
+<tr>
+   <td>maxIdle</td>
+   <td>8</td>
+   <td>
+      The maximum number of connections that can remain idle in the
+      pool, without extra ones being released, or negative for no limit.
+   </td>
+</tr>
+<tr>
+   <td>minIdle</td>
+   <td>0</td>
+   <td>
+      The minimum number of connections that can remain idle in the
+      pool, without extra ones being created, or zero to create none.
+   </td>
+</tr>
+<tr>
+   <td>maxWait</td>
+   <td>indefinitely</td>
+   <td>
+      The maximum number of milliseconds that the pool will wait (when there
+      are no available connections) for a connection to be returned before
+      throwing an exception, or -1 to wait indefinitely.
+   </td>
+</tr>
+</table>
+<p>
+<img src="images/icon_warning_sml.gif"/>
+<strong>NOTE</strong>: If maxIdle is set too low on heavily loaded systems it is
+possible you will see connections being closed and almost immediately new
+connections being opened. This is a result of the active threads momentarily
+closing connections faster than they are opening them, causing the number of
+idle connections to rise above maxIdle. The best value for maxIdle for heavily
+loaded system will vary but the default is a good starting point.
+</p>
+
+
+<table>
+<hr><th>Parameter</th><th>Default</th><th>Description</th></hr>
+<tr>
+   <td>validationQuery</td>
+   <td></td>
+   <td>
+The SQL query that will be used to validate connections from this pool
+before returning them to the caller.  If specified, this query
+<strong>MUST</strong> be an SQL SELECT statement that returns at least
+one row.
+   </td>
+</tr>
+<tr>
+   <td>testOnBorrow</td>
+   <td>true</td>
+   <td>
+      The indication of whether objects will be validated before being
+      borrowed from the pool.  If the object fails to validate, it will be
+      dropped from the pool, and we will attempt to borrow another.<br/>
+      <strong>NOTE</strong> - for a <code>true</code> value to have any effect,
+      the <code>validationQuery</code> parameter must be set to a non-null
+      string.
+   </td>
+</tr>
+<tr>
+   <td>testOnReturn</td>
+   <td>false</td>
+   <td>
+      The indication of whether objects will be validated before being
+      returned to the pool. <br/> <strong>NOTE</strong> - for a 
+      <code>true</code> value to have any effect, the 
+      <code>validationQuery</code> parameter must be set to a non-null string.
+   </td>
+</tr>
+<tr>
+   <td>testWhileIdle</td>
+   <td>false</td>
+   <td>
+      The indication of whether objects will be validated by the idle object
+      evictor (if any).  If an object fails to validate, it will be dropped
+      from the pool. <br/> <strong>NOTE</strong> - for a <code>true</code>
+      value to have any effect, the <code>validationQuery</code> parameter
+      must be set to a non-null string.
+   </td>
+</tr>
+<tr>
+   <td>timeBetweenEvictionRunsMillis</td>
+   <td>-1</td>
+   <td>
+      The number of milliseconds to sleep between runs of the idle object
+      evictor thread.  When non-positive, no idle object evictor thread will
+      be run.
+   </td>
+</tr>
+<tr>
+   <td>numTestsPerEvictionRun</td>
+   <td>3</td>
+   <td>
+      The number of objects to examine during each run of the idle object
+      evictor thread (if any).
+   </td>
+</tr>
+<tr>
+   <td>minEvictableIdleTimeMillis</td>
+   <td>1000 * 60 * 30</td>
+   <td>
+      The minimum amount of time an object may sit idle in the pool before it
+      is eligable for eviction by the idle object evictor (if any).
+   </td>
+</tr>
+<tr>
+   <td>softMiniEvictableIdleTimeMillis</td>
+   <td>-1</td>
+   <td>
+      The minimum amount of time a connection may sit idle in the pool before
+      it is eligible for eviction by the idle connection evictor, with
+      the extra condition that at least "minIdle" connections remain in the
+      pool. When miniEvictableIdleTimeMillis is set to a positive value,
+      miniEvictableIdleTimeMillis is examined first by the idle 
+      connection evictor - i.e. when idle connections are visited by the
+      evictor, idle time is first compared against miniEvictableIdleTimeMillis
+      (without considering the number of idle connections in the pool) and then
+      against softMinEvictableIdleTimeMillis, including the minIdle constraint.
+   </td>
+ </tr>
+ <tr>
+     <td>connectionInitSqls</td>
+     <td>null</td>
+     <td>
+  A Collection of SQL statements that will be used to initialize physical 
+  connections when they are first created.  These statements are executed
+  only once - when the configured connection factory creates the connection.
+     </td>
+  </tr>
+  <tr>
+    <td>lifo</td>
+    <td>true</td>
+    <td>
+       True means that borrowObject returns the most recently used ("last in")
+       connection in the pool (if there are idle connections available).  False
+       means that the pool behaves as a FIFO queue - connections are taken from
+       the idle instance pool in the order that they are returned to the pool.
+    </td>
+  </tr>
+</table>
+
+<table>
+<hr><th>Parameter</th><th>Default</th><th>Description</th></hr><tr>
+   <td>poolPreparedStatements</td>
+   <td>false</td>
+   <td>Enable prepared statement pooling for this pool.</td>
+</tr>
+<tr>
+   <td>maxOpenPreparedStatements</td>
+   <td>unlimited</td>
+   <td>
+      The maximum number of open statements that can be allocated from
+      the statement pool at the same time, or zero for no limit.
+   </td>
+</tr>
+</table>
+<p>
+<img src="images/icon_info_sml.gif"/>
+This component has also the ability to pool PreparedStatements.
+When enabled a statement pool will be created for each Connection
+and PreparedStatements created by one of the following methods will be pooled:
+<ul>
+   <li>public PreparedStatement prepareStatement(String sql)</li>
+   <li>public PreparedStatement prepareStatement(String sql, int resultSetType, int resultSetConcurrency)</li>
+</ul>
+</p>
+<p>
+<img src="images/icon_warning_sml.gif"/>
+<strong>NOTE</strong> - Make sure your connection has some resources left for the other statements.
+Pooling PreparedStatements may keep their cursors open in the database, causing a connection to run out of cursors,
+especially if maxOpenPreparedStatements is left at the default (unlimited) and an application opens a large number
+of different PreparedStatements per connection. To avoid this problem, maxOpenPreparedStatements should be set to a
+value less than the maximum number of cursors that can be open on a Connection.
+</p>
+
+
+<table>
+<hr><th>Parameter</th><th>Default</th><th>Description</th></hr><tr>
+   <td>accessToUnderlyingConnectionAllowed</td>
+   <td>false</td>
+   <td>Controls if the PoolGuard allows access to the underlying connection.</td>
+</tr>
+</table>
+<p>When allowed you can access the underlying connection using the following construct:</p>
+<source>
+    Connection conn = ds.getConnection();
+    Connection dconn = ((DelegatingConnection) conn).getInnermostDelegate();
+    ...
+    conn.close()
+</source>
+<p>
+<img src="images/icon_info_sml.gif"/>
+Default is false, it is a potential dangerous operation and misbehaving programs can do harmfull things. (closing the underlying or continue using it when the guarded connection is already closed)
+Be carefull and only use when you need direct access to driver specific extentions.
+</p>
+<p>
+<img src="images/icon_warning_sml.gif"/>
+<b>NOTE:</b> Do not close the underlying connection, only the original one.
+</p>
+
+
+<table>
+<hr><th>Parameter</th><th>Default</th><th>Description</th></hr>
+<tr>
+   <td>removeAbandoned</td>
+   <td>false</td>
+   <td>
+      Flag to remove abandoned connections if they exceed the
+      removeAbandonedTimout.<br/>
+      If set to true a connection is considered abandoned and eligible
+      for removal if it has not been used for longer than the removeAbandonedTimeout.<br/>
+      Creating a Statement, PreparedStatement or CallableStatement or using
+      one of these to execute a query (using one of the execute methods)
+      resets the lastUsed property of the parent connection.<br/>
+      Setting this to true can recover db connections from poorly written
+      applications which fail to close a connection.
+   </td>
+</tr>
+<tr>
+   <td>removeAbandonedTimeout</td>
+   <td>300</td>
+   <td>Timeout in seconds before an abandoned connection can be removed.</td>
+</tr>
+<tr>
+   <td>logAbandoned</td>
+   <td>false</td>
+   <td>
+      Flag to log stack traces for application code which abandoned
+      a Statement or Connection.<br/>
+      Logging of abandoned Statements and Connections adds overhead
+      for every Connection open or new Statement because a stack   
+      trace has to be generated.  
+   </td>
+</tr>
+</table>
+<p>
+<img src="images/icon_info_sml.gif"/>
+If you have enabled "removeAbandoned" then it is possible that a connection is reclaimed by the pool because
+it is considered to be abandoned. This mechanism is triggered when (getNumIdle() &lt; 2) and
+(getNumActive() &gt; getMaxActive() - 3)
+</p>
+<p>
+<img src="images/icon_info_sml.gif"/>
+For example, maxActive=20 and 18 active connections and 1 idle connection would trigger the "removeAbandoned".
+But only the active connections that aren't used for more then "removeAbandonedTimeout" seconds are removed,
+default (300 sec). Traversing a resultset doesn't count as being used. Creating a Statement, PreparedStatement
+or CallableStatement or using one of these to execute a query (using one of the execute methods) resets
+the lastUsed property of the parent connection.
+</p>
+
+</section>
+
+</body>
+</document>
diff -uNr commons-dbcp-1.4-src/src/site/xdoc/download_dbcp.xml commons-dbcp-1.4.x/src/site/xdoc/download_dbcp.xml
--- commons-dbcp-1.4-src/src/site/xdoc/download_dbcp.xml	1970-01-01 09:00:00.000000000 +0900
+++ commons-dbcp-1.4.x/src/site/xdoc/download_dbcp.xml	2010-03-08 09:11:50.546829000 +0900
@@ -0,0 +1,168 @@
+<?xml version="1.0"?>
+<!--
+Licensed to the Apache Software Foundation (ASF) under one or more
+contributor license agreements.  See the NOTICE file distributed with
+this work for additional information regarding copyright ownership.
+The ASF licenses this file to You under the Apache License, Version 2.0
+(the "License"); you may not use this file except in compliance with
+the License.  You may obtain a copy of the License at
+
+     http://www.apache.org/licenses/LICENSE-2.0
+
+Unless required by applicable law or agreed to in writing, software
+distributed under the License is distributed on an "AS IS" BASIS,
+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+See the License for the specific language governing permissions and
+limitations under the License.
+-->
+<!--
+ +======================================================================+
+ |****                                                              ****|
+ |****      THIS FILE IS GENERATED BY THE COMMONS BUILD PLUGIN      ****|
+ |****                    DO NOT EDIT DIRECTLY                      ****|
+ |****                                                              ****|
+ +======================================================================+
+ | TEMPLATE FILE: download-page-template.xml                            |
+ | commons-build-plugin/trunk/src/main/resources/commons-xdoc-templates |
+ +======================================================================+
+ |                                                                      |
+ | 1) Re-generate using: mvn commons:download-page                      |
+ |                                                                      |
+ | 2) Set the following properties in the component's pom:              |
+ |    - commons.componentid (required, alphabetic, lower case)          |
+ |    - commons.release.version (required)                              |
+ |    - commons.binary.suffix (optional)                                |
+ |      (defaults to "-bin", set to "" for pre-maven2 releases)         |
+ |                                                                      |
+ | 3) Example Properties                                                |
+ |                                                                      |
+ |  <properties>                                                        |
+ |    <commons.componentid>math</commons.componentid>                   |
+ |    <commons.release.version>1.2</commons.release.version>            |
+ |  </properties>                                                       |
+ |                                                                      |
+ +======================================================================+
+-->
+<document>
+  <properties>
+    <title>Download Commons DBCP</title>
+    <author email="dev@commons.apache.org">Commons Documentation Team</author>
+  </properties>
+  <body>
+    <section name="Download Commons DBCP">
+    <subsection name="Using a Mirror">
+      <p>
+        We recommend you use a mirror to download our release
+        builds, but you <strong>must</strong> verify the integrity of
+        the downloaded files using signatures downloaded from our main 
+        distribution directories. Recent releases (48 hours) may not yet
+        be available from the mirrors.
+      </p>
+
+      <p>
+        You are currently using <b>[preferred]</b>.  If you
+        encounter a problem with this mirror, please select another
+        mirror.  If all mirrors are failing, there are <i>backup</i>
+        mirrors (at the end of the mirrors list) that should be
+        available.
+        <br></br>
+        [if-any logo]<a href="[link]"><img align="right" src="[logo]" border="0"></img></a>[end]
+      </p>
+
+      <form action="[location]" method="get" id="SelectMirror">
+        <p>
+          Other mirrors: 
+          <select name="Preferred">
+          [if-any http]
+            [for http]<option value="[http]">[http]</option>[end]
+          [end]
+          [if-any ftp]
+            [for ftp]<option value="[ftp]">[ftp]</option>[end]
+          [end]
+          [if-any backup]
+            [for backup]<option value="[backup]">[backup] (backup)</option>[end]
+          [end]
+          </select>
+          <input type="submit" value="Change"></input>
+        </p>
+      </form>
+
+      <p>
+        The <a href="http://www.apache.org/dist/commons/KEYS">KEYS</a>
+        link links to the code signing keys used to sign the product.
+        The <code>PGP</code> link downloads the OpenPGP compatible signature from our main site. 
+        The <code>MD5</code> link downloads the checksum from the main site.
+      </p>
+    </subsection>
+    </section>
+    <section name="Commons DBCP 1.4 for JDBC 4 (JDK 1.6)">
+      <subsection name="Binaries">
+        <table>
+          <tr>
+              <td><a href="[preferred]/commons/dbcp/binaries/commons-dbcp-1.4-bin.tar.gz">commons-dbcp-1.4-bin.tar.gz</a></td>
+              <td><a href="http://www.apache.org/dist/commons/dbcp/binaries/commons-dbcp-1.4-bin.tar.gz.md5">md5</a></td>
+              <td><a href="http://www.apache.org/dist/commons/dbcp/binaries/commons-dbcp-1.4-bin.tar.gz.asc">pgp</a></td>
+          </tr>
+          <tr>
+              <td><a href="[preferred]/commons/dbcp/binaries/commons-dbcp-1.4-bin.zip">commons-dbcp-1.4-bin.zip</a></td>
+              <td><a href="http://www.apache.org/dist/commons/dbcp/binaries/commons-dbcp-1.4-bin.zip.md5">md5</a></td>
+              <td><a href="http://www.apache.org/dist/commons/dbcp/binaries/commons-dbcp-1.4-bin.zip.asc">pgp</a></td>
+          </tr>
+        </table>
+      </subsection>
+      <subsection name="Source">
+        <table>
+          <tr>
+              <td><a href="[preferred]/commons/dbcp/source/commons-dbcp-1.4-src.tar.gz">commons-dbcp-1.4-src.tar.gz</a></td>
+              <td><a href="http://www.apache.org/dist/commons/dbcp/source/commons-dbcp-1.4-src.tar.gz.md5">md5</a></td>
+              <td><a href="http://www.apache.org/dist/commons/dbcp/source/commons-dbcp-1.4-src.tar.gz.asc">pgp</a></td>
+          </tr>
+          <tr>
+              <td><a href="[preferred]/commons/dbcp/source/commons-dbcp-1.4-src.zip">commons-dbcp-1.4-src.zip</a></td>
+              <td><a href="http://www.apache.org/dist/commons/dbcp/source/commons-dbcp-1.4-src.zip.md5">md5</a></td>
+              <td><a href="http://www.apache.org/dist/commons/dbcp/source/commons-dbcp-1.4-src.zip.asc">pgp</a></td>
+          </tr>
+        </table>
+      </subsection>
+    </section>
+    <section name="Commons DBCP 1.3 for JDBC 3 (JDK 1.4-1.5)">
+      <subsection name="Binaries">
+        <table>
+          <tr>
+              <td><a href="[preferred]/commons/dbcp/binaries/commons-dbcp-1.3-bin.tar.gz">commons-dbcp-1.3-bin.tar.gz</a></td>
+              <td><a href="http://www.apache.org/dist/commons/dbcp/binaries/commons-dbcp-1.3-bin.tar.gz.md5">md5</a></td>
+              <td><a href="http://www.apache.org/dist/commons/dbcp/binaries/commons-dbcp-1.3-bin.tar.gz.asc">pgp</a></td>
+          </tr>
+          <tr>
+              <td><a href="[preferred]/commons/dbcp/binaries/commons-dbcp-1.3-bin.zip">commons-dbcp-1.3-bin.zip</a></td>
+              <td><a href="http://www.apache.org/dist/commons/dbcp/binaries/commons-dbcp-1.3-bin.zip.md5">md5</a></td>
+              <td><a href="http://www.apache.org/dist/commons/dbcp/binaries/commons-dbcp-1.3-bin.zip.asc">pgp</a></td>
+          </tr>
+        </table>
+      </subsection>
+      <subsection name="Source">
+        <table>
+          <tr>
+              <td><a href="[preferred]/commons/dbcp/source/commons-dbcp-1.3-src.tar.gz">commons-dbcp-1.3-src.tar.gz</a></td>
+              <td><a href="http://www.apache.org/dist/commons/dbcp/source/commons-dbcp-1.3-src.tar.gz.md5">md5</a></td>
+              <td><a href="http://www.apache.org/dist/commons/dbcp/source/commons-dbcp-1.3-src.tar.gz.asc">pgp</a></td>
+          </tr>
+          <tr>
+              <td><a href="[preferred]/commons/dbcp/source/commons-dbcp-1.3-src.zip">commons-dbcp-1.3-src.zip</a></td>
+              <td><a href="http://www.apache.org/dist/commons/dbcp/source/commons-dbcp-1.3-src.zip.md5">md5</a></td>
+              <td><a href="http://www.apache.org/dist/commons/dbcp/source/commons-dbcp-1.3-src.zip.asc">pgp</a></td>
+          </tr>
+        </table>
+      </subsection>
+    </section>
+    <section name="Archives">
+        <p>
+          Older releases can be obtained from the archives.
+        </p>
+        <ul>
+          <li class="download"><a href="[preferred]/commons/dbcp/">browse download area</a></li>
+          <li><a href="http://archive.apache.org/dist/commons/dbcp/">archives...</a></li>
+        </ul>
+    </section>
+  </body>
+</document>
diff -uNr commons-dbcp-1.4-src/src/site/xdoc/downloads.xml commons-dbcp-1.4.x/src/site/xdoc/downloads.xml
--- commons-dbcp-1.4-src/src/site/xdoc/downloads.xml	1970-01-01 09:00:00.000000000 +0900
+++ commons-dbcp-1.4.x/src/site/xdoc/downloads.xml	2010-03-16 02:04:53.189972000 +0900
@@ -0,0 +1,44 @@
+<?xml version="1.0"?>
+<!--
+   Licensed to the Apache Software Foundation (ASF) under one or more
+   contributor license agreements.  See the NOTICE file distributed with
+   this work for additional information regarding copyright ownership.
+   The ASF licenses this file to You under the Apache License, Version 2.0
+   (the "License"); you may not use this file except in compliance with
+   the License.  You may obtain a copy of the License at
+
+       http://www.apache.org/licenses/LICENSE-2.0
+
+   Unless required by applicable law or agreed to in writing, software
+   distributed under the License is distributed on an "AS IS" BASIS,
+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+   See the License for the specific language governing permissions and
+   limitations under the License.
+-->
+<document>
+   <properties>
+      <title>Downloads</title>
+   </properties>
+
+   <body>
+      <section name="Download DBCP">
+         
+         <subsection name="Releases">
+            <p>Download the <a href="http://commons.apache.org/dbcp/download_dbcp.cgi">Latest Release</a>
+               of Commons DBCP.
+            </p>
+            <p>For details of whats new in each version see the <a href="changes-report.html">Release History</a>.</p>
+         </subsection>
+         <subsection name="Archived Releases">
+            <p>
+               Older releases are retained by the Apache Software Foundation but are
+               moved into a
+               <a href="http://archive.apache.org/dist/commons/dbcp/">
+             special archive area</a>.
+            </p>
+         </subsection>
+
+      </section>
+
+   </body>
+</document>
diff -uNr commons-dbcp-1.4-src/src/site/xdoc/guide/classdiagrams.xml commons-dbcp-1.4.x/src/site/xdoc/guide/classdiagrams.xml
--- commons-dbcp-1.4-src/src/site/xdoc/guide/classdiagrams.xml	1970-01-01 09:00:00.000000000 +0900
+++ commons-dbcp-1.4.x/src/site/xdoc/guide/classdiagrams.xml	2007-07-30 05:14:22.390157000 +0900
@@ -0,0 +1,44 @@
+<?xml version="1.0" encoding="ISO-8859-1"?>
+ <!--
+   Licensed to the Apache Software Foundation (ASF) under one or more
+  contributor license agreements.  See the NOTICE file distributed with
+  this work for additional information regarding copyright ownership.
+  The ASF licenses this file to You under the Apache License, Version 2.0
+  (the "License"); you may not use this file except in compliance with
+  the License.  You may obtain a copy of the License at
+
+       http://www.apache.org/licenses/LICENSE-2.0
+
+   Unless required by applicable law or agreed to in writing, software
+   distributed under the License is distributed on an "AS IS" BASIS,
+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+   See the License for the specific language governing permissions and
+   limitations under the License.
+  -->
+<document>
+
+ <properties>
+  <title>Class Diagrams</title>
+  <author email="dev@commons.apache.org">Commons Documentation Team</author>
+ </properties>
+
+ <body>
+
+<section name="PoolingDataSource">
+<img src="../images/uml/PoolingDataSource.gif"/>
+</section>
+
+<section name="PoolingConnection">
+<img src="../images/uml/PoolingConnection.gif"/>
+</section>
+
+<section name="Delegating">
+<img src="../images/uml/Delegating.gif"/>
+</section>
+
+<section name="AbandonedObjectPool">
+<img src="../images/uml/AbandonedObjectPool.gif"/>
+</section>
+
+</body>
+</document>
diff -uNr commons-dbcp-1.4-src/src/site/xdoc/guide/index.xml commons-dbcp-1.4.x/src/site/xdoc/guide/index.xml
--- commons-dbcp-1.4-src/src/site/xdoc/guide/index.xml	1970-01-01 09:00:00.000000000 +0900
+++ commons-dbcp-1.4.x/src/site/xdoc/guide/index.xml	2007-07-30 05:14:22.390157000 +0900
@@ -0,0 +1,36 @@
+<?xml version="1.0" encoding="ISO-8859-1"?>
+ <!--
+   Licensed to the Apache Software Foundation (ASF) under one or more
+  contributor license agreements.  See the NOTICE file distributed with
+  this work for additional information regarding copyright ownership.
+  The ASF licenses this file to You under the Apache License, Version 2.0
+  (the "License"); you may not use this file except in compliance with
+  the License.  You may obtain a copy of the License at
+
+       http://www.apache.org/licenses/LICENSE-2.0
+
+   Unless required by applicable law or agreed to in writing, software
+   distributed under the License is distributed on an "AS IS" BASIS,
+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+   See the License for the specific language governing permissions and
+   limitations under the License.
+  -->
+<document>
+
+ <properties>
+  <title>Developers Guide</title>
+  <author email="dev@commons.apache.org">Commons Documentation Team</author>
+ </properties>
+
+ <body>
+
+<section name="BasicDataSource">
+<center><img src="../images/uml/BasicDataSource.gif"/></center>
+</section>
+
+<section name="ConnectionFactory">
+<center><img src="../images/uml/ConnectionFactory.gif"/></center>
+</section>
+
+</body>
+</document>
diff -uNr commons-dbcp-1.4-src/src/site/xdoc/guide/jndi-howto.xml commons-dbcp-1.4.x/src/site/xdoc/guide/jndi-howto.xml
--- commons-dbcp-1.4-src/src/site/xdoc/guide/jndi-howto.xml	1970-01-01 09:00:00.000000000 +0900
+++ commons-dbcp-1.4.x/src/site/xdoc/guide/jndi-howto.xml	2008-03-09 08:31:52.137625000 +0900
@@ -0,0 +1,110 @@
+<?xml version="1.0" encoding="ISO-8859-1"?>
+ <!--
+   Licensed to the Apache Software Foundation (ASF) under one or more
+  contributor license agreements.  See the NOTICE file distributed with
+  this work for additional information regarding copyright ownership.
+  The ASF licenses this file to You under the Apache License, Version 2.0
+  (the "License"); you may not use this file except in compliance with
+  the License.  You may obtain a copy of the License at
+
+       http://www.apache.org/licenses/LICENSE-2.0
+
+   Unless required by applicable law or agreed to in writing, software
+   distributed under the License is distributed on an "AS IS" BASIS,
+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+   See the License for the specific language governing permissions and
+   limitations under the License.
+  -->
+<document>
+
+ <properties>
+  <title>JNDI Howto</title>
+  <author email="dev@commons.apache.org">Commons Documentation Team</author>
+ </properties>
+
+ <body>
+
+<section name="JNDI Howto">
+<p>
+  The <a href="http://java.sun.com/products/jndi/">Java Naming and Directory Interface</a> 
+  (JNDI) is part of the Java platform, 
+  providing applications based on Java technology with a unified interface to 
+  multiple naming and directory services. You can build powerful and portable 
+  directory-enabled applications using this industry standard.
+</p>
+<p>
+  When you deploy your application inside an application server, the container will setup
+  the JNDI tree for you. But if you are writing a framework or just a standalone application,
+  then the following examples will show you how to construct and bind references to DBCP 
+  datasources.
+</p>
+<p>
+  The following examples are using the sun filesystem JNDI service provider.
+  You can download it from the 
+  <a href="http://java.sun.com/products/jndi/downloads/index.html">JNDI software download</a> page.
+</p>
+</section>
+
+<section name="BasicDataSource">
+<source><![CDATA[
+  System.setProperty(Context.INITIAL_CONTEXT_FACTORY,
+    "com.sun.jndi.fscontext.RefFSContextFactory");
+  System.setProperty(Context.PROVIDER_URL, "file:///tmp");
+  InitialContext ic = new InitialContext();
+
+  // Construct BasicDataSource reference
+  Reference ref = new Reference("javax.sql.DataSource",
+    "org.apache.commons.dbcp.BasicDataSourceFactory", null);
+  ref.add(new StringRefAddr("driverClassName", "org.apache.commons.dbcp.TesterDriver"));
+  ref.add(new StringRefAddr("url", "jdbc:apache:commons:testdriver"));
+  ref.add(new StringRefAddr("username", "username"));
+  ref.add(new StringRefAddr("password", "password"));
+  ic.rebind("jdbc/basic", ref);
+   
+  // Use
+  InitialContext ic2 = new InitialContext();
+  DataSource ds = (DataSource) ic2.lookup("jdbc/basic");
+  assertNotNull(ds);
+  Connection conn = ds.getConnection();
+  assertNotNull(conn);
+  conn.close();
+]]></source>
+</section>
+
+<section name="PerUserPoolDataSource">
+<source><![CDATA[
+  System.setProperty(Context.INITIAL_CONTEXT_FACTORY,
+    "com.sun.jndi.fscontext.RefFSContextFactory");
+  System.setProperty(Context.PROVIDER_URL, "file:///tmp");
+  InitialContext ic = new InitialContext();
+
+  // Construct DriverAdapterCPDS reference
+  Reference cpdsRef = new Reference("org.apache.commons.dbcp.cpdsadapter.DriverAdapterCPDS",
+    "org.apache.commons.dbcp.cpdsadapter.DriverAdapterCPDS", null);
+  cpdsRef.add(new StringRefAddr("driver", "org.apache.commons.dbcp.TesterDriver"));
+  cpdsRef.add(new StringRefAddr("url", "jdbc:apache:commons:testdriver"));
+  cpdsRef.add(new StringRefAddr("user", "foo"));
+  cpdsRef.add(new StringRefAddr("password", "bar"));
+  ic.rebind("jdbc/cpds", cpdsRef);
+     
+  // Construct PerUserPoolDataSource reference
+  Reference ref = new Reference("org.apache.commons.dbcp.datasources.PerUserPoolDataSource",
+    "org.apache.commons.dbcp.datasources.PerUserPoolDataSourceFactory", null);
+  ref.add(new StringRefAddr("dataSourceName", "jdbc/cpds"));
+  ref.add(new StringRefAddr("defaultMaxActive", "100"));
+  ref.add(new StringRefAddr("defaultMaxIdle", "30"));
+  ref.add(new StringRefAddr("defaultMaxWait", "10000"));
+  ic.rebind("jdbc/peruser", ref);
+     
+  // Use
+  InitialContext ic2 = new InitialContext();
+  DataSource ds = (DataSource) ic2.lookup("jdbc/peruser");
+  assertNotNull(ds);
+  Connection conn = ds.getConnection("foo","bar");
+  assertNotNull(conn);
+  conn.close();
+]]></source>
+</section>
+
+</body>
+</document>
diff -uNr commons-dbcp-1.4-src/src/site/xdoc/guide/sequencediagrams.xml commons-dbcp-1.4.x/src/site/xdoc/guide/sequencediagrams.xml
--- commons-dbcp-1.4-src/src/site/xdoc/guide/sequencediagrams.xml	1970-01-01 09:00:00.000000000 +0900
+++ commons-dbcp-1.4.x/src/site/xdoc/guide/sequencediagrams.xml	2007-07-30 05:14:22.390157000 +0900
@@ -0,0 +1,40 @@
+<?xml version="1.0" encoding="ISO-8859-1"?>
+ <!--
+   Licensed to the Apache Software Foundation (ASF) under one or more
+  contributor license agreements.  See the NOTICE file distributed with
+  this work for additional information regarding copyright ownership.
+  The ASF licenses this file to You under the Apache License, Version 2.0
+  (the "License"); you may not use this file except in compliance with
+  the License.  You may obtain a copy of the License at
+
+       http://www.apache.org/licenses/LICENSE-2.0
+
+   Unless required by applicable law or agreed to in writing, software
+   distributed under the License is distributed on an "AS IS" BASIS,
+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+   See the License for the specific language governing permissions and
+   limitations under the License.
+  -->
+<document>
+
+ <properties>
+  <title>Sequence Diagrams</title>
+  <author email="dev@commons.apache.org">Commons Documentation Team</author>
+ </properties>
+
+ <body>
+
+<section name="createDataSource">
+<img src="../images/uml/createDataSource.gif"/>
+</section>
+
+<section name="getConnection">
+<img src="../images/uml/getConnection.gif"/>
+</section>
+
+<section name="prepareStatement">
+<img src="../images/uml/prepareStatement.gif"/>
+</section>
+
+</body>
+</document>
diff -uNr commons-dbcp-1.4-src/src/site/xdoc/index.xml commons-dbcp-1.4.x/src/site/xdoc/index.xml
--- commons-dbcp-1.4-src/src/site/xdoc/index.xml	1970-01-01 09:00:00.000000000 +0900
+++ commons-dbcp-1.4.x/src/site/xdoc/index.xml	2010-01-01 14:39:56.297924000 +0900
@@ -0,0 +1,89 @@
+<?xml version="1.0" encoding="ISO-8859-1"?>
+ <!--
+   Licensed to the Apache Software Foundation (ASF) under one or more
+  contributor license agreements.  See the NOTICE file distributed with
+  this work for additional information regarding copyright ownership.
+  The ASF licenses this file to You under the Apache License, Version 2.0
+  (the "License"); you may not use this file except in compliance with
+  the License.  You may obtain a copy of the License at
+
+       http://www.apache.org/licenses/LICENSE-2.0
+
+   Unless required by applicable law or agreed to in writing, software
+   distributed under the License is distributed on an "AS IS" BASIS,
+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+   See the License for the specific language governing permissions and
+   limitations under the License.
+  -->
+<document>
+
+ <properties>
+  <title>Overview</title>
+  <author email="dev@commons.apache.org">Commons Documentation Team</author>
+ </properties>
+
+ <body>
+
+<section name="The DBCP Component">
+
+<p>Many Apache projects support interaction with a relational database.
+Creating a new connection for each user can be time consuming (often
+requiring multiple seconds of clock time), in order to perform a database
+transaction that might take milliseconds.  Opening a connection per user
+can be unfeasible in a publicly-hosted Internet application where the
+number of simultaneous users can be very large.  Accordingly, developers
+often wish to share a "pool" of open connections between all of the
+application's current users.  The number of users actually performing
+a request at any given time is usually a very small percentage of the
+total number of active users, and during request processing is the only
+time that a database connection is required.  The application itself logs
+into the DBMS, and handles any user account issues internally.</p>
+
+<p>There are several Database Connection Pools already available, both
+within Apache products and elsewhere.  This Commons package provides an
+opportunity to coordinate the efforts required to create and maintain an
+efficient, feature-rich package under the ASF license.</p>
+
+<p>The <code>commons-dbcp</code> package relies on code in the
+<code>commons-pool</code> package to provide the underlying object pool
+mechanisms that it utilizes.</p>
+
+<p>DBCP now comes in two different versions, one to support JDBC 3
+and one to support JDBC 4.  Here is how it works:
+<ul>
+<li>DBCP 1.4 compiles and runs under JDK 1.6 only (JDBC 4)</li>
+<li>DBCP 1.3 compiles and runs under JDK 1.4-1.5 only (JDBC 3)</li>
+</ul>
+</p>
+<p>DBCP 1.4 binaries should be used by applications running under JDK 1.6.</p>
+<p>DBCP 1.3 should be used when running under JDK 1.4 or 1.5.</p>
+
+<p>There is no difference in the codebase supporting these two
+versions, other than that the code implementing methods added
+to support JDBC 4 has been filtered out of the DBCP 1.3 sources.</p>
+
+</section>
+
+<section name="Releases">
+    <p>
+       See the <a href="downloads.html">downloads</a> page for information on obtaining releases.
+    </p>
+</section>
+
+<section name="Documentation">
+
+<p>The 
+<a href="apidocs/index.html">JavaDoc API documents</a> 
+are available online.  In particular, you should
+read the package overview of the 
+<code><a href="apidocs/org/apache/commons/dbcp/package-summary.html#package_description">org.apache.commons.dbcp</a></code>
+package for an overview of how to use DBCP.</p>
+
+<p>There are 
+<a href="http://svn.apache.org/viewvc/commons/proper/dbcp/trunk/doc/">several examples</a> 
+of using DBCP available.</p>
+
+</section>
+
+</body>
+</document>
diff -uNr commons-dbcp-1.4-src/src/site/xdoc/issue-tracking.xml commons-dbcp-1.4.x/src/site/xdoc/issue-tracking.xml
--- commons-dbcp-1.4-src/src/site/xdoc/issue-tracking.xml	1970-01-01 09:00:00.000000000 +0900
+++ commons-dbcp-1.4.x/src/site/xdoc/issue-tracking.xml	2008-03-03 04:46:00.955021000 +0900
@@ -0,0 +1,102 @@
+<?xml version="1.0"?>
+<!--
+Licensed to the Apache Software Foundation (ASF) under one or more
+contributor license agreements.  See the NOTICE file distributed with
+this work for additional information regarding copyright ownership.
+The ASF licenses this file to You under the Apache License, Version 2.0
+(the "License"); you may not use this file except in compliance with
+the License.  You may obtain a copy of the License at
+
+     http://www.apache.org/licenses/LICENSE-2.0
+
+Unless required by applicable law or agreed to in writing, software
+distributed under the License is distributed on an "AS IS" BASIS,
+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+See the License for the specific language governing permissions and
+limitations under the License.
+-->
+<!--
+ +======================================================================+
+ |****                                                              ****|
+ |****      THIS FILE IS GENERATED BY THE COMMONS BUILD PLUGIN      ****|
+ |****                    DO NOT EDIT DIRECTLY                      ****|
+ |****                                                              ****|
+ +======================================================================+
+ | TEMPLATE FILE: issue-tracking-template.xml                           |
+ | commons-build-plugin/trunk/src/main/resources/commons-xdoc-templates |
+ +======================================================================+
+ |                                                                      |
+ | 1) Re-generate using: mvn commons:jira-page                          |
+ |                                                                      |
+ | 2) Set the following properties in the component's pom:              |
+ |    - commons.jira.id  (required, alphabetic, upper case)             |
+ |    - commons.jira.pid (required, numeric)                            |
+ |                                                                      |
+ | 3) Example Properties                                                |
+ |                                                                      |
+ |  <properties>                                                        |
+ |    <commons.jira.id>MATH</commons.jira.id>                           |
+ |    <commons.jira.pid>12310485</commons.jira.pid>                     |
+ |  </properties>                                                       |
+ |                                                                      |
+ +======================================================================+
+-->
+<document>
+  <properties>
+    <title>Commons DBCP Issue tracking</title>
+    <author email="dev@commons.apache.org">Commons Documentation Team</author>
+  </properties>
+  <body>
+
+    <section name="Commons DBCP Issue tracking">
+      <p>
+      Commons DBCP uses <a href="http://issues.apache.org/jira/">ASF JIRA</a> for tracking issues.
+      See the <a href="http://issues.apache.org/jira/browse/DBCP">Commons DBCP JIRA project page</a>.
+      </p>
+
+      <p>
+      To use JIRA you may need to <a href="http://issues.apache.org/jira/secure/Signup!default.jspa">create an account</a>
+      (if you have previously created/updated Commons issues using Bugzilla an account will have been automatically
+      created and you can use the <a href="http://issues.apache.org/jira/secure/ForgotPassword!default.jspa">Forgot Password</a>
+      page to get a new password).
+      </p>
+
+      <p>
+      If you would like to report a bug, or raise an enhancement request with
+      Commons DBCP please do the following:
+      <ol>
+        <li><a href="http://issues.apache.org/jira/secure/IssueNavigator.jspa?reset=true&amp;pid=12310469&amp;sorter/field=issuekey&amp;sorter/order=DESC&amp;status=1&amp;status=3&amp;status=4">Search existing open bugs</a>.
+            If you find your issue listed then please add a comment with your details.</li>
+        <li><a href="mail-lists.html">Search the mailing list archive(s)</a>.
+            You may find your issue or idea has already been discussed.</li>
+        <li>Decide if your issue is a bug or an enhancement.</li>
+        <li>Submit either a <a href="http://issues.apache.org/jira/secure/CreateIssueDetails!init.jspa?pid=12310469&amp;issuetype=1&amp;priority=4&amp;assignee=-1">bug report</a>
+            or <a href="http://issues.apache.org/jira/secure/CreateIssueDetails!init.jspa?pid=12310469&amp;issuetype=4&amp;priority=4&amp;assignee=-1">enhancement request</a>.</li>
+      </ol>
+      </p>
+
+      <p>
+      Please also remember these points:
+      <ul>
+        <li>the more information you provide, the better we can help you</li>
+        <li>test cases are vital, particularly for any proposed enhancements</li>
+        <li>the developers of Commons DBCP are all unpaid volunteers</li>
+      </ul>
+      </p>
+
+      <p>
+      For more information on subversion and creating patches see the
+      <a href="http://www.apache.org/dev/contributors.html">Apache Contributors Guide</a>.
+      </p>
+
+      <p>
+      You may also find these links useful:
+      <ul>
+        <li><a href="http://issues.apache.org/jira/secure/IssueNavigator.jspa?reset=true&amp;pid=12310469&amp;sorter/field=issuekey&amp;sorter/order=DESC&amp;status=1&amp;status=3&amp;status=4">All Open Commons DBCP bugs</a></li>
+        <li><a href="http://issues.apache.org/jira/secure/IssueNavigator.jspa?reset=true&amp;pid=12310469&amp;sorter/field=issuekey&amp;sorter/order=DESC&amp;status=5&amp;status=6">All Resolved Commons DBCP bugs</a></li>
+        <li><a href="http://issues.apache.org/jira/secure/IssueNavigator.jspa?reset=true&amp;pid=12310469&amp;sorter/field=issuekey&amp;sorter/order=DESC">All Commons DBCP bugs</a></li>
+      </ul>
+      </p>
+    </section>
+  </body>
+</document>
diff -uNr commons-dbcp-1.4-src/src/site/xdoc/mail-lists.xml commons-dbcp-1.4.x/src/site/xdoc/mail-lists.xml
--- commons-dbcp-1.4-src/src/site/xdoc/mail-lists.xml	1970-01-01 09:00:00.000000000 +0900
+++ commons-dbcp-1.4.x/src/site/xdoc/mail-lists.xml	2010-10-07 01:38:08.554450000 +0900
@@ -0,0 +1,202 @@
+<?xml version="1.0"?>
+<!--
+Licensed to the Apache Software Foundation (ASF) under one or more
+contributor license agreements.  See the NOTICE file distributed with
+this work for additional information regarding copyright ownership.
+The ASF licenses this file to You under the Apache License, Version 2.0
+(the "License"); you may not use this file except in compliance with
+the License.  You may obtain a copy of the License at
+
+     http://www.apache.org/licenses/LICENSE-2.0
+
+Unless required by applicable law or agreed to in writing, software
+distributed under the License is distributed on an "AS IS" BASIS,
+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+See the License for the specific language governing permissions and
+limitations under the License.
+-->
+<!--
+ +======================================================================+
+ |****                                                              ****|
+ |****      THIS FILE IS GENERATED BY THE COMMONS BUILD PLUGIN      ****|
+ |****                    DO NOT EDIT DIRECTLY                      ****|
+ |****                                                              ****|
+ +======================================================================+
+ | TEMPLATE FILE: mail-lists-template.xml                               |
+ | commons-build-plugin/trunk/src/main/resources/commons-xdoc-templates |
+ +======================================================================+
+ |                                                                      |
+ | 1) Re-generate using: mvn commons:mail-page                          |
+ |                                                                      |
+ | 2) Set the following properties in the component's pom:              |
+ |    - commons.componentid (required, alphabetic, lower case)          |
+ |                                                                      |
+ | 3) Example Properties                                                |
+ |                                                                      |
+ |  <properties>                                                        |
+ |    <commons.componentid>math</commons.componentid>                   |
+ |  </properties>                                                       |
+ |                                                                      |
+ +======================================================================+
+-->
+<document>
+  <properties>
+    <title>Commons DBCP Mailing Lists</title>
+    <author email="dev@commons.apache.org">Commons Documentation Team</author>
+  </properties>
+  <body>
+
+    <section name="Overview">
+      <p>
+        <a href="index.html">Commons DBCP</a> shares mailing lists with all the other 
+        <a href="http://commons.apache.org/components.html">Commons Components</a>.
+        To make it easier for people to only read messages related to components they are interested in,
+        the convention in Commons is to prefix the subject line of messages with the component's name,
+        for example:
+        <ul>
+          <li>[dbcp] Problem with the ...</li>
+        </ul>
+      </p>
+      <p>
+        Questions related to the usage of Commons DBCP should be posted to the
+        <a href="http://mail-archives.apache.org/mod_mbox/commons-user/">User List</a>.
+        <br />
+        The <a href="http://mail-archives.apache.org/mod_mbox/commons-dev/">Developer List</a>
+        is for questions and discussion related to the development of Commons DBCP.
+        <br />
+        Please do not cross-post; developers are also subscribed to the user list.
+      </p>
+      <p>
+        <strong>Note:</strong> please don't send patches or attachments to any of the mailing lists.
+        Patches are best handled via the <a href="issue-tracking.html">Issue Tracking</a> system. 
+        Otherwise, please upload the file to a public server and include the URL in the mail. 
+      </p>
+    </section>
+
+    <section name="Commons DBCP Mailing Lists">
+      <p>
+        <strong>Please prefix the subject line of any messages for <a href="index.html">Commons DBCP</a>
+        with <i>[dbcp]</i></strong> - <i>thanks!</i>
+        <br />
+        <br />
+      </p>
+
+      <table>
+        <tr>
+          <th>Name</th>
+          <th>Subscribe</th>
+          <th>Unsubscribe</th>
+          <th>Post</th>
+          <th>Archive</th>
+          <th>Other Archives</th>
+        </tr>
+
+
+        <tr>
+          <td>
+            <strong>Commons User List</strong>
+            <br /><br />
+            Questions on using Commons DBCP.
+            <br /><br />
+          </td>
+          <td><a href="mailto:user-subscribe@commons.apache.org">Subscribe</a></td>
+          <td><a href="mailto:user-unsubscribe@commons.apache.org">Unsubscribe</a></td>
+          <td><a href="mailto:user@commons.apache.org?subject=[dbcp]">Post</a></td>
+          <td><a href="http://mail-archives.apache.org/mod_mbox/commons-user/">mail-archives.apache.org</a></td>
+          <td><a href="http://markmail.org/list/org.apache.commons.users/">markmail.org</a><br />
+              <a href="http://www.mail-archive.com/user@commons.apache.org/">www.mail-archive.com</a><br />
+              <a href="http://news.gmane.org/gmane.comp.jakarta.commons.devel">news.gmane.org</a>
+          </td>
+        </tr>
+
+
+        <tr>
+          <td>
+            <strong>Commons Developer List</strong>
+            <br /><br />
+            Discussion of development of Commons DBCP.
+            <br /><br />
+          </td>
+          <td><a href="mailto:dev-subscribe@commons.apache.org">Subscribe</a></td>
+          <td><a href="mailto:dev-unsubscribe@commons.apache.org">Unsubscribe</a></td>
+          <td><a href="mailto:dev@commons.apache.org?subject=[dbcp]">Post</a></td>
+          <td><a href="http://mail-archives.apache.org/mod_mbox/commons-dev/">mail-archives.apache.org</a></td>
+          <td><a href="http://markmail.org/list/org.apache.commons.dev/">markmail.org</a><br />
+              <a href="http://www.mail-archive.com/dev@commons.apache.org/">www.mail-archive.com</a><br />
+              <a href="http://news.gmane.org/gmane.comp.jakarta.commons.devel">news.gmane.org</a>
+          </td>
+        </tr>
+
+
+        <tr>
+          <td>
+            <strong>Commons Issues List</strong>
+            <br /><br />
+            Only for e-mails automatically generated by the <a href="issue-tracking.html">issue tracking</a> system.
+            <br /><br />
+          </td>
+          <td><a href="mailto:issues-subscribe@commons.apache.org">Subscribe</a></td>
+          <td><a href="mailto:issues-unsubscribe@commons.apache.org">Unsubscribe</a></td>
+          <td><i>read only</i></td>
+          <td><a href="http://mail-archives.apache.org/mod_mbox/commons-issues/">mail-archives.apache.org</a></td>
+          <td><a href="http://markmail.org/list/org.apache.commons.issues/">markmail.org</a><br />
+              <a href="http://www.mail-archive.com/issues@commons.apache.org/">www.mail-archive.com</a>
+          </td>
+        </tr>
+
+
+        <tr>
+          <td>
+            <strong>Commons Commits List</strong>
+            <br /><br />
+            Only for e-mails automatically generated by the <a href="source-repository.html">source control</a> sytem.
+            <br /><br />
+          </td>
+          <td><a href="mailto:commits-subscribe@commons.apache.org">Subscribe</a></td>
+          <td><a href="mailto:commits-unsubscribe@commons.apache.org">Unsubscribe</a></td>
+          <td><i>read only</i></td>
+          <td><a href="http://mail-archives.apache.org/mod_mbox/commons-commits/">mail-archives.apache.org</a></td>
+          <td><a href="http://markmail.org/list/org.apache.commons.commits/">markmail.org</a><br />
+              <a href="http://www.mail-archive.com/commits@commons.apache.org/">www.mail-archive.com</a>
+          </td>
+        </tr>
+
+      </table>
+
+    </section>
+    <section name="Apache Mailing Lists">
+      <p>
+        Other mailing lists which you may find useful include:
+      </p>
+
+      <table>
+        <tr>
+          <th>Name</th>
+          <th>Subscribe</th>
+          <th>Unsubscribe</th>
+          <th>Post</th>
+          <th>Archive</th>
+          <th>Other Archives</th>
+        </tr>
+        <tr>
+          <td>
+            <strong>Apache Announce List</strong>
+            <br /><br />
+            General announcements of Apache project releases.
+            <br /><br />
+          </td>
+          <td><a class="externalLink" href="mailto:announce-subscribe@apache.org">Subscribe</a></td> 
+          <td><a class="externalLink" href="mailto:announce-unsubscribe@apache.org">Unsubscribe</a></td> 
+          <td><i>read only</i></td>
+          <td><a class="externalLink" href="http://mail-archives.apache.org/mod_mbox/www-announce/">mail-archives.apache.org</a></td> 
+          <td><a class="externalLink" href="http://markmail.org/list/org.apache.announce/">markmail.org</a><br />
+              <a class="externalLink" href="http://old.nabble.com/Apache-News-and-Announce-f109.html">old.nabble.com</a><br />
+              <a class="externalLink" href="http://www.mail-archive.com/announce@apache.org/">www.mail-archive.com</a><br />
+              <a class="externalLink" href="http://news.gmane.org/gmane.comp.apache.announce">news.gmane.org</a>
+          </td>
+        </tr>
+      </table>
+
+    </section>
+  </body>
+</document>
diff -uNr commons-dbcp-1.4-src/src/site/xdoc/release-notes-1.1.xml commons-dbcp-1.4.x/src/site/xdoc/release-notes-1.1.xml
--- commons-dbcp-1.4-src/src/site/xdoc/release-notes-1.1.xml	1970-01-01 09:00:00.000000000 +0900
+++ commons-dbcp-1.4.x/src/site/xdoc/release-notes-1.1.xml	2007-07-31 13:17:09.625628000 +0900
@@ -0,0 +1,156 @@
+<?xml version="1.0"?>
+<!--
+   Licensed to the Apache Software Foundation (ASF) under one or more
+  contributor license agreements.  See the NOTICE file distributed with
+  this work for additional information regarding copyright ownership.
+  The ASF licenses this file to You under the Apache License, Version 2.0
+  (the "License"); you may not use this file except in compliance with
+  the License.  You may obtain a copy of the License at
+
+       http://www.apache.org/licenses/LICENSE-2.0
+
+   Unless required by applicable law or agreed to in writing, software
+   distributed under the License is distributed on an "AS IS" BASIS,
+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+   See the License for the specific language governing permissions and
+   limitations under the License.
+-->
+<document>
+   <properties>
+      <title>Release notes for Commons-DBCP 1.1</title>
+      <author email="dev@commons.apache.org">Commons Documentation Team</author>
+      <revision>$Id: release-notes-1.1.xml 561230 2007-07-31 04:17:09Z rahul $</revision>
+   </properties>
+
+   <body>
+     <section name="Release notes for Commons-DBCP 1.1">
+<p>
+There were a lot changes since the 1.0 release on 12 Aug 2002.
+<ul>
+<li>All existing features can now be configured by JNDI Context providers (Tomcat)</li>
+<br/>
+<li>The double close() of a pooled connection is more effectively blocked
+  (you may experience more "Already closed" SQLExceptions)</li>
+<br/>
+<li>Prepared statement pooling is now implemented in BasicDataSource
+  (set poolPreparedStatements=true, maxOpenPreparedStatements=xxx)</li>
+<br/>
+<li>Access to the underlying connection is blocked by default
+  You can access the underlying connection by setting
+  accessToUnderlyingConnectionAllowed=true and by using the following construct:
+  Connection dconn = ((DelegatingConnection) conn).getInnermostDelegate();</li>
+<br/>
+<li>New minIdle parameter for a minimum number of idle connections ready for use</li>
+<br/>
+<li>New connection default properties: defaultCatalog and defaultTransactionIsolation</li>
+<br/>
+<li>Missing driverClassName will now give the following error "No suitable driver"</li>
+<br/>
+<li>Bad validationQuery will produce a meaningful SQLException</li>
+<br/>
+<li>UML Class and sequence diagrams, configuration documentation</li>
+<br/>
+<li>The following issues were resolved since v1.0: (see Bugzilla for complete description)
+<table>
+<tr><th>ID</th><th>Date</th><th>Sev</th><th>State</th><th>Summary</th></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=6934">  6934</a></td><td>2003-09-20</td><td>Blo</td><td>DUPL</td><td>SQLTransformer.java - infinite loop in getConnection</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=7038">  7038</a></td><td>2002-03-18</td><td>Nor</td><td>FIXE</td><td>DBCP does not build under JDK 1.4</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=7727">  7727</a></td><td>2002-04-20</td><td>Maj</td><td>FIXE</td><td>Infinite loop (stack overflow) in BasicDataSource</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=7728">  7728</a></td><td>2002-04-20</td><td>Maj</td><td>FIXE</td><td>BasicDataSource cannot use many JDBC drivers</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=8620">  8620</a></td><td>2002-04-29</td><td>Nor</td><td>INVA</td><td>Closed Connection Exception on setAutoCommit</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=9073">  9073</a></td><td>2002-07-20</td><td>Nor</td><td>FIXE</td><td>BasicDataSource - invalid connections are not checked</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=9850">  9850</a></td><td>2002-07-20</td><td>Nor</td><td>FIXE</td><td>No way to get at SQLException if connection to database fail</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=10592">10592</a></td><td>2002-07-20</td><td>Nor</td><td>DUPL</td><td>dataSource.getConnection never returns in Tomcat using DBCP</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=10614">10614</a></td><td>2002-07-20</td><td>Nor</td><td>FIXE</td><td>DBCP connection pooling broken in Tomcat-4.1.7 (regression)</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=10688">10688</a></td><td>2002-07-20</td><td>Min</td><td>FIXE</td><td>Version in the Manifest</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=10969">10969</a></td><td>2002-07-20</td><td>Maj</td><td>FIXE</td><td>BasicDataSource defaults are unusable</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=11507">11507</a></td><td>2002-08-06</td><td>Nor</td><td>INVA</td><td>Cleanup dead connections</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=12047">12047</a></td><td>2002-11-01</td><td>Nor</td><td>INVA</td><td>validationQuery + MSSQL</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=12400">12400</a></td><td>2002-11-07</td><td>Nor</td><td>WORK</td><td>same connections</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=12409">12409</a></td><td>2002-11-01</td><td>Blo</td><td>FIXE</td><td>Connection can be closed twice</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=12733">12733</a></td><td>2003-02-06</td><td>Nor</td><td>FIXE</td><td>[DBCP][PATCH]Statement.getResultSet() doesn't return null if</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=12869">12869</a></td><td>2002-11-01</td><td>Maj</td><td>FIXE</td><td>Abandoned Connections are never closed</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=13077">13077</a></td><td>2002-11-07</td><td>Enh</td><td>FIXE</td><td>Jdbc2PoolDataSource issues</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=13129">13129</a></td><td>2002-11-01</td><td>Nor</td><td>FIXE</td><td>CPDSConnectionFactory prints invalid error messages</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=13155">13155</a></td><td>2002-10-30</td><td>Nor</td><td>DUPL</td><td>unexpected "exausted pool" error</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=13235">13235</a></td><td>2002-11-16</td><td>Blo</td><td>FIXE</td><td>referenced UserPassKey instances get erroneously returned to</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=13930">13930</a></td><td>2003-03-06</td><td>Enh</td><td>FIXE</td><td>Adding connection parameters to BasicDataSourceFactory</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=13988">13988</a></td><td>2003-03-17</td><td>Enh</td><td>DUPL</td><td>permission error makes connection loop</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=14267">14267</a></td><td>2003-04-28</td><td>Maj</td><td>INVA</td><td>DBCP doesn't work on Tomcat 4.1.12 and Oracle JDBC driver</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=14592">14592</a></td><td>2002-11-15</td><td>Enh</td><td>INVA</td><td>DBCP must be robust against e.g. database shutdowns</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=14663">14663</a></td><td>2003-05-14</td><td>Nor</td><td>REMI</td><td>Tomcat5 server hangs when trying to get the database connect</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=15123">15123</a></td><td>2003-08-21</td><td>Maj</td><td>FIXE</td><td>Incorrect stack trace shown when abandoned connections are c</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=15539">15539</a></td><td>2003-02-06</td><td>Maj</td><td>DUPL</td><td>Strange Result Set on output</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=16283">16283</a></td><td>2003-02-01</td><td>Nor</td><td>WONT</td><td>Inproper use of Exception</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=16581">16581</a></td><td>2003-03-06</td><td>Maj</td><td>FIXE</td><td>Deadlock in AbandonedObjectPool when firewall closes connect</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=16629">16629</a></td><td>2003-03-06</td><td>Nor</td><td>FIXE</td><td>org.apache.commons.dbcp.jdbc2pool.Jdbc2PoolDataSource: setti</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=16987">16987</a></td><td>2003-08-11</td><td>Maj</td><td>FIXE</td><td>race condition in PoolableConnection.close()</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=17015">17015</a></td><td>2003-03-06</td><td>Nor</td><td>FIXE</td><td>GenericObjectPool.invalidateObject() doesn't work with Aband</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=17200">17200</a></td><td>2003-03-06</td><td>Maj</td><td>FIXE</td><td>DBCP: org.apache.commons.dbcp.cpdsadapter.PooledConnectionIm</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=17301">17301</a></td><td>2003-04-08</td><td>Nor</td><td>WONT</td><td>NPE in Oracle driver when using DBCP PoolingDataSource</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=17456">17456</a></td><td>2003-04-08</td><td>Enh</td><td>FIXE</td><td>BasicDataSource should use commons-logging</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=17635">17635</a></td><td>2003-03-06</td><td>Min</td><td>FIXE</td><td>PoolableConnectionFactory-Construction declared to throw Exc</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=17677">17677</a></td><td>2003-05-31</td><td>Maj</td><td>INVA</td><td>Pooled connection architecture vulnerable to double use</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=17678">17678</a></td><td>2003-04-01</td><td>Maj</td><td>FIXE</td><td>DBCP Fails silently in many cases</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=17680">17680</a></td><td>2003-03-13</td><td>Maj</td><td>INVA</td><td>PoolableConnection.reallyClose() doesn't decrement active co</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=17911">17911</a></td><td>2003-04-07</td><td>Maj</td><td>WONT</td><td>Problem with getConnection() and Informix</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=18012">18012</a></td><td>2003-08-26</td><td>Enh</td><td>FIXE</td><td>BasicDataSource doesn't include PreparedStmt Pooling</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=18483">18483</a></td><td>2003-04-08</td><td>Nor</td><td>WONT</td><td>AbandonedObjectPool.removeAbandoned never cleans up the trac</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=18502">18502</a></td><td>2003-03-30</td><td>Blo</td><td>INVA</td><td>java.lang.ClassNotFoundException: org.apache.commons.pool.St</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=18550">18550</a></td><td>2003-08-25</td><td>Enh</td><td>FIXE</td><td>Add defaultTransactionIsolation to BasicDataSource</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=18834">18834</a></td><td>2003-04-08</td><td>Nor</td><td>FIXE</td><td>Jdbc2PoolDataSource throws a RuntimeException when database</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=18905">18905</a></td><td>2003-08-11</td><td>Nor</td><td>FIXE</td><td>Couldn't get connection (Jdbc2PoolDataSource)</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=18921">18921</a></td><td>2003-08-11</td><td>Enh</td><td>FIXE</td><td>Per User methods not working in Jdbc2PoolDataSource</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=18982">18982</a></td><td>2003-04-13</td><td>Maj</td><td>INVA</td><td>Binary distribution missing package</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=19374">19374</a></td><td>2003-08-11</td><td>Nor</td><td>FIXE</td><td>Potential for DelegateStatement, DelegateResultSet to be lef</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=19614">19614</a></td><td>2003-08-13</td><td>Maj</td><td>FIXE</td><td>Poor performance under load</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=19615">19615</a></td><td>2003-05-02</td><td>Maj</td><td>INVA</td><td>Unecessary global synchronized in AbandonedObjectPool method</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=19706">19706</a></td><td>2003-08-26</td><td>Enh</td><td>WONT</td><td>Add Initial Commons Logging to DBCP</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=20649">20649</a></td><td>2003-08-11</td><td>Cri</td><td>INVA</td><td>deadlock when acquiring connections from a pool</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=21132">21132</a></td><td>2003-08-11</td><td>Cri</td><td>DUPL</td><td>Broken pipe despite validation query set</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=21182">21182</a></td><td>2003-08-21</td><td>Nor</td><td>INVA</td><td>[dbcp] removing a webapp does not force connections closed</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=21229">21229</a></td><td>2003-08-11</td><td>Nor</td><td>FIXE</td><td>ConnectionFactory throws SQLException but implementations do</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=21273">21273</a></td><td>2003-08-11</td><td>Nor</td><td>FIXE</td><td>Memory-leak like behaviour in DBCP due to warnings chained t</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=21418">21418</a></td><td>2003-08-11</td><td>Min</td><td>FIXE</td><td>Example code</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=21453">21453</a></td><td>2003-08-11</td><td>Maj</td><td>INVA</td><td>NullPointerException  in DBCP when used for client-server ap</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=21458">21458</a></td><td>2003-08-11</td><td>Nor</td><td>FIXE</td><td>Statements and connections don't implement equals()/hashCode</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=21748">21748</a></td><td>2003-08-11</td><td>Nor</td><td>FIXE</td><td>BasicDataSource.close() throws NPE</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=22078">22078</a></td><td>2003-08-12</td><td>Nor</td><td>FIXE</td><td>[DBCP] testOnBorrow fails if setAutoCommit() throws an excep</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=22079">22079</a></td><td>2003-08-13</td><td>Nor</td><td>FIXE</td><td>[DBCP] if connection closed twice *closed* connection is ret</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=22214">22214</a></td><td>2003-08-11</td><td>Maj</td><td>FIXE</td><td>Delegating ResultSet causing NPE</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=22229">22229</a></td><td>2003-08-13</td><td>Cri</td><td>FIXE</td><td>Foul connection causes livelock of all pool operations</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=22598">22598</a></td><td>2003-08-21</td><td>Enh</td><td>FIXE</td><td>minIdle Functionality for DBCP via Patches Posted for common</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=22736">22736</a></td><td>2003-08-29</td><td>Maj</td><td>INVA</td><td>validationQuery parameter hangs getConnection method.</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=22750">22750</a></td><td>2003-08-27</td><td>Nor</td><td>FIXE</td><td>BasicDataSource always sets testOnBorrow if given a validati</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=22776">22776</a></td><td>2003-09-20</td><td>Nor</td><td>WONT</td><td>DBCP should not be writing messages to stderr or stdout</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=23066">23066</a></td><td>2003-09-13</td><td>Maj</td><td>FIXE</td><td>DriverManager.getConnection() throws DbcpException</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=23081">23081</a></td><td>2003-09-20</td><td>Nor</td><td>FIXE</td><td>DBCP - Bad DB Validation Query Hangs Everything</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=23138">23138</a></td><td>2003-09-13</td><td>Nor</td><td>FIXE</td><td>getDelegate no longer useful since v1.7 of PoolingDataSource</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=23157">23157</a></td><td>2003-09-20</td><td>Enh</td><td>FIXE</td><td>add defaultCatalog to BasicDataSource</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=23185">23185</a></td><td>2003-09-21</td><td>Nor</td><td>WONT</td><td>PoolableConnection.close() won't allow multiple close</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=23291">23291</a></td><td>2003-09-20</td><td>Nor</td><td>FIXE</td><td>impossible to turn off all validation tests when a validatio</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=23293">23293</a></td><td>2003-09-20</td><td>Nor</td><td>FIXE</td><td>setAutoCommit(true) when returning connection to the pool</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=23304">23304</a></td><td>2003-09-21</td><td>Nor</td><td>FIXE</td><td>NullpointerException when no driverClassName is specified</td></tr>
+</table>
+</li>
+<br/>
+<li>The following issues were resolved since v1.1RC1:
+<table>
+<tr><th>ID</th><th>Date</th><th>Sev</th><th>State</th><th>Summary</th></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=22776">22776</a></td><td>2003-09-30</td><td>Nor</td><td>FIXE</td><td>DBCP should not be writing messages to stderr or stdout (removed unneeded logging in AbandonedObjectPool)</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=23491">23491</a></td><td>2003-10-13</td><td>Cri</td><td>FIXE</td><td>Can't configure PerUserPoolDataSource for use with tomcat, <a href="http://commons.apache.org/dbcp/apidocs/org/apache/commons/dbcp/datasources/package-summary.html">more...</a></td></tr>
+</table>
+</li>
+<br/>
+<li>The following issues were resolved since v1.1RC2:
+<table>
+<tr><th>ID</th><th>Date</th><th>Sev</th><th>State</th><th>Summary</th></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=23843">23843</a></td><td>2003-10-20</td><td>Blo</td><td>FIXE</td><td>PerUserPoolDataSource.getConnection(username, pw) may return connection under wrong username</td></tr>
+</table>
+</li>
+</ul>
+</p>
+</section>
+</body>
+</document>
+
diff -uNr commons-dbcp-1.4-src/src/site/xdoc/release-notes-1.2.1.xml commons-dbcp-1.4.x/src/site/xdoc/release-notes-1.2.1.xml
--- commons-dbcp-1.4-src/src/site/xdoc/release-notes-1.2.1.xml	1970-01-01 09:00:00.000000000 +0900
+++ commons-dbcp-1.4.x/src/site/xdoc/release-notes-1.2.1.xml	2007-07-30 05:14:22.390157000 +0900
@@ -0,0 +1,60 @@
+<?xml version="1.0"?>
+<!--
+   Licensed to the Apache Software Foundation (ASF) under one or more
+  contributor license agreements.  See the NOTICE file distributed with
+  this work for additional information regarding copyright ownership.
+  The ASF licenses this file to You under the Apache License, Version 2.0
+  (the "License"); you may not use this file except in compliance with
+  the License.  You may obtain a copy of the License at
+
+       http://www.apache.org/licenses/LICENSE-2.0
+
+   Unless required by applicable law or agreed to in writing, software
+   distributed under the License is distributed on an "AS IS" BASIS,
+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+   See the License for the specific language governing permissions and
+   limitations under the License.
+-->
+<document>
+   <properties>
+      <title>Release notes for Commons-DBCP 1.2.1</title>
+      <author email="dev@commons.apache.org">Commons Documentation Team</author>
+      <revision>$Id: release-notes-1.2.1.xml 560804 2007-07-29 20:14:22Z bayard $</revision>
+   </properties>
+
+   <body>
+     <section name="Release notes for Commons-DBCP 1.2.1">
+<p>
+<b>NOTE:</b> DBCP v1.2.1 requires Pool v1.2, make sure you use the correct version!
+</p>
+
+<hr/>
+<p>DBCP 1.2.1 is a maintenance release to restore full JDK 1.3 compatibility.</p>
+<p>The problem lies in the improper use of a JDK 1.4 method: java.lang.Boolean.valueOf(boolean)</p>
+<p>This method was used in the defaultReadOnly property processing.</p>
+<p>We recommend to upgrade to DBCP 1.2.1 to avoid this problem altogether.</p>
+<hr/>
+
+<p>If you use the defaultReadOnly property in a JRE &lt;1.4, you will get the following error:
+<source>
+java.lang.NoSuchMethodError
+	at org.apache.commons.dbcp.BasicDataSource.setDefaultReadOnly(BasicDataSource.java:75)
+	at org.apache.commons.dbcp.BasicDataSourceFactory.createDataSource(BasicDataSourceFactory.java:162)
+	at org.apache.commons.dbcp.BasicDataSourceFactory.getObjectInstance(BasicDataSourceFactory.java:144)
+	at org.apache.naming.factory.ResourceFactory.getObjectInstance(ResourceFactory.java:176)
+</source>
+</p>
+
+<p>The simple workaround is not to use this property. For example remove the following from the tomcat config.xml.
+<source><![CDATA[
+<parameter>
+    <name>defaultReadOnly</name>
+    <value>true</value>
+</parameter>
+]]></source>
+</p>
+
+</section>
+</body>
+</document>
+
diff -uNr commons-dbcp-1.4-src/src/site/xdoc/release-notes-1.2.xml commons-dbcp-1.4.x/src/site/xdoc/release-notes-1.2.xml
--- commons-dbcp-1.4-src/src/site/xdoc/release-notes-1.2.xml	1970-01-01 09:00:00.000000000 +0900
+++ commons-dbcp-1.4.x/src/site/xdoc/release-notes-1.2.xml	2007-07-30 05:14:22.390157000 +0900
@@ -0,0 +1,94 @@
+<?xml version="1.0"?>
+<!--
+   Licensed to the Apache Software Foundation (ASF) under one or more
+  contributor license agreements.  See the NOTICE file distributed with
+  this work for additional information regarding copyright ownership.
+  The ASF licenses this file to You under the Apache License, Version 2.0
+  (the "License"); you may not use this file except in compliance with
+  the License.  You may obtain a copy of the License at
+
+       http://www.apache.org/licenses/LICENSE-2.0
+
+   Unless required by applicable law or agreed to in writing, software
+   distributed under the License is distributed on an "AS IS" BASIS,
+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+   See the License for the specific language governing permissions and
+   limitations under the License.
+-->
+<document>
+   <properties>
+      <title>Release notes for Commons-DBCP 1.2</title>
+      <author email="dev@commons.apache.org">Commons Documentation Team</author>
+      <revision>$Id: release-notes-1.2.xml 560804 2007-07-29 20:14:22Z bayard $</revision>
+   </properties>
+
+   <body>
+     <section name="Release notes for Commons-DBCP 1.2">
+<p>
+<b>NOTE:</b> DBCP v1.2 requires Pool v1.2, make sure you use the correct version!
+</p>
+
+<p>
+There were some new features were added since the 1.1 release on 20 October 2003.
+<ul>
+<li>Performance optimizations for the PoolableConnectionFactory of BasicDataSource.</li>
+<br/>
+<li>Add BasicDataSourceFactory.createDataSource(Properties properties) for creating a BasicDataSource.</li>
+<br/>
+<li>Add initialSize parameter to do pre-loading of the connection.</li>
+<br/>
+<li>Refactoring of the DelegatingStatement classes.</li>
+<br/>
+<li>Make some properties dynamic (changeble at runtime), this will be completed in next release.</li>
+<br/>
+<li>Improvements to the prepared statement pooling.</li>
+<br/>
+<li>Driver specific changes/optimizations for: Oracle, Informix, DaffodilDB.</li>
+<br/>
+<li>Several fixes for PerUserPoolDataSource</li>
+<br/>
+<li>PoolingDriver uses now a PoolGuardConnectionWrapper by default. If access to the 
+underlying connection is needed, you have to enable it: PoolingDriver.setAccessToUnderlyingConnectionAllowed(true)</li>
+<br/>
+
+<li>The following issues were resolved since v1.1: (see Bugzilla for complete description)
+<table>
+<tr><th>ID</th><th>Date</th><th>Sev</th><th>State</th><th>Summary</th></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=24562">24562</a></td><td>2003-11-10</td><td>Enh</td><td>FIXE</td><td>PoolingDriver needs a closePool method</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=24328">24328</a></td><td>2003-11-10</td><td>Nor</td><td>FIXE</td><td>PooledConnectionImpl ignores resultsetType and Concurrency</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=24678">24678</a></td><td>2003-11-14</td><td>Maj</td><td>INVA</td><td>DelegatingStatement.getResultSet() never returns null</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=25096">25096</a></td><td>2003-11-30</td><td>Enh</td><td>FIXE</td><td>PoolableConnectionFactory synchronized methods</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=25001">25001</a></td><td>2003-11-30</td><td>Nor</td><td>FIXE</td><td>Oracle 9i and default isolation settings</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=25762">25762</a></td><td>2003-12-26</td><td>Nor</td><td>FIXE</td><td>SharedPoolDataSource getConnection() throws ClassCastException</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=25067">25067</a></td><td>2003-12-26</td><td>Nor</td><td>FIXE</td><td>Please give possibility to acecss ObjectPools from PoolingDriver</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=25795">25795</a></td><td>2003-12-29</td><td>Nor</td><td>DUPL</td><td>NumberFormatException: For input string: "myDB"</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=25794">25794</a></td><td>2003-12-29</td><td>Nor</td><td>FIXE</td><td>ClassNotFoundException: org.apache.xerces.parsers.SAXParser</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=24966">24966</a></td><td>2004-01-06</td><td>Nor</td><td>FIXE</td><td>NullPointer with Oracle 9 driver</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=26072">26072</a></td><td>2004-01-18</td><td>Nor</td><td>FIXE</td><td>Null pointer exception being thrown in SQLNestedException</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=26262">26262</a></td><td>2004-01-20</td><td>Min</td><td>FIXE</td><td>DBCP log message in tomcat has incorrect day</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=26422">26422</a></td><td>2004-01-25</td><td>Enh</td><td>FIXE</td><td>Add BasicDataSourceFactory.createDataSource(Properties properties)</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=25514">25514</a></td><td>2004-02-07</td><td>Enh</td><td>FIXE</td><td>Add initialSize parameter to do pre-loading of the connection</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=24082">24082</a></td><td>2004-02-28</td><td>Blo</td><td>FIXE</td><td>NumberFormatException: For input string: "myDB"</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=24136">24136</a></td><td>2004-02-28</td><td>Nor</td><td>FIXE</td><td>ClassCastException in DriverAdapterCPDS when setPoolPreparedStatements(true)</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=27214">27214</a></td><td>2004-02-29</td><td>Enh</td><td>FIXE</td><td>bad &amp;gt; entity in javadoc</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=27320">27320</a></td><td>2004-02-29</td><td>Nor</td><td>FIXE</td><td>DBCP 1.1 incompatible with Informix (driver doesn't support setReadOnly(...))</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=27465">27465</a></td><td>2004-03-07</td><td>Maj</td><td>FIXE</td><td>memory leak in KeyedCPDSConnectionFactory</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=26966">26966</a></td><td>2004-03-07</td><td>Nor</td><td>WORK</td><td>Connectionpool's connections always returns same hashCode</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=27246">27246</a></td><td>2004-03-07</td><td>Nor</td><td>FIXE</td><td>PreparedStatement cache should be different depending on the Catalog</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=27436">27436</a></td><td>2004-03-08</td><td>Enh</td><td>FIXE</td><td>With Oracle jdbc driver, an unnecessary SQL "set transaction read write" is issued each time a connection is retrieved from the pool</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=28579">28579</a></td><td>2004-04-25</td><td>Nor</td><td>FIXE</td><td>NumActive can become incorrect when removeAbandoned=true</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=28580">28580</a></td><td>2004-04-25</td><td>Enh</td><td>FIXE</td><td>AbandonedObjectPool/Trace should log to stdout</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=28251">28251</a></td><td>2004-05-01</td><td>Nor</td><td>FIXE</td><td>Returning dead database connections to BasicDataSource</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=28688">28688</a></td><td>2004-05-01</td><td>Cri</td><td>INVA</td><td>Cant Deserialize the Class PerUserPoolDataSource</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=28893">28893</a></td><td>2004-05-12</td><td>Min</td><td>FIXE</td><td>PoolableConnectionFactory has incomplete javadoc on validationQuery</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=28912">28912</a></td><td>2004-05-17</td><td>Maj</td><td>FIXE</td><td>Connection re-use conflates logical and physical connections</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=29054">29054</a></td><td>2004-05-20</td><td>Nor</td><td>FIXE</td><td>setTestOnReturn(boolean)</td></tr>
+<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=29055">29055</a></td><td>2004-05-20</td><td>Nor</td><td>FIXE</td><td>AutoCommit and ReadOnly</td></tr>
+</table>
+</li>
+</ul>
+</p>
+</section>
+</body>
+</document>
+
diff -uNr commons-dbcp-1.4-src/src/test/org/apache/commons/dbcp/TestAbandonedBasicDataSource.java commons-dbcp-1.4.x/src/test/org/apache/commons/dbcp/TestAbandonedBasicDataSource.java
--- commons-dbcp-1.4-src/src/test/org/apache/commons/dbcp/TestAbandonedBasicDataSource.java	2010-02-08 01:59:19.000000000 +0900
+++ commons-dbcp-1.4.x/src/test/org/apache/commons/dbcp/TestAbandonedBasicDataSource.java	2011-04-24 08:04:43.817882000 +0900
@@ -19,7 +19,10 @@
 
 import java.io.IOException;
 import java.sql.Connection;
+import java.sql.CallableStatement;
+import java.sql.PreparedStatement;
 import java.sql.SQLException;
+import java.sql.Statement;
 
 import junit.framework.Test;
 import junit.framework.TestSuite;
@@ -28,7 +31,7 @@
  * TestSuite for BasicDataSource with abandoned connection trace enabled
  * 
  * @author Dirk Verbeeck
- * @version $Revision: 884205 $ $Date: 2009-11-25 12:25:48 -0500 (Wed, 25 Nov 2009) $
+ * @version $Revision: 1096257 $ $Date: 2011-04-24 08:04:43 +0900 (Sun, 24 Apr 2011) $
  */
 public class TestAbandonedBasicDataSource extends TestBasicDataSource {
     public TestAbandonedBasicDataSource(String testName) {
@@ -160,4 +163,87 @@
         ds.getConnection(); // trigger abandoned cleanup again
         conn1.createStatement();         
     }
+    
+    /**
+     * DBCP-343 - verify that using a DelegatingStatement updates
+     * the lastUsed on the parent connection
+     */
+    public void testLastUsedPreparedStatementUse() throws Exception {
+        ds.setRemoveAbandonedTimeout(1);
+        ds.setMaxActive(2);
+        Connection conn1 = ds.getConnection();
+        Statement st = conn1.createStatement(); 
+        String querySQL = "SELECT 1 FROM DUAL";
+        Thread.sleep(500);
+        st.executeQuery(querySQL); // Should reset lastUsed
+        Thread.sleep(800);
+        Connection conn2 = ds.getConnection(); // triggers abandoned cleanup
+        st.executeQuery(querySQL); // Should still be OK
+        conn2.close();
+        Thread.sleep(500);
+        st.executeUpdate(""); // Should also reset
+        Thread.sleep(800);
+        ds.getConnection(); // trigger abandoned cleanup again
+        conn1.createStatement();  // Connection should still be good  
+    }
+    
+    /**
+     * DBCP-343 - verify additional operations reset lastUsed on
+     * the parent connection
+     */
+    public void testLastUsedUpdate() throws Exception {
+        DelegatingConnection conn = (DelegatingConnection) ds.getConnection();
+        PreparedStatement ps = conn.prepareStatement("");
+        CallableStatement cs = conn.prepareCall("");
+        Statement st = conn.prepareStatement("");
+        checkLastUsedStatement(ps, conn);
+        checkLastUsedPreparedStatement(ps, conn);
+        checkLastUsedStatement(cs, conn);
+        checkLastUsedPreparedStatement(cs, conn);
+        checkLastUsedStatement(st, conn);    
+    }
+    
+    /**
+     * Verifies that Statement executeXxx methods update lastUsed on the parent connection
+     */
+    private void checkLastUsedStatement(Statement st, DelegatingConnection conn) throws Exception {
+        st.execute("");
+        assertAndReset(conn);
+        st.execute("", new int[] {});
+        assertAndReset(conn);
+        st.execute("", 0);
+        assertAndReset(conn);
+        st.executeBatch();
+        assertAndReset(conn);
+        st.executeQuery("");
+        assertAndReset(conn);
+        st.executeUpdate("");
+        assertAndReset(conn);
+        st.executeUpdate("", new int[] {});
+        assertAndReset(conn);
+        st.executeUpdate("", 0);
+        assertAndReset(conn);
+        st.executeUpdate("", new String[] {});
+        assertAndReset(conn);
+    }
+    
+    /**
+     * Verifies that PreparedStatement executeXxx methods update lastUsed on the parent connection
+     */
+    private void checkLastUsedPreparedStatement(PreparedStatement ps, DelegatingConnection conn) throws Exception {
+        ps.execute();
+        assertAndReset(conn);
+        ps.executeQuery();
+        assertAndReset(conn);
+        ps.executeUpdate();
+        assertAndReset(conn);
+    }
+      
+    /**
+     * Verifies that con.lastUsed has been updated and then resets it to 0
+     */
+    private void assertAndReset(DelegatingConnection con) {
+        assertTrue(con.getLastUsed() > 0);
+        con.setLastUsed(0); 
+    }
 }
diff -uNr commons-dbcp-1.4-src/src/test/org/apache/commons/dbcp/TestBasicDataSource.java commons-dbcp-1.4.x/src/test/org/apache/commons/dbcp/TestBasicDataSource.java
--- commons-dbcp-1.4-src/src/test/org/apache/commons/dbcp/TestBasicDataSource.java	2010-02-08 01:59:19.000000000 +0900
+++ commons-dbcp-1.4.x/src/test/org/apache/commons/dbcp/TestBasicDataSource.java	2011-04-26 03:22:11.060263000 +0900
@@ -21,6 +21,9 @@
 import java.sql.Connection;
 import java.sql.SQLException;
 import java.util.Arrays;
+import java.util.Properties;
+
+import javax.sql.DataSource;
 
 import junit.framework.Test;
 import junit.framework.TestSuite;
@@ -29,7 +32,7 @@
  * TestSuite for BasicDataSource
  * 
  * @author Dirk Verbeeck
- * @version $Revision: 895859 $ $Date: 2010-01-04 21:18:58 -0500 (Mon, 04 Jan 2010) $
+ * @version $Revision: 1096549 $ $Date: 2011-04-26 03:22:11 +0900 (Tue, 26 Apr 2011) $
  */
 public class TestBasicDataSource extends TestConnectionPool {
     public TestBasicDataSource(String testName) {
@@ -62,6 +65,7 @@
         ds.setPassword("password");
         ds.setValidationQuery("SELECT DUMMY FROM DUAL");
         ds.setConnectionInitSqls(Arrays.asList(new String[] { "SELECT 1", "SELECT 2"}));
+        ds.setDriverClassLoader(new TesterClassLoader());
     }
 
     protected BasicDataSource createDataSource() throws Exception {
@@ -500,4 +504,89 @@
         // Allow one extra thread for JRockit compatibility
         assertTrue(Thread.activeCount() <= threadCount + 1);
     }
+    
+    /**
+     * JIRA DBCP-333: Check that a custom class loader is used.
+     * @throws Exception 
+     */
+    public void testDriverClassLoader() throws Exception {
+        getConnection();
+        ClassLoader cl = ds.getDriverClassLoader();
+        assertNotNull(cl);
+        assertTrue(cl instanceof TesterClassLoader);
+        assertTrue(((TesterClassLoader) cl).didLoad(ds.getDriverClassName()));
+    }
+    
+    /**
+     * JIRA: DBCP-342, DBCP-93
+     * Verify that when errors occur during BasicDataSource initialization, GenericObjectPool
+     * Evictors are cleaned up.
+     */
+    public void testCreateDataSourceCleanupEvictor() throws Exception {
+        ds.close();
+        ds = null;
+        ds = createDataSource();
+        ds.setDriverClassName("org.apache.commons.dbcp.TesterConnRequestCountDriver");
+        ds.setUrl("jdbc:apache:commons:testerConnRequestCountDriver");
+        ds.setValidationQuery("SELECT DUMMY FROM DUAL");
+        ds.setUsername("username");
+
+        // Make password incorrect, so createDataSource will throw
+        ds.setPassword("wrong");
+        // Set timeBetweenEvictionRuns > 0, so evictor will be created
+        ds.setTimeBetweenEvictionRunsMillis(100);
+        // Set min idle > 0, so evictor will try to make connection as many as idle count
+        ds.setMinIdle(2);
+
+        // Prevent concurrent execution of threads executing test subclasses 
+        synchronized (TesterConnRequestCountDriver.class) {
+    	    TesterConnRequestCountDriver.initConnRequestCount();
+
+    	    // user request 10 times
+    	    for (int i=0; i<10; i++) {
+    	        try {
+    	            @SuppressWarnings("unused")
+    	            DataSource ds2 = ds.createDataSource();
+    	        } catch (SQLException e) {
+    	            // Ignore
+    	        }
+    	    }
+ 
+    	    // sleep 1000ms. evictor will be invoked 10 times if running.
+    	    Thread.sleep(1000);
+
+    	    // Make sure there have been no Evictor-generated requests (count should be 10, from requests above)
+    	    assertEquals(10, TesterConnRequestCountDriver.getConnectionRequestCount());
+        }
+    	
+        // make sure cleanup is complete
+        assertNull(ds.connectionPool);
+    }
 }
+
+/**
+ * TesterDriver that keeps a static count of connection requests.
+ */
+class TesterConnRequestCountDriver extends TesterDriver {
+    protected static final String CONNECT_STRING = "jdbc:apache:commons:testerConnRequestCountDriver";
+    private static int connectionRequestCount = 0;
+
+	@Override
+    public Connection connect(String url, Properties info) throws SQLException {
+        connectionRequestCount++;
+        return super.connect(url, info);
+    }
+
+    @Override
+    public boolean acceptsURL(String url) throws SQLException {
+        return CONNECT_STRING.startsWith(url);
+    }
+
+	public static int getConnectionRequestCount() {
+	    return connectionRequestCount;
+	}
+
+    public static void initConnRequestCount() {
+	    connectionRequestCount = 0;
+    }
+};
diff -uNr commons-dbcp-1.4-src/src/test/org/apache/commons/dbcp/TestBasicDataSourceFactory.java commons-dbcp-1.4.x/src/test/org/apache/commons/dbcp/TestBasicDataSourceFactory.java
--- commons-dbcp-1.4-src/src/test/org/apache/commons/dbcp/TestBasicDataSourceFactory.java	2010-02-08 01:59:19.000000000 +0900
+++ commons-dbcp-1.4.x/src/test/org/apache/commons/dbcp/TestBasicDataSourceFactory.java	2011-05-02 10:58:39.406969000 +0900
@@ -30,7 +30,7 @@
  * TestSuite for BasicDataSourceFactory
  * 
  * @author Dirk Verbeeck
- * @version $Revision: 828639 $ $Date: 2009-10-22 06:27:43 -0400 (Thu, 22 Oct 2009) $
+ * @version $Revision: 1098458 $ $Date: 2011-05-02 10:58:39 +0900 (Mon, 02 May 2011) $
  */
 public class TestBasicDataSourceFactory extends TestCase {
     public TestBasicDataSourceFactory(String testName) {
@@ -68,9 +68,10 @@
         properties.setProperty("password", "password");
         properties.setProperty("validationQuery", "SELECT DUMMY FROM DUAL");
         properties.setProperty("validationQueryTimeout", "100");
-        properties.setProperty("initConnectionSqls", "SELECT 1;SELECT 2");
+        properties.setProperty("connectionInitSqls", "SELECT 1;SELECT 2");
         properties.setProperty("timeBetweenEvictionRunsMillis", "1000");
         properties.setProperty("minEvictableIdleTimeMillis", "2000");
+        properties.setProperty("softMinEvictableIdleTimeMillis", "3000");
         properties.setProperty("numTestsPerEvictionRun", "2");
         properties.setProperty("testWhileIdle", "true");
         properties.setProperty("accessToUnderlyingConnectionAllowed", "true");
@@ -79,6 +80,7 @@
         properties.setProperty("logAbandoned", "true");
         properties.setProperty("poolPreparedStatements", "true");
         properties.setProperty("maxOpenPreparedStatements", "10");
+        properties.setProperty("lifo", "true");
 
         BasicDataSource ds = (BasicDataSource) BasicDataSourceFactory.createDataSource(properties);
         
@@ -105,6 +107,7 @@
         assertEquals("SELECT 2", ds.connectionInitSqls.get(1));
         assertEquals(1000, ds.getTimeBetweenEvictionRunsMillis());
         assertEquals(2000, ds.getMinEvictableIdleTimeMillis());
+        assertEquals(3000, ds.getSoftMinEvictableIdleTimeMillis());
         assertEquals(2, ds.getNumTestsPerEvictionRun());
         assertEquals(true, ds.getTestWhileIdle());
         assertEquals(true, ds.isAccessToUnderlyingConnectionAllowed());
@@ -113,5 +116,6 @@
         assertEquals(true, ds.getLogAbandoned());
         assertEquals(true, ds.isPoolPreparedStatements());
         assertEquals(10, ds.getMaxOpenPreparedStatements());
+        assertEquals(true, ds.getLifo());
     }
 }
diff -uNr commons-dbcp-1.4-src/src/test/org/apache/commons/dbcp/TestDelegatingCallableStatement.java commons-dbcp-1.4.x/src/test/org/apache/commons/dbcp/TestDelegatingCallableStatement.java
--- commons-dbcp-1.4-src/src/test/org/apache/commons/dbcp/TestDelegatingCallableStatement.java	2010-02-08 01:59:19.000000000 +0900
+++ commons-dbcp-1.4.x/src/test/org/apache/commons/dbcp/TestDelegatingCallableStatement.java	2011-04-29 06:46:47.432072000 +0900
@@ -25,7 +25,7 @@
 import junit.framework.TestSuite;
 
 /**
- * @version $Revision: 896721 $ $Date: 2010-01-06 18:50:53 -0500 (Wed, 06 Jan 2010) $
+ * @version $Revision: 1097625 $ $Date: 2011-04-29 06:46:47 +0900 (Fri, 29 Apr 2011) $
  */
 public class TestDelegatingCallableStatement extends TestCase {
     public TestDelegatingCallableStatement(String testName) {
@@ -105,7 +105,7 @@
         // Check self-equals
         assertTrue(stmt1.equals(stmt1));
         assertTrue(stmt2.equals(stmt2));
-        assertFalse(stmt3.equals(stmt3)); // because underlying statement is null
+        assertTrue(stmt3.equals(stmt3)); 
         assertTrue(stmt4.equals(stmt4));
         
         DelegatingStatement dstmt1 = stmt1;
@@ -113,6 +113,9 @@
         // 1 & 2 are equivalent
         assertTrue(dstmt1.equals(stmt2));
         assertTrue(stmt2.equals(dstmt1)); // reflexive
+        
+        // innermost delegate itself - bugged behavior?
+        assertTrue(stmt1.equals(delegateStmt));
 
     }
 
diff -uNr commons-dbcp-1.4-src/src/test/org/apache/commons/dbcp/TestDelegatingConnection.java commons-dbcp-1.4.x/src/test/org/apache/commons/dbcp/TestDelegatingConnection.java
--- commons-dbcp-1.4-src/src/test/org/apache/commons/dbcp/TestDelegatingConnection.java	2010-02-08 01:59:19.000000000 +0900
+++ commons-dbcp-1.4.x/src/test/org/apache/commons/dbcp/TestDelegatingConnection.java	2011-05-03 09:40:07.520020000 +0900
@@ -28,7 +28,7 @@
 
 /**
  * @author Dirk Verbeeck
- * @version $Revision: 883414 $ $Date: 2009-11-23 12:03:51 -0500 (Mon, 23 Nov 2009) $
+ * @version $Revision: 1098877 $ $Date: 2011-05-03 09:40:07 +0900 (Tue, 03 May 2011) $
  */
 public class TestDelegatingConnection extends TestCase {
     public TestDelegatingConnection(String testName) {
@@ -78,6 +78,10 @@
         assertTrue(conn.equals(conn2));
         assertTrue(!conn.equals(conn3));
         assertTrue(conn.equals(conn));
+        assertTrue(conn3.equals(conn3));
+        assertTrue(conn.equals(conn));
+        assertTrue(conn2.equals(conn2));
+        assertTrue(conn3.equals(new DelegatingConnection(null)));
     }
     
     public void testCheckOpen() throws Exception {
diff -uNr commons-dbcp-1.4-src/src/test/org/apache/commons/dbcp/TestDelegatingDatabaseMetaData.java commons-dbcp-1.4.x/src/test/org/apache/commons/dbcp/TestDelegatingDatabaseMetaData.java
--- commons-dbcp-1.4-src/src/test/org/apache/commons/dbcp/TestDelegatingDatabaseMetaData.java	2010-02-08 01:59:19.000000000 +0900
+++ commons-dbcp-1.4.x/src/test/org/apache/commons/dbcp/TestDelegatingDatabaseMetaData.java	2011-04-29 06:46:47.432072000 +0900
@@ -83,6 +83,9 @@
         assertTrue(!meta1.equals(null));
         assertTrue(meta1.equals(meta2));
         assertTrue(!meta1.equals(meta3));
+        assertTrue(meta1.equals(meta1));
+        assertTrue(meta2.equals(meta2));
+        assertTrue(meta3.equals(meta3));
     }
     
     /* JDBC_4_ANT_KEY_BEGIN */
diff -uNr commons-dbcp-1.4-src/src/test/org/apache/commons/dbcp/TestDelegatingPreparedStatement.java commons-dbcp-1.4.x/src/test/org/apache/commons/dbcp/TestDelegatingPreparedStatement.java
--- commons-dbcp-1.4-src/src/test/org/apache/commons/dbcp/TestDelegatingPreparedStatement.java	2010-02-08 01:59:19.000000000 +0900
+++ commons-dbcp-1.4.x/src/test/org/apache/commons/dbcp/TestDelegatingPreparedStatement.java	2011-04-29 06:46:47.432072000 +0900
@@ -27,7 +27,7 @@
 /**
  * @author Rodney Waldhoff
  * @author Dirk Verbeeck
- * @version $Revision: 896720 $ $Date: 2010-01-06 18:43:07 -0500 (Wed, 06 Jan 2010) $
+ * @version $Revision: 1097625 $ $Date: 2011-04-29 06:46:47 +0900 (Fri, 29 Apr 2011) $
  */
 public class TestDelegatingPreparedStatement extends TestCase {
     public TestDelegatingPreparedStatement(String testName) {
@@ -107,7 +107,7 @@
         // Check self-equals
         assertTrue(stmt1.equals(stmt1));
         assertTrue(stmt2.equals(stmt2));
-        assertFalse(stmt3.equals(stmt3)); // because underlying statement is null
+        assertTrue(stmt3.equals(stmt3)); 
         assertTrue(stmt4.equals(stmt4));
         
         DelegatingStatement dstmt1 = stmt1;
@@ -115,6 +115,9 @@
         // 1 & 2 are equivalent
         assertTrue(dstmt1.equals(stmt2));
         assertTrue(stmt2.equals(dstmt1)); // reflexive
+        
+        // innermost delegate itself - bugged behavior?
+        assertTrue(stmt1.equals(delegateStmt));
 
     }
 
diff -uNr commons-dbcp-1.4-src/src/test/org/apache/commons/dbcp/TestDelegatingStatement.java commons-dbcp-1.4.x/src/test/org/apache/commons/dbcp/TestDelegatingStatement.java
--- commons-dbcp-1.4-src/src/test/org/apache/commons/dbcp/TestDelegatingStatement.java	2010-02-08 01:59:19.000000000 +0900
+++ commons-dbcp-1.4.x/src/test/org/apache/commons/dbcp/TestDelegatingStatement.java	2011-04-29 06:46:47.432072000 +0900
@@ -28,7 +28,7 @@
 /**
  * @author Rodney Waldhoff
  * @author Dirk Verbeeck
- * @version $Revision: 895724 $ $Date: 2010-01-04 12:48:34 -0500 (Mon, 04 Jan 2010) $
+ * @version $Revision: 1097625 $ $Date: 2011-04-29 06:46:47 +0900 (Fri, 29 Apr 2011) $
  */
 public class TestDelegatingStatement extends TestCase {
     public TestDelegatingStatement(String testName) {
@@ -63,7 +63,9 @@
         delegateStmt = new TesterPreparedStatement(delegateConn,"select * from foo");
         DelegatingStatement stmt1 = new DelegatingStatement(conn,delegateStmt);
         DelegatingStatement stmt2 = new DelegatingStatement(conn,delegateStmt);
+        DelegatingStatement stmt3 = new DelegatingStatement(conn, null);
         assertEquals(stmt1.hashCode(), stmt2.hashCode());
+        assertTrue(stmt1.hashCode() != stmt3.hashCode());
     }
     
     public void testEquals() {
@@ -71,10 +73,25 @@
         DelegatingStatement stmt1 = new DelegatingStatement(conn, delegateStmt);
         DelegatingStatement stmt2 = new DelegatingStatement(conn, delegateStmt);
         DelegatingStatement stmt3 = new DelegatingStatement(conn, null);
+        DelegatingStatement stmt4 = new DelegatingStatement(conn, stmt1);
         
+        // not null
         assertTrue(!stmt1.equals(null));
+        
+        // same innermost delegate
         assertTrue(stmt1.equals(stmt2));
+        assertTrue(stmt1.equals(stmt4));
+        
+        // innermost delegate itself - bugged behavior?
+        assertTrue(stmt1.equals(delegateStmt));
+        
+        // not same delegate
         assertTrue(!stmt1.equals(stmt3));
+        
+        // reflexive
+        assertTrue(stmt1.equals(stmt1));
+        assertTrue(stmt2.equals(stmt2));
+        assertTrue(stmt3.equals(stmt3));
     }
     
     public void testCheckOpen() throws Exception {
diff -uNr commons-dbcp-1.4-src/src/test/org/apache/commons/dbcp/TesterClassLoader.java commons-dbcp-1.4.x/src/test/org/apache/commons/dbcp/TesterClassLoader.java
--- commons-dbcp-1.4-src/src/test/org/apache/commons/dbcp/TesterClassLoader.java	1970-01-01 09:00:00.000000000 +0900
+++ commons-dbcp-1.4.x/src/test/org/apache/commons/dbcp/TesterClassLoader.java	2011-03-23 05:45:34.980642000 +0900
@@ -0,0 +1,40 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ * 
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.apache.commons.dbcp;
+
+import java.util.HashSet;
+import java.util.Set;
+
+/**
+ * Simple class loader that just records the classes it was asked to load.
+ */
+public class TesterClassLoader extends ClassLoader {
+
+    private Set<String> loadedClasses = new HashSet<String>();
+    
+    @Override
+    protected synchronized Class<?> loadClass(String name, boolean resolve)
+            throws ClassNotFoundException {
+        Class<?> clazz =  super.loadClass(name, resolve);
+        loadedClasses.add(name);
+        return clazz;
+    }
+
+    public boolean didLoad(String className) {
+        return loadedClasses.contains(className);
+    }
+}
diff -uNr commons-dbcp-1.4-src/src/test/org/apache/commons/dbcp/TesterDriver.java commons-dbcp-1.4.x/src/test/org/apache/commons/dbcp/TesterDriver.java
--- commons-dbcp-1.4-src/src/test/org/apache/commons/dbcp/TesterDriver.java	2010-02-08 01:59:19.000000000 +0900
+++ commons-dbcp-1.4.x/src/test/org/apache/commons/dbcp/TesterDriver.java	2010-10-29 12:03:05.385919000 +0900
@@ -39,7 +39,7 @@
  * 
  * @author Rodney Waldhoff
  * @author Dirk Verbeeck
- * @version $Revision: 907288 $ $Date: 2010-02-06 14:42:58 -0500 (Sat, 06 Feb 2010) $
+ * @version $Revision: 1028593 $ $Date: 2010-10-29 12:03:05 +0900 (Fri, 29 Oct 2010) $
  */
 public class TesterDriver implements Driver {
     private static final Properties validUserPasswords = new Properties();
@@ -69,6 +69,9 @@
 
     private void assertValidUserPassword(String user, String password) 
         throws SQLException {
+        if (user == null){
+            throw new SQLException("username cannot be null.");            
+        }
         synchronized (validUserPasswords) {
             String realPassword = validUserPasswords.getProperty(user);
             if (realPassword == null) {
diff -uNr commons-dbcp-1.4-src/src/test/org/apache/commons/dbcp/TesterPreparedStatement.java commons-dbcp-1.4.x/src/test/org/apache/commons/dbcp/TesterPreparedStatement.java
--- commons-dbcp-1.4-src/src/test/org/apache/commons/dbcp/TesterPreparedStatement.java	2010-02-08 01:59:19.000000000 +0900
+++ commons-dbcp-1.4.x/src/test/org/apache/commons/dbcp/TesterPreparedStatement.java	2011-04-24 08:04:43.817882000 +0900
@@ -41,7 +41,7 @@
  * 
  * @author Rodney Waldhoff
  * @author Dirk Verbeeck
- * @version $Revision: 883942 $ $Date: 2009-11-24 20:00:03 -0500 (Tue, 24 Nov 2009) $
+ * @version $Revision: 1096257 $ $Date: 2011-04-24 08:04:43 +0900 (Sun, 24 Apr 2011) $
  */
 public class TesterPreparedStatement extends TesterStatement implements PreparedStatement {
     private ResultSetMetaData _resultSetMetaData = null;
@@ -249,32 +249,32 @@
 
     public int executeUpdate(String sql, int autoGeneratedKeys)
         throws SQLException {
-        throw new SQLException("Not implemented.");
+        checkOpen(); return 0;
     }
 
     public int executeUpdate(String sql, int columnIndexes[])
         throws SQLException {
-        throw new SQLException("Not implemented.");
+        checkOpen(); return 0;
     }
 
     public int executeUpdate(String sql, String columnNames[])
         throws SQLException {
-        throw new SQLException("Not implemented.");
+        checkOpen(); return 0;
     }
 
     public boolean execute(String sql, int autoGeneratedKeys)
         throws SQLException {
-        throw new SQLException("Not implemented.");
+        checkOpen(); return true;
     }
 
     public boolean execute(String sl, int columnIndexes[])
         throws SQLException {
-        throw new SQLException("Not implemented.");
+        checkOpen(); return true;
     }
 
     public boolean execute(String sql, String columnNames[])
         throws SQLException {
-        throw new SQLException("Not implemented.");
+        checkOpen(); return true;
     }
 
     public int getResultSetHoldability() throws SQLException {
diff -uNr commons-dbcp-1.4-src/xdocs/building.xml commons-dbcp-1.4.x/xdocs/building.xml
--- commons-dbcp-1.4-src/xdocs/building.xml	2010-02-08 01:59:19.000000000 +0900
+++ commons-dbcp-1.4.x/xdocs/building.xml	1970-01-01 09:00:00.000000000 +0900
@@ -1,60 +0,0 @@
-<?xml version="1.0"?>
-<!--
-Licensed to the Apache Software Foundation (ASF) under one or more
-contributor license agreements.  See the NOTICE file distributed with
-this work for additional information regarding copyright ownership.
-The ASF licenses this file to You under the Apache License, Version 2.0
-(the "License"); you may not use this file except in compliance with
-the License.  You may obtain a copy of the License at
-
-     http://www.apache.org/licenses/LICENSE-2.0
-
-Unless required by applicable law or agreed to in writing, software
-distributed under the License is distributed on an "AS IS" BASIS,
-WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-See the License for the specific language governing permissions and
-limitations under the License.
--->
-<document>
- <properties>
-  <title>Building</title>
-  <author email="dev@commons.apache.org">Commons Documentation Team</author>
- </properties>
-<body>
-<!-- ================================================== -->
-<section name="Overview">
-<p>
-  Commons DBCP uses <a href="http://maven.apache.org">Maven</a> or
-  <a href="http://ant.apache.org">Ant</a> as a build system.
-  The maven build requires maven 2 and JDK 1.6.  The Ant build works with
-  JDK 1.4, 1.5 or 1.6.
-</p>
-</section>
-<!-- ================================================== -->
-<section name="Maven Goals">
-  <p>
-    To build a jar file, change into DBCP's root directory and run 
-    <strong><code>mvn package</code></strong>.
-    The result will be in the "target" subdirectory.
-  </p>
-  <p>
-    To build the Javadocs, run <strong><code>mvn javadoc:javadoc</code></strong>.
-    The result will be in "target/site/apidocs/".
-  </p>
-  <p>
-    To build the full website, run <strong><code>mvn site</code></strong>.
-    The result will be in "target/site".
-  </p>
-</section>
-<!-- ================================================== -->
-<section name="Ant Goals">
-  <p>
-    To build a jar file and the javadocs, change into DBCP's root directory
-    and run <strong><code>ant dist</code></strong>.
-    The result will be in the "dist" subdirectory.
-  </p>
-</section>
-
-<!-- ================================================== -->
-</body>
-</document>
diff -uNr commons-dbcp-1.4-src/xdocs/changes.xml commons-dbcp-1.4.x/xdocs/changes.xml
--- commons-dbcp-1.4-src/xdocs/changes.xml	2010-02-08 01:59:19.000000000 +0900
+++ commons-dbcp-1.4.x/xdocs/changes.xml	1970-01-01 09:00:00.000000000 +0900
@@ -1,419 +0,0 @@
-<?xml version="1.0"?>
-<!--
-   Licensed to the Apache Software Foundation (ASF) under one or more
-  contributor license agreements.  See the NOTICE file distributed with
-  this work for additional information regarding copyright ownership.
-  The ASF licenses this file to You under the Apache License, Version 2.0
-  (the "License"); you may not use this file except in compliance with
-  the License.  You may obtain a copy of the License at
-
-       http://www.apache.org/licenses/LICENSE-2.0
-
-   Unless required by applicable law or agreed to in writing, software
-   distributed under the License is distributed on an "AS IS" BASIS,
-   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-   See the License for the specific language governing permissions and
-   limitations under the License.
--->
-
-<!--
-This file is used by the maven-changes-plugin to generate the release notes.
-Useful ways of finding items to add to this file are:
-
-1.  Add items when you fix a bug or add a feature (this makes the 
-release process easy :-).
-
-2.  Do a bugzilla search for tickets closed since the previous release.
-
-3.  Use the report generated by the maven-changelog-plugin to see all
-CVS commits.  Set the project.properties' maven.changelog.range 
-property to the number of days since the last release.
-
-
-The <action> type attribute can be add,update,fix,remove.
--->
-
-<document>
-  <properties>
-    <title>Commons DBCP Release Notes</title>
-  </properties>
-  <body>
-    <release version="1.4" date="TBD" description="This release includes
-     new features as well as bug fixes and enhancements.  Some bug fixes
-     change semantics (e.g. connection close is now idempotent).  The 1.3
-     and 1.4 releases of DBCP are built from the same sources.  Version 1.4 
-     supports JDBC 4, so requires JDK 1.6. Applications running under
-     JDK 1.4-1.5 must use DBCP 1.3. Applications running under JDK 1.6
-     should use DBCP 1.4. Other than support for the added methods in JDBC 4,
-     there is nothing new or different in DBCP 1.4 vs. DBCP 1.3.   The list of
-     changes below since 1.2.2 applies to both the 1.3 and 1.4 release.  Other than
-     the one issue related to adding JDBC 4 support (DBCP-191), all bug fixes
-     or new features are included in both DBCP 1.3 and 1.4 ">
-      <action dev="psteitz" type="fix" issue="DBCP-320">
-        Eliminated poolKeys cache from PerUserPoolDataSource.
-      </action>
-      <action dev="sebb" type="fix" issue="DBCP-321">
-        Eliminated userKeys LRUMap cache from SharedPoolDataSource.
-      </action>
-      <action dev="psteitz" type="fix" issue="DBCP-319" due-to="Sebastian Bazley">
-        Made private fields final where possible.
-      </action>
-      <action dev="sebb" type="fix" issue="DBCP-318" due-to="Sebastian Bazley">
-        PerUserPoolDataSource.getPooledConnectionAndInfo multi-threading bug.
-      </action>
-      <action dev="sebb" type="fix" issue="DBCP-315" due-to="Sebastian Bazley">
-        Remove throws clause from method that does not throw an exception.
-      </action>
-      <action dev="sebb" type="fix" issue="DBCP-313" due-to="Sebastian Bazley">
-        Remove code that catches and ignores Exceptions when calling
-        PooledConnection.removeConnectionEventListener(ConnectionEventListener)
-        as the method does not throw any Exceptions.
-      </action>
-      <action dev="sebb" type="fix" issue="DBCP-316" due-to="Sebastian Bazley">
-        Remove impossible null check.
-      </action>
-      <action dev="sebb" type="update" issue="DBCP-314" due-to="Sebastian Bazley">
-        Renamed variables with duplicate names in different scopes.
-      </action>
-      <action dev="psteitz" type="update" issue="DBCP-312" due-to="Glen Mazza">
-        Clarified javadoc for BasicDataSource close() method.
-      </action>
-      <action dev="psteitz" type="add" issue="DBCP-204" due-to="Wei Chen">
-        Made PoolingConnection pool CallableStatements. When BasicDataSource's 
-        poolPreparedStatements property is true, CallableStatements are now
-        pooled along with PreparedStatements. The maxOpenPreparedStatements
-        property limits the combined number of Callable and Prepared statements
-        that can be in use at a given time.
-      </action>
-      <action dev="markt" type="update" issue="DBCP-305" due-to="Christopher Schultz">
-        Use an API specific exception for logging abandoned objects to make
-        scanning the logs for these exceptions simpler and to provide a better
-        message that includes the creation time of the abandoned object.
-      </action>
-      <action dev="markt" type="fix" issue="DBCP-303" due-to="Dave Oxley">
-        Ensure Statement.getGeneratedKeys() works correctly with the CPDS
-        adapter.
-      </action>
-      <action dev="psteitz" type="fix" issue="DBCP-302" due-to="Sebastian Bazley">
-        Removed incorrectly advertised ClassNotFoundException from
-        JOCLContentHandler.ConstructorDetails.createObject().
-      </action>
-      <action dev="markt" type="update" issue="DBCP-203" due-to="Mark Grand">
-        Make the class loader used to load the JDBC driver configurable for the
-        BasicDatasource.
-      </action>
-      <action dev="markt" type="fix" issue="DBCP-8">
-        Handle user password changes for InstanceKeyDataSources.
-      </action>
-      <action dev="psteitz" type="update" issue="DBCP-289" due-to="Marc Kannegie√üer">
-        Made XADataSource configurable in BasicManagedDataSource.
-      </action>
-      <action dev="psteitz" type="fix" issue="DBCP-294" due-to="Philippe Mouawad">
-        Added PoolableManagedConnection and PoolableManagedConnectionFactory so that
-        pooled managed connections can unregister themselves from transaction registries,
-        avoiding resource leaks.
-      </action>
-      <action dev="psteitz" type="update" issue="DBCP-276">
-        Added connectionProperties property to DriverAdapterCPDS.
-      </action>
-      <action dev="psteitz" type="add" issue="DBCP-226">
-        Added a validationQueryTimeout configuration parameter to BasicDataSource
-        allowing the user to specify a timeout value (in seconds) for connection
-        validation queries. 
-      </action>
-      <action dev="psteitz" type="add" issue="DBCP-175" due-to="Jiri Melichna and Jerome Lacoste">
-        Added a connectionInitSqls configuration parameter to BasicDataSource
-        allowing the user to specify a collection of SQL statements to execute
-        one time when a physical database connection is first opened.
-      </action>
-      <action dev="markt" type="fix" issue="DBCP-212">
-        PoolableConnectionFactory.makeObject() is no longer synchronized. This
-        provides improved response times when load spikes at the cost of a
-        faster rise in database server load. This change was made as a partial
-        fix for DBCP-212.  The synchronization changes in Commons Pool 1.5 complete
-        the fix for this issue.
-      </action>
-      <action dev="psteitz" type="fix" issue="DBCP-242">
-        Reverted DelegatingConnection close to 1.2.2 version to ensure
-        open statements are closed before the underlying connection is closed.
-      </action>
-      <action dev="markt" type="fix" issue="DBCP-235">
-        Refactor DelegatingConnection and ManagedConnection enable overridden
-        equals() and hashcode() to work correctly.
-      </action>
-      <action dev="markt" type="update" issue="DBCP-265">
-        Add a DelegatingDatabaseMetaData to track ResultSets returned from
-        DatabaseMetaData objects.
-      </action>
-      <action dev="markt" type="fix" issue="DBCP-215">
-        Modified BasicDataSourceFactory to complete initialization of the pool
-        by creating initialSize connections rather than leaving this to lazy
-        initialization when the pool is used.
-      </action>
-      <action dev="markt" type="fix" issue="DBCP-253">
-        Eliminated masked _stmt field in descendents of DelegatingStatement.
-       </action>
-      <action dev="markt" type="fix" issue="DBCP-191" due-to="Michael Heuer and J. David Beutel" >
-        Modified DBCP sources to support compilation under JDK 1.4-1.6
-        using Ant flags to do conditional compilation.
-      </action>
-      <action dev="markt" type="fix" issue="DBCP-272">
-        Added a static initializer to BasicDatasource that calls
-        DriverManager.getDrivers() to force initialization before we ever do
-        anything that might use Class.forName() to load (and register) a JDBC
-        driver.
-      </action>
-      <action dev="markt" type="fix" issue="DBCP-4">
-        Eliminated direct System.out calls in AbandonedTrace.
-      </action>
-      <action dev="niallp" type="fix" issue="DBCP-264">
-        Modified DelegatingStatment close to clear open batches.
-      </action>
-      <action dev="psteitz" type="fix" issue="DBCP-255">
-        Eliminated unused private "parent" field in AbandonedTrace.
-      </action>
-      <action dev="psteitz" type="fix" issue="DBCP-273" due-to="Mark Lin">
-        Fixed errors handling boolean-valued Reference properties in 
-        InstanceKeyObjectFactory, DriverAdapterCPDS that were causing 
-        testOnBorrow and poolPreparedStatements properties to be incorrectly
-        set when creating objects from javax.naming.Reference instances.
-      </action>
-      <action dev="psteitz" type="fix" issue="DBCP-271" due-to="Sebastian Bazley">
-        Made private instance fields of AbandonedTrace volatile (parent,
-        createdBy, lastUsed, createdTime) or final (trace).
-      </action>
-      <action dev="psteitz" type="fix" issue="DBCP-270" due-to="Filip Hanik">
-        Narrowed synchronization in AbandonedTrace to resolve an Evictor deadlock.
-      </action>
-      <action dev="bayard" type="fix" issue="DBCP-218">
-        Corrected Javadoc to state that getLoginTimeout and setLoginTimeout are
-        NOT supported by BasicDataSource.
-      </action>
-      <action dev="bayard" type="update" issue="DBCP-211">
-        Added Maven 2 pom.xml. Removed a block of code from TestJOCLed that set
-        the Xerces parser manually. This was to support early JDKs. The 1.3
-        version of DBCP requires JDK 1.4+.
-      </action>
-      <action dev="psteitz" type="add" issue="DBCP-228" due-to="Dain Sundstrom">
-        Added support for pooling managed connections.
-      </action>
-      <action dev="psteitz" type="add" issue="DBCP-230" due-to="Dain Sundstrom">
-        Added BasicManagedDataSource, extending BasicDataSource.
-        Also improved extensibility of BasicDataSource by encapsulating
-        methods to create object pool, connection factory and datasource
-        instance previously embedded in createDataSource.
-      </action>
-      <action dev="psteitz" type="update" issue="DBCP-233" due-to="Dain Sundstrom">
-        Changed behavior to allow Connection, Statement, PreparedStatement,
-        CallableStatement and ResultSet to be closed multiple times. The first
-        time close is called the resource is closed and any subsequent calls
-        have no effect. This behavior is required as per the JavaDocs for these
-        classes. Also added tests for closing all types multiple times and
-        updated any tests that incorrectly assert that a resource can not be
-        closed more then once.  Fixes DBCP-3, DBCP-5, DBCP-23 and DBCP-134.
-      </action>
-      <action dev="psteitz" type="update" issue="DBCP-11" due-to="Dain Sundstrom">
-        Modified PoolingDataSource, PoolingDriver and DelegatingStatement to
-        assure that all returned Statements, PreparedStatements, 
-        CallableStatements and ResultSets are wrapped with a delegating object,
-        which already properly handle the back pointers for Connection and
-        Statement.  Also added tests to to assure that the *same* object used 
-        to create the statement or result set is returned  from either 
-        getConnection() or getStatement().
-      </action>
-      <action dev="dain" type="update" issue="DBCP-143">
-        SQLNestedException has been deprecated and will be replaced in DBCP 2.0 with
-        SQLException and standard Java exception chaining.
-      </action>
-      <action dev="dain" type="fix" issue="DBCP-221">
-        BasicDataSource.close() now permanently marks the data source as closed,
-        and no new connections can be obtained from the data source. At close all
-        idle connections are destroyed and the method returns.  As the remaining
-        active connections are closed, they are destroyed.
-      </action>
-      <action dev="psteitz" type="fix" issue="DBCP-241">
-        Eliminated potential sources of NullPointerExceptions in 
-        PoolingConnection.
-      </action>
-      <action dev="psteitz" type="fix" issue="DBCP-216" due-to="Marcos Sanz">
-        Improved error recovery and listener cleanup in 
-        KeyedCPDSConnectionFactory. Substituted calls to destroyObject with
-         _pool.invalidateObject on error to ensure pool active count is
-        decremented on error events. Ensured that events from closed or invalid
-        connections are ignored and listeners are cleaned up. 
-      </action>
-      <action dev="psteitz" type="fix" issue="DBCP-245" due-to="Michael Drechsel">
-        Fixed error in SharedPoolDataSource causing incorrect passwords to be 
-        stored under certain conditions.
-      </action> 
-      <action dev="psteitz" type="fix" issue="DBCP-237" due-to="Oliver Matz">
-        Added exception handler to ensure that PooledConnections are not
-        orphaned when an exception occurs in setUpDefaults or clearWarnings in 
-        IntanceKeyDataSource.getConnection.
-      </action> 
-      <action dev="psteitz" type="fix" issue="DBCP-252" due-to="FindBugs">
-        Made getPool synchronized in PoolableConnectionFactory.
-        Fixes inconsistent synchronization accessing _pool.
-      </action> 
-      <action dev="psteitz" type="fix" issue="DBCP-252" due-to="FindBugs">
-        Fixed inconsistent synchronization on _rollbackAfterValidation,
-        _validationQuery and _pool in CPDSConnectionFactory and 
-        KeyedCPDSConnectionFactory by making the first two volatile and making
-        both getter and setter for _pool synchronized.
-      </action> 
-    </release>
-    <release version="1.3" date="TBD" description="Compatability release for JDBC 3.
-      See version 1.4 description and change log.">
-     <action type="update">
-        See &lt;a href="changes-report.html#a1.4"&gt;DBCP 1.4 Changes &lt;/a&gt; for details. Version
-        1.3 is identical to 1.4, other than JDBC 4 methods being filtered out of the DBCP 1.3 sources. Changes
-        Since 1.2.2 are the same for 1.3 and 1.4.
-      </action>
-    </release>
-    <release version="1.2.2" date="2007-04-04"
-      description="This is a maintenance release containing bug fixes
-      and enhancements. All API changes are binary compatible with version 1.2.1.">
-      <action dev="dirkv " type="add">
-        Add a &lt;i&gt;JNDI How To&lt;/i&gt; to the User Guide.
-      </action>
-      <action dev="dirkv " type="fix" issue="DBCP-108" due-to="Maxwell Grender-Jones">
-        DriverManagerConnectionFactory: blank username/password handling.
-      </action>
-      <action dev="dirkv " type="fix" issue="DBCP-113" due-to="Rohan Lenard">
-        Broken behaviour for BasicDataSource.setMaxActive(0).
-      </action>
-      <action dev="dirkv " type="fix" issue="DBCP-36" due-to="Jonathan Whitall">
-        BasicDataSource does not work with getConnection(String, String).
-      </action>
-      <action dev="dirkv " type="update" issue="DBCP-164" due-to="Todd Carmichael">
-        Enhancements to prepared statement in DriverAdapterCPDS.
-      </action>
-      <action dev="yoavs" type="update" issue="DBCP-186" due-to="Ralf Hauser">
-        Better messages and docs for LoginTimeout UnsupportedOperationException.
-      </action>
-      <action dev="yoavs" type="fix" issue="DBCP-50" due-to="Nicky Nicolson">
-        Error in JOCL snippet in org.apache.commons.dbcp package javadoc.
-      </action>
-      <action dev="yoavs" type="update" issue="DBCP-165" due-to="QM">
-        Added toString() methods to DelegatingPreparedStatement and DelegatingStatement
-      </action>
-      <action dev="yoavs" type="fix">
-        Changes to make DBCP compile on JDK 1.5 by adding source="1.4" to compiler
-        arguments (there are compiler errors in JDK 5.0 without this source switch
-        that cannot be fixed without JDK 5.0-specific syntax).
-      </action>
-      <action dev="dirkv " type="fix" issue="DBCP-20" due-to="Chris Nappin">
-        Per-user pooling with Oracle driver and default isolation settings.
-      </action>
-      <action dev="dirkv " type="fix" issue="DBCP-9" due-to="Adrian Baker">
-        Error in JOCL document in javadoc.
-      </action>
-      <action dev="sullis" type="update">
-        Added toString() method to DelegatingConnection.
-      </action>
-      <action dev="dirkv " type="update" issue="DBCP-181" due-to="Meikel Bisping">
-        Add DriverManager.invalidateConnection().
-      </action>
-      <action dev="dirkv " type="fix" issue="DBCP-184" due-to="Meikel Bisping">
-        Improved Exception nesting in ConnectionPool.
-      </action>
-      <action dev="dennisl" type="fix" issue="DBCP-144" due-to="Sebb">
-        Fix broken website links for examples.
-      </action>
-      <action dev="psteitz" type="fix" issue="DBCP-28" 
-        due-to="Huw Lewis, James Ring">
-        Modified PoolableConnection close method to invalidate instance
-        when invoked on an already closed connection.
-      </action>
-      <action dev="joehni" type="fix" issue="DBCP-81">
-        Inserted null checks to avoid NPE in close operations.
-      </action>
-      <action dev="psteitz" type="fix" issue="DBCP-105" 
-        due-to="Sandy McArthur, Thomas Fischer">
-        Changed getReference method in InstanceKeyDataSource to return a
-        concrete factory and added implementations of getReference in concrete
-        subclasses.
-      </action>
-      <action dev="psteitz" type="fix" issue="DBCP-39" due-to="Jindrich Vimr">
-        Inserted null check in close method of SharedPoolDataSource to avoid
-        NPE when invoked on non-initialized pool.
-      </action>
-      <action dev="psteitz" type="fix" issue="DBCP-71" due-to="Douglas Squirrel">
-        Document fact that true values for testOnBorrow, testOnReturn, testWhileIdle
-        only have effect when validationQuery is set to a non-null string.
-      </action>
-      <action dev="psteitz" type="fix" issue="DBCP-102">
-        Modified activateObject in PoolableConnection to test connection
-        properties before resetting to defaults.
-      </action>
-      <action dev="sandymac" type="fix" issue="DBCP-188">
-        Corrected maxActive documentation in configuration.html.
-      </action>
-      <action dev="psteitz"  type="update">
-        Upgraded dependency to Pool 1.3.
-      </action>
-      <action dev="psteitz" type="update" issue="DBCP-187" due-to="Ralf Hauser">
-        Added connection info to SQLException messages when closed connections
-        (resp stmts) are accessed in DelegatingConnection, DelegatingStatement.
-      </action>
-      <action dev="psteitz" type="fix" issue="DBCP-41" due-to="Anton Tagunov">
-        Fixed errors in pool parameter documentation and made
-        0 value for _maxPreparedStatements in DriverAdapterCPDS behave
-        like a negative value, to be consistent with documentation
-        and pool behavior.
-      </action>
-      <action dev="psteitz" type="fix" issue="DBCP-100">
-        Made userKeys an instance variable (i.e., not static)
-        in SharedPoolDataSource.
-      </action>
-      <action dev="psteitz" type="fix" issue="DBCP-198">
-        Changed implementation of equals in 
-        PoolingDataSource.PoolGuardConnectionWrapper
-        to ensure it is reflexive, even when wrapped connections are not
-        DelegatingConnections.
-      </action>
-      <action dev="psteitz" type="update" issue="DBCP-116" due-to="Thomas Fischer">
-        Added rollbackAfterValidation property and code to issue a rollback on a
-        connection after validation when this property is set to true to eliminate
-        Oracle driver exceptions. Default property value is false.
-      </action>
-      <action dev="psteitz" type="update" issue="DBCP-68">
-        Removed dependency on Commons Collections by adding collections
-        2.1 sources for LRUMap and SequencedHashMap with package scope to 
-        datasources package.
-      </action>
-      <action dev="psteitz" type="fix" issue="DBCP-65">
-        Removed synchronization from prepareStatement methods in
-        PoolingConnection. Synchronization in these methods was causing
-        deadlocks. No resources other than the prepared statement pool are
-        accessed by these methods, and the pool methods are synchronized. 
-        Also fixes DBCP-202.
-      </action>
-    </release>   
-
-    <release version="1.2.1" date="2004-06-12" description="Maintenance Release to restore JDK 1.3 compatibility">
-      <action type="fix">
-        See &lt;a href="release-notes-1.2.1.html"&gt;DBCP 1.2.1 Release Notes&lt;/a&gt; for details.
-      </action>
-    </release>   
-
-    <release version="1.2" date="2004-06-07">
-      <action type="update">
-        See &lt;a href="release-notes-1.2.html"&gt;DBCP 1.2 Release Notes&lt;/a&gt; for details.
-      </action>
-    </release>   
-
-    <release version="1.1" date="2003-10-20">
-      <action type="update">
-        See &lt;a href="release-notes-1.1.html"&gt;DBCP 1.1 Release Notes&lt;/a&gt; for details.
-      </action>
-    </release>   
- 
-   <release version="1.0" date="2002-08-12" description="Initial Release">
-      <action type="add">
-        Initial Release
-      </action>
-    </release>   
-
-  </body>
-</document>
diff -uNr commons-dbcp-1.4-src/xdocs/configuration.xml commons-dbcp-1.4.x/xdocs/configuration.xml
--- commons-dbcp-1.4-src/xdocs/configuration.xml	2010-02-08 01:59:19.000000000 +0900
+++ commons-dbcp-1.4.x/xdocs/configuration.xml	1970-01-01 09:00:00.000000000 +0900
@@ -1,361 +0,0 @@
-<?xml version="1.0" encoding="ISO-8859-1"?>
- <!--
-   Licensed to the Apache Software Foundation (ASF) under one or more
-  contributor license agreements.  See the NOTICE file distributed with
-  this work for additional information regarding copyright ownership.
-  The ASF licenses this file to You under the Apache License, Version 2.0
-  (the "License"); you may not use this file except in compliance with
-  the License.  You may obtain a copy of the License at
-
-       http://www.apache.org/licenses/LICENSE-2.0
-
-   Unless required by applicable law or agreed to in writing, software
-   distributed under the License is distributed on an "AS IS" BASIS,
-   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-   See the License for the specific language governing permissions and
-   limitations under the License.
-  -->
-<document>
-
- <properties>
-  <title>Configuration</title>
-  <author email="dev@commons.apache.org">Commons Documentation Team</author>
- </properties>
-
- <body>
-
-<!--
-<section name="Introduction">
-<p>TODO: add section about tomcat configuration and avoiding the resource leak when reloading tomcat webapps.</p>
-</section>
--->
-
-<!--
-<section name="Dynamic Properties">
-maxActive
-maxIdle
-minIdle
-maxWait
-testOnBorrow
-testOnReturn
-timeBetweenEvictionRunsMillis
-numTestsPerEvictionRun
-minEvictableIdleTimeMillis
-testWhileIdle
-
-</section>
--->
-
-<section name="Parameters">
-
-<table>
-<hr><th>Parameter</th><th>Description</th></hr>
-<tr>
-   <td>username</td>
-   <td>The connection username to be passed to our JDBC driver to establish a connection.</td>
-</tr>
-<tr>
-   <td>password</td>
-   <td>The connection password to be passed to our JDBC driver to establish a connection.</td>
-</tr>
-<tr>
-   <td>url</td>
-   <td>The connection URL to be passed to our JDBC driver to establish a connection.</td>
-</tr>
-<tr>
-   <td>driverClassName</td>
-   <td>The fully qualified Java class name of the JDBC driver to be used.</td>
-</tr>
-<tr>
-   <td>connectionProperties</td>
-   <td>The connection properties that will be sent to our JDBC driver when establishing new connections.
-       <br/>Format of the string must be [propertyName=property;]*
-       <br/><strong>NOTE</strong> - The "user" and "password" properties will be passed explicitly, 
-       so they do not need to be included here.
-   </td>
-</tr>
-</table>
-
-
-<table>
-<hr><th>Parameter</th><th>Default</th><th>Description</th></hr>
-<tr>
-   <td>defaultAutoCommit</td>
-   <td>true</td>
-   <td>The default auto-commit state of connections created by this pool.</td>
-</tr>
-<tr>
-   <td>defaultReadOnly</td>
-   <td>driver default</td>
-   <td>The default read-only state of connections created by this pool.
-       If not set then the setReadOnly method will not be called.
-       (Some drivers don't support read only mode, ex: Informix)
-   </td>
-</tr>
-<tr>
-   <td>defaultTransactionIsolation</td>
-   <td>driver default</td>
-   <td>The default TransactionIsolation state of connections created by this pool.
-       One of the following: (see 
-       <a href="http://java.sun.com/j2se/1.4.2/docs/api/java/sql/Connection.html#field_summary">javadoc</a>)
-       <ul>
-          <li>NONE</li>
-          <li>READ_COMMITTED</li>
-          <li>READ_UNCOMMITTED</li>
-          <li>REPEATABLE_READ</li>
-          <li>SERIALIZABLE</li>
-       </ul>
-   </td>
-</tr>
-<tr>
-   <td>defaultCatalog</td>
-   <td></td>
-   <td>The default catalog of connections created by this pool.</td>
-</tr>
-</table>
-
-
-<table>
-<hr><th>Parameter</th><th>Default</th><th>Description</th></hr>
-<tr>
-   <td>initialSize</td>
-   <td>0</td>
-   <td>
-      The initial number of connections that are created when the pool
-      is started.
-      <br/>Since: 1.2
-   </td>
-</tr>
-<tr>
-   <td>maxActive</td>
-   <td>8</td>
-   <td>
-      The maximum number of active connections that can be allocated from
-      this pool at the same time, or negative for no limit.
-   </td>
-</tr>
-<tr>
-   <td>maxIdle</td>
-   <td>8</td>
-   <td>
-      The maximum number of connections that can remain idle in the
-      pool, without extra ones being released, or negative for no limit.
-   </td>
-</tr>
-<tr>
-   <td>minIdle</td>
-   <td>0</td>
-   <td>
-      The minimum number of connections that can remain idle in the
-      pool, without extra ones being created, or zero to create none.
-   </td>
-</tr>
-<tr>
-   <td>maxWait</td>
-   <td>indefinitely</td>
-   <td>
-      The maximum number of milliseconds that the pool will wait (when there
-      are no available connections) for a connection to be returned before
-      throwing an exception, or -1 to wait indefinitely.
-   </td>
-</tr>
-</table>
-<p>
-<img src="images/icon_warning_sml.gif"/>
-<strong>NOTE</strong>: If maxIdle is set too low on heavily loaded systems it is
-possible you will see connections being closed and almost immediately new
-connections being opened. This is a result of the active threads momentarily
-closing connections faster than they are opening them, causing the number of
-idle connections to rise above maxIdle. The best value for maxIdle for heavily
-loaded system will vary but the default is a good starting point.
-</p>
-
-
-<table>
-<hr><th>Parameter</th><th>Default</th><th>Description</th></hr>
-<tr>
-   <td>validationQuery</td>
-   <td></td>
-   <td>
-The SQL query that will be used to validate connections from this pool
-before returning them to the caller.  If specified, this query
-<strong>MUST</strong> be an SQL SELECT statement that returns at least
-one row.
-   </td>
-</tr>
-<tr>
-   <td>testOnBorrow</td>
-   <td>true</td>
-   <td>
-      The indication of whether objects will be validated before being
-      borrowed from the pool.  If the object fails to validate, it will be
-      dropped from the pool, and we will attempt to borrow another.<br/>
-      <strong>NOTE</strong> - for a <code>true</code> value to have any effect,
-      the <code>validationQuery</code> parameter must be set to a non-null
-      string.
-   </td>
-</tr>
-<tr>
-   <td>testOnReturn</td>
-   <td>false</td>
-   <td>
-      The indication of whether objects will be validated before being
-      returned to the pool. <br/> <strong>NOTE</strong> - for a 
-      <code>true</code> value to have any effect, the 
-      <code>validationQuery</code> parameter must be set to a non-null string.
-   </td>
-</tr>
-<tr>
-   <td>testWhileIdle</td>
-   <td>false</td>
-   <td>
-      The indication of whether objects will be validated by the idle object
-      evictor (if any).  If an object fails to validate, it will be dropped
-      from the pool. <br/> <strong>NOTE</strong> - for a <code>true</code>
-      value to have any effect, the <code>validationQuery</code> parameter
-      must be set to a non-null string.
-   </td>
-</tr>
-<tr>
-   <td>timeBetweenEvictionRunsMillis</td>
-   <td>-1</td>
-   <td>
-      The number of milliseconds to sleep between runs of the idle object
-      evictor thread.  When non-positive, no idle object evictor thread will
-      be run.
-   </td>
-</tr>
-<tr>
-   <td>numTestsPerEvictionRun</td>
-   <td>3</td>
-   <td>
-      The number of objects to examine during each run of the idle object
-      evictor thread (if any).
-   </td>
-</tr>
-<tr>
-   <td>minEvictableIdleTimeMillis</td>
-   <td>1000 * 60 * 30</td>
-   <td>
-      The minimum amount of time an object may sit idle in the pool before it
-      is eligable for eviction by the idle object evictor (if any).
-   </td>
-</tr>
-  <tr>
-     <td>connectionInitSqls</td>
-     <td>null</td>
-     <td>
-  A Collection of SQL statements that will be used to initialize physical 
-  connections when they are first created.  These statements are executed
-  only once - when the configured connection factory creates the connection.
-     </td>
-  </tr>
-</table>
-
-<table>
-<hr><th>Parameter</th><th>Default</th><th>Description</th></hr><tr>
-   <td>poolPreparedStatements</td>
-   <td>false</td>
-   <td>Enable prepared statement pooling for this pool.</td>
-</tr>
-<tr>
-   <td>maxOpenPreparedStatements</td>
-   <td>unlimited</td>
-   <td>
-      The maximum number of open statements that can be allocated from
-      the statement pool at the same time, or zero for no limit.
-   </td>
-</tr>
-</table>
-<p>
-<img src="images/icon_info_sml.gif"/>
-This component has also the ability to pool PreparedStatements.
-When enabled a statement pool will be created for each Connection
-and PreparedStatements created by one of the following methods will be pooled:
-<ul>
-   <li>public PreparedStatement prepareStatement(String sql)</li>
-   <li>public PreparedStatement prepareStatement(String sql, int resultSetType, int resultSetConcurrency)</li>
-</ul>
-</p>
-<p>
-<img src="images/icon_warning_sml.gif"/>
-<strong>NOTE</strong> - Make sure your connection has some resources left for the other statements.
-Pooling PreparedStatements may keep their cursors open in the database, causing a connection to run out of cursors,
-especially if maxOpenPreparedStatements is left at the default (unlimited) and an application opens a large number
-of different PreparedStatements per connection. To avoid this problem, maxOpenPreparedStatements should be set to a
-value less than the maximum number of cursors that can be open on a Connection.
-</p>
-
-
-<table>
-<hr><th>Parameter</th><th>Default</th><th>Description</th></hr><tr>
-   <td>accessToUnderlyingConnectionAllowed</td>
-   <td>false</td>
-   <td>Controls if the PoolGuard allows access to the underlying connection.</td>
-</tr>
-</table>
-<p>When allowed you can access the underlying connection using the following construct:</p>
-<source>
-    Connection conn = ds.getConnection();
-    Connection dconn = ((DelegatingConnection) conn).getInnermostDelegate();
-    ...
-    conn.close()
-</source>
-<p>
-<img src="images/icon_info_sml.gif"/>
-Default is false, it is a potential dangerous operation and misbehaving programs can do harmfull things. (closing the underlying or continue using it when the guarded connection is already closed)
-Be carefull and only use when you need direct access to driver specific extentions.
-</p>
-<p>
-<img src="images/icon_warning_sml.gif"/>
-<b>NOTE:</b> Do not close the underlying connection, only the original one.
-</p>
-
-
-<table>
-<hr><th>Parameter</th><th>Default</th><th>Description</th></hr>
-<tr>
-   <td>removeAbandoned</td>
-   <td>false</td>
-   <td>
-      Flag to remove abandoned connections if they exceed the
-      removeAbandonedTimout.<br/>
-      If set to true a connection is considered abandoned and eligible
-      for removal if it has been idle longer than the removeAbandonedTimeout.
-      Setting this to true can recover db connections from poorly written
-      applications which fail to close a connection.
-   </td>
-</tr>
-<tr>
-   <td>removeAbandonedTimeout</td>
-   <td>300</td>
-   <td>Timeout in seconds before an abandoned connection can be removed.</td>
-</tr>
-<tr>
-   <td>logAbandoned</td>
-   <td>false</td>
-   <td>
-      Flag to log stack traces for application code which abandoned
-      a Statement or Connection.<br/>
-      Logging of abandoned Statements and Connections adds overhead
-      for every Connection open or new Statement because a stack   
-      trace has to be generated.  
-   </td>
-</tr>
-</table>
-<p>
-<img src="images/icon_info_sml.gif"/>
-If you have enabled "removeAbandoned" then it is possible that a connection is reclaimed by the pool because it is considered to be abandoned.
-This mechanism is triggered when (getNumIdle() &lt; 2) and (getNumActive() &gt; getMaxActive() - 3)
-</p>
-<p>
-<img src="images/icon_info_sml.gif"/>
-For example maxActive=20 and 18 active connections and 1 idle connection would trigger the "removeAbandoned".
-But only the active connections that aren't used for more then "removeAbandonedTimeout" seconds are removed,
-default (300 sec). Traversing a resultset doesn't count as being used. 
-</p>
-
-</section>
-
-</body>
-</document>
diff -uNr commons-dbcp-1.4-src/xdocs/cvs-usage.xml commons-dbcp-1.4.x/xdocs/cvs-usage.xml
--- commons-dbcp-1.4-src/xdocs/cvs-usage.xml	2010-02-08 01:59:19.000000000 +0900
+++ commons-dbcp-1.4.x/xdocs/cvs-usage.xml	1970-01-01 09:00:00.000000000 +0900
@@ -1,52 +0,0 @@
-<?xml version="1.0" encoding="ISO-8859-1" ?>
-<!-- 
-/*
- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
- * 
- *      http://www.apache.org/licenses/LICENSE-2.0
- * 
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
- -->
-
-<document>
- <properties>
-  <title>Source repository</title>
-  <author email="dev@commons.apache.org">Commons Documentation Team</author>
- </properties>
- <body>
-<!-- ================================================== -->
-<section name="Source repository">
-<p>
-  Apache Commons DBCP is hosted on the Apache
-  <a href="http://subversion.tigris.org/">subversion</a> repository.
-</p>
-<p>
-  The project URL is:<br />
-  <code>http://svn.apache.org/repos/asf/commons/proper/dbcp/trunk</code>
-</p>
-<p>
-  The best way to view the repository is via the
-  <a href="http://svn.apache.org/viewvc/commons/proper/dbcp/trunk/">subversion viewer</a>.
-</p>
-<p>
-  The alternative is to use the
-  <a href="http://svn.apache.org/repos/asf/commons/proper/dbcp/trunk/">native subversion</a> display.
-</p>
-<p>
-  For more information on subversion and creating patches see the
-  <a href="http://www.apache.org/dev/contributors.html">Apache Contributors Guide</a>.
-</p>
-</section>
-<!-- ================================================== -->
-</body>
-</document>
\ No newline at end of file
diff -uNr commons-dbcp-1.4-src/xdocs/download_dbcp.xml commons-dbcp-1.4.x/xdocs/download_dbcp.xml
--- commons-dbcp-1.4-src/xdocs/download_dbcp.xml	2010-02-08 01:59:19.000000000 +0900
+++ commons-dbcp-1.4.x/xdocs/download_dbcp.xml	1970-01-01 09:00:00.000000000 +0900
@@ -1,191 +0,0 @@
-<?xml version="1.0"?>
-<!--
-Licensed to the Apache Software Foundation (ASF) under one or more
-contributor license agreements.  See the NOTICE file distributed with
-this work for additional information regarding copyright ownership.
-The ASF licenses this file to You under the Apache License, Version 2.0
-(the "License"); you may not use this file except in compliance with
-the License.  You may obtain a copy of the License at
-
-     http://www.apache.org/licenses/LICENSE-2.0
-
-Unless required by applicable law or agreed to in writing, software
-distributed under the License is distributed on an "AS IS" BASIS,
-WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-See the License for the specific language governing permissions and
-limitations under the License.
--->
-<!--
- +======================================================================+
- |****                                                              ****|
- |****      THIS IS A MODIFIED VERSION OF THE FILE GENERATED        ****|
- |****      BY THE COMMONS BUILD PLUGIN.  THE MODIFICATION          ****|
- |****      DISPLAYS DOWNLOAD LINKS FOR TWO RELEASE VERSIONS        ****|
- |****      (DBCP 1.3 and 1.4).                                     ****|
- |****                                                              ****|
- +======================================================================+
- | TEMPLATE FILE: download-page-template.xml                            |
- | commons-build-plugin/trunk/src/main/resources/commons-xdoc-templates |
- +======================================================================+
- |                                                                      |
- | To regenerate this file:                                             |    
- |                                                                      |
- | 0) Make sure commons.release.version is set correcly in pom.xml.     |
- |                                                                      |
- | 1) Execute "mvn commons:download-page"                               |
- |                                                                      |                                                                   |
- | 2) Add the sections marked "ADDITIONAL RELEASE"                      |
- |                                                                      |
- |                                                                      |
- +======================================================================+
--->
-<document>
-  <properties>
-    <title>Download Commons DBCP</title>
-    <author email="dev@commons.apache.org">Commons Documentation Team</author>
-  </properties>
-  <body>
-    <section name="Download Commons DBCP">
-      <p>
-        We recommend you use a mirror to download our release
-        builds, but you <strong>must</strong> verify the integrity of
-        the downloaded files using signatures downloaded from our main 
-        distribution directories. Recent releases (48 hours) may not yet
-        be available from the mirrors.
-      </p>
-
-      <p>
-        You are currently using <b>[preferred]</b>.  If you
-        encounter a problem with this mirror, please select another
-        mirror.  If all mirrors are failing, there are <i>backup</i>
-        mirrors (at the end of the mirrors list) that should be
-        available.
-        <br></br>
-        [if-any logo]<a href="[link]"><img align="right" src="[logo]" border="0"></img></a>[end]
-      </p>
-
-      <form action="[location]" method="get" id="SelectMirror">
-        <p>
-          Other mirrors: 
-          <select name="Preferred">
-          [if-any http]
-            [for http]<option value="[http]">[http]</option>[end]
-          [end]
-          [if-any ftp]
-            [for ftp]<option value="[ftp]">[ftp]</option>[end]
-          [end]
-          [if-any backup]
-            [for backup]<option value="[backup]">[backup] (backup)</option>[end]
-          [end]
-          </select>
-          <input type="submit" value="Change"></input>
-        </p>
-      </form>
-
-      <p>
-        The <code>KEYS</code> link links to the code signing keys used to sign the product.
-        The <code>PGP</code> link downloads the OpenPGP compatible signature from our main site. 
-        The <code>MD5</code> link downloads the checksum from the main site.
-      </p>
-
-      <p>
-        For more information concerning Commons DBCP, see the 
-        <a href="index.html" class="name">Commons DBCP</a> web site.
-      </p>
-
-      <p>
-        <div class="links"><span class="link"><a href="http://www.apache.org/dist/commons/KEYS">KEYS</a></span></div>
-        <!-- ADDITIONAL RELEASE -->
-        <subsection name="Latest Release for JDBC 4 (JDK 1.6)">
-        <!-- END ADDITIONAL RELEASE -->
-        <ul class="downloads">
-          <li class="group"><div class="links"><span class="label">Binary</span></div>
-            <ul>
-              <li class="download"><a href="[preferred]/commons/dbcp/binaries/commons-dbcp-1.4-bin.tar.gz">1.4.tar.gz</a>
-                <ul class="attributes">
-                  <li><span class="md5">[<a href="http://www.apache.org/dist/commons/dbcp/binaries/commons-dbcp-1.4-bin.tar.gz.md5">md5</a>]</span>
-                      <span class="pgp">[<a href="http://www.apache.org/dist/commons/dbcp/binaries/commons-dbcp-1.4-bin.tar.gz.asc">pgp</a>]</span>
-                  </li>
-                </ul>
-              </li>
-              <li class="download"><a href="[preferred]/commons/dbcp/binaries/commons-dbcp-1.4-bin.zip">1.4.zip</a>
-                <ul class="attributes">
-                  <li><span class="md5">[<a href="http://www.apache.org/dist/commons/dbcp/binaries/commons-dbcp-1.4-bin.zip.md5">md5</a>]</span>
-                      <span class="pgp">[<a href="http://www.apache.org/dist/commons/dbcp/binaries/commons-dbcp-1.4-bin.zip.asc">pgp</a>]</span>
-                  </li>
-                </ul>
-              </li>
-            </ul>
-          </li>
-          <li class="group"><div class="links"><span class="label">Source</span></div>
-            <ul>
-              <li class="download"><a href="[preferred]/commons/dbcp/source/commons-dbcp-1.4-src.tar.gz">1.4.tar.gz</a>
-                <ul class="attributes">
-                  <li><span class="md5">[<a href="http://www.apache.org/dist/commons/dbcp/source/commons-dbcp-1.4-src.tar.gz.md5">md5</a>]</span>
-                      <span class="pgp">[<a href="http://www.apache.org/dist/commons/dbcp/source/commons-dbcp-1.4-src.tar.gz.asc">pgp</a>]</span>
-                  </li>
-                </ul>
-              </li>
-              <li class="download"><a href="[preferred]/commons/dbcp/source/commons-dbcp-1.4-src.zip">1.4.zip</a>
-                <ul class="attributes">
-                  <li><span class="md5">[<a href="http://www.apache.org/dist/commons/dbcp/source/commons-dbcp-1.4-src.zip.md5">md5</a>]</span>
-                      <span class="pgp">[<a href="http://www.apache.org/dist/commons/dbcp/source/commons-dbcp-1.4-src.zip.asc">pgp</a>]</span>
-                  </li>
-                </ul>
-              </li>
-            </ul>
-          </li>
-          <li class="download"><a href="[preferred]/commons/dbcp/">browse download area</a></li>
-          <li><a href="http://archive.apache.org/dist/commons/dbcp/">archives...</a></li>
-        </ul>
-        <!-- ADDITIONAL RELEASE -->
-        </subsection>
-        <!-- END ADDITIONAL RELEASE -->
-      </p>
-      <!-- ADDITIONAL RELEASE -->
-      <p>
-        <subsection name="Latest Release for JDBC 3 (JDK 1.4-1.5)">
-        <ul class="downloads">
-          <li class="group"><div class="links"><span class="label">Binary</span></div>
-            <ul>
-              <li class="download"><a href="[preferred]/commons/dbcp/binaries/commons-dbcp-1.3-bin.tar.gz">1.3.tar.gz</a>
-                <ul class="attributes">
-                  <li><span class="md5">[<a href="http://www.apache.org/dist/commons/dbcp/binaries/commons-dbcp-1.3-bin.tar.gz.md5">md5</a>]</span>
-                      <span class="pgp">[<a href="http://www.apache.org/dist/commons/dbcp/binaries/commons-dbcp-1.3-bin.tar.gz.asc">pgp</a>]</span>
-                  </li>
-                </ul>
-              </li>
-              <li class="download"><a href="[preferred]/commons/dbcp/binaries/commons-dbcp-1.3-bin.zip">1.3.zip</a>
-                <ul class="attributes">
-                  <li><span class="md5">[<a href="http://www.apache.org/dist/commons/dbcp/binaries/commons-dbcp-1.3-bin.zip.md5">md5</a>]</span>
-                      <span class="pgp">[<a href="http://www.apache.org/dist/commons/dbcp/binaries/commons-dbcp-1.3-bin.zip.asc">pgp</a>]</span>
-                  </li>
-                </ul>
-              </li>
-            </ul>
-          </li>
-          <li class="group"><div class="links"><span class="label">Source</span></div>
-            <ul>
-              <li class="download"><a href="[preferred]/commons/dbcp/source/commons-dbcp-1.3-src.tar.gz">1.3.tar.gz</a>
-                <ul class="attributes">
-                  <li><span class="md5">[<a href="http://www.apache.org/dist/commons/dbcp/source/commons-dbcp-1.3-src.tar.gz.md5">md5</a>]</span>
-                      <span class="pgp">[<a href="http://www.apache.org/dist/commons/dbcp/source/commons-dbcp-1.3-src.tar.gz.asc">pgp</a>]</span>
-                  </li>
-                </ul>
-              </li>
-              <li class="download"><a href="[preferred]/commons/dbcp/source/commons-dbcp-1.3-src.zip">1.3.zip</a>
-                <ul class="attributes">
-                  <li><span class="md5">[<a href="http://www.apache.org/dist/commons/dbcp/source/commons-dbcp-1.3-src.zip.md5">md5</a>]</span>
-                      <span class="pgp">[<a href="http://www.apache.org/dist/commons/dbcp/source/commons-dbcp-1.3-src.zip.asc">pgp</a>]</span>
-                  </li>
-                </ul>
-              </li>
-            </ul>
-          </li>
-        </ul>
-        </subsection>
-      </p>
-      <!-- END ADDITIONAL RELEASE -->
-    </section>
-  </body>
-</document>
diff -uNr commons-dbcp-1.4-src/xdocs/downloads.xml commons-dbcp-1.4.x/xdocs/downloads.xml
--- commons-dbcp-1.4-src/xdocs/downloads.xml	2010-02-08 01:59:19.000000000 +0900
+++ commons-dbcp-1.4.x/xdocs/downloads.xml	1970-01-01 09:00:00.000000000 +0900
@@ -1,44 +0,0 @@
-<?xml version="1.0"?>
-<!--
-   Licensed to the Apache Software Foundation (ASF) under one or more
-   contributor license agreements.  See the NOTICE file distributed with
-   this work for additional information regarding copyright ownership.
-   The ASF licenses this file to You under the Apache License, Version 2.0
-   (the "License"); you may not use this file except in compliance with
-   the License.  You may obtain a copy of the License at
-
-       http://www.apache.org/licenses/LICENSE-2.0
-
-   Unless required by applicable law or agreed to in writing, software
-   distributed under the License is distributed on an "AS IS" BASIS,
-   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-   See the License for the specific language governing permissions and
-   limitations under the License.
--->
-<document>
-   <properties>
-      <title>Downloads</title>
-   </properties>
-
-   <body>
-      <section name="Download DBCP">
-         
-         <subsection name="Releases">
-            <p>Download the <a href="http://commons.apache.org/downloads/download_dbcp.cgi">Latest Release</a>
-               of Commons DBCP.
-            </p>
-            <p>For details of whats new in each version see the <a href="changes-report.html">Release History</a>.</p>
-         </subsection>
-         <subsection name="Archived Releases">
-            <p>
-               Older releases are retained by the Apache Software Foundation but are
-               moved into a
-               <a href="http://archive.apache.org/dist/commons/dbcp/">
-             special archive area</a>.
-            </p>
-         </subsection>
-
-      </section>
-
-   </body>
-</document>
diff -uNr commons-dbcp-1.4-src/xdocs/guide/classdiagrams.xml commons-dbcp-1.4.x/xdocs/guide/classdiagrams.xml
--- commons-dbcp-1.4-src/xdocs/guide/classdiagrams.xml	2010-02-08 01:59:19.000000000 +0900
+++ commons-dbcp-1.4.x/xdocs/guide/classdiagrams.xml	1970-01-01 09:00:00.000000000 +0900
@@ -1,44 +0,0 @@
-<?xml version="1.0" encoding="ISO-8859-1"?>
- <!--
-   Licensed to the Apache Software Foundation (ASF) under one or more
-  contributor license agreements.  See the NOTICE file distributed with
-  this work for additional information regarding copyright ownership.
-  The ASF licenses this file to You under the Apache License, Version 2.0
-  (the "License"); you may not use this file except in compliance with
-  the License.  You may obtain a copy of the License at
-
-       http://www.apache.org/licenses/LICENSE-2.0
-
-   Unless required by applicable law or agreed to in writing, software
-   distributed under the License is distributed on an "AS IS" BASIS,
-   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-   See the License for the specific language governing permissions and
-   limitations under the License.
-  -->
-<document>
-
- <properties>
-  <title>Class Diagrams</title>
-  <author email="dev@commons.apache.org">Commons Documentation Team</author>
- </properties>
-
- <body>
-
-<section name="PoolingDataSource">
-<img src="../images/uml/PoolingDataSource.gif"/>
-</section>
-
-<section name="PoolingConnection">
-<img src="../images/uml/PoolingConnection.gif"/>
-</section>
-
-<section name="Delegating">
-<img src="../images/uml/Delegating.gif"/>
-</section>
-
-<section name="AbandonedObjectPool">
-<img src="../images/uml/AbandonedObjectPool.gif"/>
-</section>
-
-</body>
-</document>
diff -uNr commons-dbcp-1.4-src/xdocs/guide/index.xml commons-dbcp-1.4.x/xdocs/guide/index.xml
--- commons-dbcp-1.4-src/xdocs/guide/index.xml	2010-02-08 01:59:19.000000000 +0900
+++ commons-dbcp-1.4.x/xdocs/guide/index.xml	1970-01-01 09:00:00.000000000 +0900
@@ -1,36 +0,0 @@
-<?xml version="1.0" encoding="ISO-8859-1"?>
- <!--
-   Licensed to the Apache Software Foundation (ASF) under one or more
-  contributor license agreements.  See the NOTICE file distributed with
-  this work for additional information regarding copyright ownership.
-  The ASF licenses this file to You under the Apache License, Version 2.0
-  (the "License"); you may not use this file except in compliance with
-  the License.  You may obtain a copy of the License at
-
-       http://www.apache.org/licenses/LICENSE-2.0
-
-   Unless required by applicable law or agreed to in writing, software
-   distributed under the License is distributed on an "AS IS" BASIS,
-   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-   See the License for the specific language governing permissions and
-   limitations under the License.
-  -->
-<document>
-
- <properties>
-  <title>Developers Guide</title>
-  <author email="dev@commons.apache.org">Commons Documentation Team</author>
- </properties>
-
- <body>
-
-<section name="BasicDataSource">
-<center><img src="../images/uml/BasicDataSource.gif"/></center>
-</section>
-
-<section name="ConnectionFactory">
-<center><img src="../images/uml/ConnectionFactory.gif"/></center>
-</section>
-
-</body>
-</document>
diff -uNr commons-dbcp-1.4-src/xdocs/guide/jndi-howto.xml commons-dbcp-1.4.x/xdocs/guide/jndi-howto.xml
--- commons-dbcp-1.4-src/xdocs/guide/jndi-howto.xml	2010-02-08 01:59:19.000000000 +0900
+++ commons-dbcp-1.4.x/xdocs/guide/jndi-howto.xml	1970-01-01 09:00:00.000000000 +0900
@@ -1,110 +0,0 @@
-<?xml version="1.0" encoding="ISO-8859-1"?>
- <!--
-   Licensed to the Apache Software Foundation (ASF) under one or more
-  contributor license agreements.  See the NOTICE file distributed with
-  this work for additional information regarding copyright ownership.
-  The ASF licenses this file to You under the Apache License, Version 2.0
-  (the "License"); you may not use this file except in compliance with
-  the License.  You may obtain a copy of the License at
-
-       http://www.apache.org/licenses/LICENSE-2.0
-
-   Unless required by applicable law or agreed to in writing, software
-   distributed under the License is distributed on an "AS IS" BASIS,
-   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-   See the License for the specific language governing permissions and
-   limitations under the License.
-  -->
-<document>
-
- <properties>
-  <title>JNDI Howto</title>
-  <author email="dev@commons.apache.org">Commons Documentation Team</author>
- </properties>
-
- <body>
-
-<section name="JNDI Howto">
-<p>
-  The <a href="http://java.sun.com/products/jndi/">Java Naming and Directory Interface</a> 
-  (JNDI) is part of the Java platform, 
-  providing applications based on Java technology with a unified interface to 
-  multiple naming and directory services. You can build powerful and portable 
-  directory-enabled applications using this industry standard.
-</p>
-<p>
-  When you deploy your application inside an application server, the container will setup
-  the JNDI tree for you. But if you are writing a framework or just a standalone application,
-  then the following examples will show you how to construct and bind references to DBCP 
-  datasources.
-</p>
-<p>
-  The following examples are using the sun filesystem JNDI service provider.
-  You can download it from the 
-  <a href="http://java.sun.com/products/jndi/downloads/index.html">JNDI software download</a> page.
-</p>
-</section>
-
-<section name="BasicDataSource">
-<source><![CDATA[
-  System.setProperty(Context.INITIAL_CONTEXT_FACTORY,
-    "com.sun.jndi.fscontext.RefFSContextFactory");
-  System.setProperty(Context.PROVIDER_URL, "file:///tmp");
-  InitialContext ic = new InitialContext();
-
-  // Construct BasicDataSource reference
-  Reference ref = new Reference("javax.sql.DataSource",
-    "org.apache.commons.dbcp.BasicDataSourceFactory", null);
-  ref.add(new StringRefAddr("driverClassName", "org.apache.commons.dbcp.TesterDriver"));
-  ref.add(new StringRefAddr("url", "jdbc:apache:commons:testdriver"));
-  ref.add(new StringRefAddr("username", "username"));
-  ref.add(new StringRefAddr("password", "password"));
-  ic.rebind("jdbc/basic", ref);
-   
-  // Use
-  InitialContext ic2 = new InitialContext();
-  DataSource ds = (DataSource) ic2.lookup("jdbc/basic");
-  assertNotNull(ds);
-  Connection conn = ds.getConnection();
-  assertNotNull(conn);
-  conn.close();
-]]></source>
-</section>
-
-<section name="PerUserPoolDataSource">
-<source><![CDATA[
-  System.setProperty(Context.INITIAL_CONTEXT_FACTORY,
-    "com.sun.jndi.fscontext.RefFSContextFactory");
-  System.setProperty(Context.PROVIDER_URL, "file:///tmp");
-  InitialContext ic = new InitialContext();
-
-  // Construct DriverAdapterCPDS reference
-  Reference cpdsRef = new Reference("org.apache.commons.dbcp.cpdsadapter.DriverAdapterCPDS",
-    "org.apache.commons.dbcp.cpdsadapter.DriverAdapterCPDS", null);
-  cpdsRef.add(new StringRefAddr("driver", "org.apache.commons.dbcp.TesterDriver"));
-  cpdsRef.add(new StringRefAddr("url", "jdbc:apache:commons:testdriver"));
-  cpdsRef.add(new StringRefAddr("user", "foo"));
-  cpdsRef.add(new StringRefAddr("password", "bar"));
-  ic.rebind("jdbc/cpds", cpdsRef);
-     
-  // Construct PerUserPoolDataSource reference
-  Reference ref = new Reference("org.apache.commons.dbcp.datasources.PerUserPoolDataSource",
-    "org.apache.commons.dbcp.datasources.PerUserPoolDataSourceFactory", null);
-  ref.add(new StringRefAddr("dataSourceName", "jdbc/cpds"));
-  ref.add(new StringRefAddr("defaultMaxActive", "100"));
-  ref.add(new StringRefAddr("defaultMaxIdle", "30"));
-  ref.add(new StringRefAddr("defaultMaxWait", "10000"));
-  ic.rebind("jdbc/peruser", ref);
-     
-  // Use
-  InitialContext ic2 = new InitialContext();
-  DataSource ds = (DataSource) ic2.lookup("jdbc/peruser");
-  assertNotNull(ds);
-  Connection conn = ds.getConnection("foo","bar");
-  assertNotNull(conn);
-  conn.close();
-]]></source>
-</section>
-
-</body>
-</document>
diff -uNr commons-dbcp-1.4-src/xdocs/guide/sequencediagrams.xml commons-dbcp-1.4.x/xdocs/guide/sequencediagrams.xml
--- commons-dbcp-1.4-src/xdocs/guide/sequencediagrams.xml	2010-02-08 01:59:19.000000000 +0900
+++ commons-dbcp-1.4.x/xdocs/guide/sequencediagrams.xml	1970-01-01 09:00:00.000000000 +0900
@@ -1,40 +0,0 @@
-<?xml version="1.0" encoding="ISO-8859-1"?>
- <!--
-   Licensed to the Apache Software Foundation (ASF) under one or more
-  contributor license agreements.  See the NOTICE file distributed with
-  this work for additional information regarding copyright ownership.
-  The ASF licenses this file to You under the Apache License, Version 2.0
-  (the "License"); you may not use this file except in compliance with
-  the License.  You may obtain a copy of the License at
-
-       http://www.apache.org/licenses/LICENSE-2.0
-
-   Unless required by applicable law or agreed to in writing, software
-   distributed under the License is distributed on an "AS IS" BASIS,
-   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-   See the License for the specific language governing permissions and
-   limitations under the License.
-  -->
-<document>
-
- <properties>
-  <title>Sequence Diagrams</title>
-  <author email="dev@commons.apache.org">Commons Documentation Team</author>
- </properties>
-
- <body>
-
-<section name="createDataSource">
-<img src="../images/uml/createDataSource.gif"/>
-</section>
-
-<section name="getConnection">
-<img src="../images/uml/getConnection.gif"/>
-</section>
-
-<section name="prepareStatement">
-<img src="../images/uml/prepareStatement.gif"/>
-</section>
-
-</body>
-</document>
Binary files commons-dbcp-1.4-src/xdocs/images/dbcp-logo-blue.jpg and commons-dbcp-1.4.x/xdocs/images/dbcp-logo-blue.jpg differ
Binary files commons-dbcp-1.4-src/xdocs/images/dbcp-logo-white.png and commons-dbcp-1.4.x/xdocs/images/dbcp-logo-white.png differ
Binary files commons-dbcp-1.4-src/xdocs/images/dbcp-logo-white.xcf and commons-dbcp-1.4.x/xdocs/images/dbcp-logo-white.xcf differ
Binary files commons-dbcp-1.4-src/xdocs/images/uml/AbandonedObjectPool.gif and commons-dbcp-1.4.x/xdocs/images/uml/AbandonedObjectPool.gif differ
Binary files commons-dbcp-1.4-src/xdocs/images/uml/BasicDataSource.gif and commons-dbcp-1.4.x/xdocs/images/uml/BasicDataSource.gif differ
Binary files commons-dbcp-1.4-src/xdocs/images/uml/ConnectionFactory.gif and commons-dbcp-1.4.x/xdocs/images/uml/ConnectionFactory.gif differ
Binary files commons-dbcp-1.4-src/xdocs/images/uml/Delegating.gif and commons-dbcp-1.4.x/xdocs/images/uml/Delegating.gif differ
Binary files commons-dbcp-1.4-src/xdocs/images/uml/PoolingConnection.gif and commons-dbcp-1.4.x/xdocs/images/uml/PoolingConnection.gif differ
Binary files commons-dbcp-1.4-src/xdocs/images/uml/PoolingDataSource.gif and commons-dbcp-1.4.x/xdocs/images/uml/PoolingDataSource.gif differ
Binary files commons-dbcp-1.4-src/xdocs/images/uml/createDataSource.gif and commons-dbcp-1.4.x/xdocs/images/uml/createDataSource.gif differ
Binary files commons-dbcp-1.4-src/xdocs/images/uml/getConnection.gif and commons-dbcp-1.4.x/xdocs/images/uml/getConnection.gif differ
Binary files commons-dbcp-1.4-src/xdocs/images/uml/prepareStatement.gif and commons-dbcp-1.4.x/xdocs/images/uml/prepareStatement.gif differ
diff -uNr commons-dbcp-1.4-src/xdocs/index.xml commons-dbcp-1.4.x/xdocs/index.xml
--- commons-dbcp-1.4-src/xdocs/index.xml	2010-02-08 01:59:19.000000000 +0900
+++ commons-dbcp-1.4.x/xdocs/index.xml	1970-01-01 09:00:00.000000000 +0900
@@ -1,89 +0,0 @@
-<?xml version="1.0" encoding="ISO-8859-1"?>
- <!--
-   Licensed to the Apache Software Foundation (ASF) under one or more
-  contributor license agreements.  See the NOTICE file distributed with
-  this work for additional information regarding copyright ownership.
-  The ASF licenses this file to You under the Apache License, Version 2.0
-  (the "License"); you may not use this file except in compliance with
-  the License.  You may obtain a copy of the License at
-
-       http://www.apache.org/licenses/LICENSE-2.0
-
-   Unless required by applicable law or agreed to in writing, software
-   distributed under the License is distributed on an "AS IS" BASIS,
-   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-   See the License for the specific language governing permissions and
-   limitations under the License.
-  -->
-<document>
-
- <properties>
-  <title>Overview</title>
-  <author email="dev@commons.apache.org">Commons Documentation Team</author>
- </properties>
-
- <body>
-
-<section name="The DBCP Component">
-
-<p>Many Apache projects support interaction with a relational database.
-Creating a new connection for each user can be time consuming (often
-requiring multiple seconds of clock time), in order to perform a database
-transaction that might take milliseconds.  Opening a connection per user
-can be unfeasible in a publicly-hosted Internet application where the
-number of simultaneous users can be very large.  Accordingly, developers
-often wish to share a "pool" of open connections between all of the
-application's current users.  The number of users actually performing
-a request at any given time is usually a very small percentage of the
-total number of active users, and during request processing is the only
-time that a database connection is required.  The application itself logs
-into the DBMS, and handles any user account issues internally.</p>
-
-<p>There are several Database Connection Pools already available, both
-within Apache products and elsewhere.  This Commons package provides an
-opportunity to coordinate the efforts required to create and maintain an
-efficient, feature-rich package under the ASF license.</p>
-
-<p>The <code>commons-dbcp</code> package relies on code in the
-<code>commons-pool</code> package to provide the underlying object pool
-mechanisms that it utilizes.</p>
-
-<p>DBCP now comes in two different versions, one to support JDBC 3
-and one to support JDBC 4.  Here is how it works:
-<ul>
-<li>DBCP 1.4 compiles and runs under JDK 1.6 only (JDBC 4)</li>
-<li>DBCP 1.3 compiles and runs under JDK 1.4-1.5 only (JDBC 3)</li>
-</ul>
-</p>
-<p>DBCP 1.4 binaries should be used by applications running under JDK 1.6.</p>
-<p>DBCP 1.3 should be used when running under JDK 1.4 or 1.5.</p>
-
-<p>There is no difference in the codebase supporting these two
-versions, other than that the code implementing methods added
-to support JDBC 4 has been filtered out of the DBCP 1.3 sources.</p>
-
-</section>
-
-<section name="Releases">
-    <p>
-       See the <a href="downloads.html">downloads</a> page for information on obtaining releases.
-    </p>
-</section>
-
-<section name="Documentation">
-
-<p>The 
-<a href="apidocs/index.html">JavaDoc API documents</a> 
-are available online.  In particular, you should
-read the package overview of the 
-<code><a href="apidocs/org/apache/commons/dbcp/package-summary.html#package_description">org.apache.commons.dbcp</a></code>
-package for an overview of how to use DBCP.</p>
-
-<p>There are 
-<a href="http://svn.apache.org/viewvc/commons/proper/dbcp/trunk/doc/">several examples</a> 
-of using DBCP available.</p>
-
-</section>
-
-</body>
-</document>
diff -uNr commons-dbcp-1.4-src/xdocs/issue-tracking.xml commons-dbcp-1.4.x/xdocs/issue-tracking.xml
--- commons-dbcp-1.4-src/xdocs/issue-tracking.xml	2010-02-08 01:59:19.000000000 +0900
+++ commons-dbcp-1.4.x/xdocs/issue-tracking.xml	1970-01-01 09:00:00.000000000 +0900
@@ -1,102 +0,0 @@
-<?xml version="1.0"?>
-<!--
-Licensed to the Apache Software Foundation (ASF) under one or more
-contributor license agreements.  See the NOTICE file distributed with
-this work for additional information regarding copyright ownership.
-The ASF licenses this file to You under the Apache License, Version 2.0
-(the "License"); you may not use this file except in compliance with
-the License.  You may obtain a copy of the License at
-
-     http://www.apache.org/licenses/LICENSE-2.0
-
-Unless required by applicable law or agreed to in writing, software
-distributed under the License is distributed on an "AS IS" BASIS,
-WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-See the License for the specific language governing permissions and
-limitations under the License.
--->
-<!--
- +======================================================================+
- |****                                                              ****|
- |****      THIS FILE IS GENERATED BY THE COMMONS BUILD PLUGIN      ****|
- |****                    DO NOT EDIT DIRECTLY                      ****|
- |****                                                              ****|
- +======================================================================+
- | TEMPLATE FILE: issue-tracking-template.xml                           |
- | commons-build-plugin/trunk/src/main/resources/commons-xdoc-templates |
- +======================================================================+
- |                                                                      |
- | 1) Re-generate using: mvn commons:jira-page                          |
- |                                                                      |
- | 2) Set the following properties in the component's pom:              |
- |    - commons.jira.id  (required, alphabetic, upper case)             |
- |    - commons.jira.pid (required, numeric)                            |
- |                                                                      |
- | 3) Example Properties                                                |
- |                                                                      |
- |  <properties>                                                        |
- |    <commons.jira.id>MATH</commons.jira.id>                           |
- |    <commons.jira.pid>12310485</commons.jira.pid>                     |
- |  </properties>                                                       |
- |                                                                      |
- +======================================================================+
--->
-<document>
-  <properties>
-    <title>Commons DBCP Issue tracking</title>
-    <author email="dev@commons.apache.org">Commons Documentation Team</author>
-  </properties>
-  <body>
-
-    <section name="Commons DBCP Issue tracking">
-      <p>
-      Commons DBCP uses <a href="http://issues.apache.org/jira/">ASF JIRA</a> for tracking issues.
-      See the <a href="http://issues.apache.org/jira/browse/DBCP">Commons DBCP JIRA project page</a>.
-      </p>
-
-      <p>
-      To use JIRA you may need to <a href="http://issues.apache.org/jira/secure/Signup!default.jspa">create an account</a>
-      (if you have previously created/updated Commons issues using Bugzilla an account will have been automatically
-      created and you can use the <a href="http://issues.apache.org/jira/secure/ForgotPassword!default.jspa">Forgot Password</a>
-      page to get a new password).
-      </p>
-
-      <p>
-      If you would like to report a bug, or raise an enhancement request with
-      Commons DBCP please do the following:
-      <ol>
-        <li><a href="http://issues.apache.org/jira/secure/IssueNavigator.jspa?reset=true&amp;pid=12310469&amp;sorter/field=issuekey&amp;sorter/order=DESC&amp;status=1&amp;status=3&amp;status=4">Search existing open bugs</a>.
-            If you find your issue listed then please add a comment with your details.</li>
-        <li><a href="mail-lists.html">Search the mailing list archive(s)</a>.
-            You may find your issue or idea has already been discussed.</li>
-        <li>Decide if your issue is a bug or an enhancement.</li>
-        <li>Submit either a <a href="http://issues.apache.org/jira/secure/CreateIssueDetails!init.jspa?pid=12310469&amp;issuetype=1&amp;priority=4&amp;assignee=-1">bug report</a>
-            or <a href="http://issues.apache.org/jira/secure/CreateIssueDetails!init.jspa?pid=12310469&amp;issuetype=4&amp;priority=4&amp;assignee=-1">enhancement request</a>.</li>
-      </ol>
-      </p>
-
-      <p>
-      Please also remember these points:
-      <ul>
-        <li>the more information you provide, the better we can help you</li>
-        <li>test cases are vital, particularly for any proposed enhancements</li>
-        <li>the developers of Commons DBCP are all unpaid volunteers</li>
-      </ul>
-      </p>
-
-      <p>
-      For more information on subversion and creating patches see the
-      <a href="http://www.apache.org/dev/contributors.html">Apache Contributors Guide</a>.
-      </p>
-
-      <p>
-      You may also find these links useful:
-      <ul>
-        <li><a href="http://issues.apache.org/jira/secure/IssueNavigator.jspa?reset=true&amp;pid=12310469&amp;sorter/field=issuekey&amp;sorter/order=DESC&amp;status=1&amp;status=3&amp;status=4">All Open Commons DBCP bugs</a></li>
-        <li><a href="http://issues.apache.org/jira/secure/IssueNavigator.jspa?reset=true&amp;pid=12310469&amp;sorter/field=issuekey&amp;sorter/order=DESC&amp;status=5&amp;status=6">All Resolved Commons DBCP bugs</a></li>
-        <li><a href="http://issues.apache.org/jira/secure/IssueNavigator.jspa?reset=true&amp;pid=12310469&amp;sorter/field=issuekey&amp;sorter/order=DESC">All Commons DBCP bugs</a></li>
-      </ul>
-      </p>
-    </section>
-  </body>
-</document>
diff -uNr commons-dbcp-1.4-src/xdocs/release-notes-1.1.xml commons-dbcp-1.4.x/xdocs/release-notes-1.1.xml
--- commons-dbcp-1.4-src/xdocs/release-notes-1.1.xml	2010-02-08 01:59:19.000000000 +0900
+++ commons-dbcp-1.4.x/xdocs/release-notes-1.1.xml	1970-01-01 09:00:00.000000000 +0900
@@ -1,156 +0,0 @@
-<?xml version="1.0"?>
-<!--
-   Licensed to the Apache Software Foundation (ASF) under one or more
-  contributor license agreements.  See the NOTICE file distributed with
-  this work for additional information regarding copyright ownership.
-  The ASF licenses this file to You under the Apache License, Version 2.0
-  (the "License"); you may not use this file except in compliance with
-  the License.  You may obtain a copy of the License at
-
-       http://www.apache.org/licenses/LICENSE-2.0
-
-   Unless required by applicable law or agreed to in writing, software
-   distributed under the License is distributed on an "AS IS" BASIS,
-   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-   See the License for the specific language governing permissions and
-   limitations under the License.
--->
-<document>
-   <properties>
-      <title>Release notes for Commons-DBCP 1.1</title>
-      <author email="dev@commons.apache.org">Commons Documentation Team</author>
-      <revision>$Id: release-notes-1.1.xml 561230 2007-07-31 04:17:09Z rahul $</revision>
-   </properties>
-
-   <body>
-     <section name="Release notes for Commons-DBCP 1.1">
-<p>
-There were a lot changes since the 1.0 release on 12 Aug 2002.
-<ul>
-<li>All existing features can now be configured by JNDI Context providers (Tomcat)</li>
-<br/>
-<li>The double close() of a pooled connection is more effectively blocked
-  (you may experience more "Already closed" SQLExceptions)</li>
-<br/>
-<li>Prepared statement pooling is now implemented in BasicDataSource
-  (set poolPreparedStatements=true, maxOpenPreparedStatements=xxx)</li>
-<br/>
-<li>Access to the underlying connection is blocked by default
-  You can access the underlying connection by setting
-  accessToUnderlyingConnectionAllowed=true and by using the following construct:
-  Connection dconn = ((DelegatingConnection) conn).getInnermostDelegate();</li>
-<br/>
-<li>New minIdle parameter for a minimum number of idle connections ready for use</li>
-<br/>
-<li>New connection default properties: defaultCatalog and defaultTransactionIsolation</li>
-<br/>
-<li>Missing driverClassName will now give the following error "No suitable driver"</li>
-<br/>
-<li>Bad validationQuery will produce a meaningful SQLException</li>
-<br/>
-<li>UML Class and sequence diagrams, configuration documentation</li>
-<br/>
-<li>The following issues were resolved since v1.0: (see Bugzilla for complete description)
-<table>
-<tr><th>ID</th><th>Date</th><th>Sev</th><th>State</th><th>Summary</th></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=6934">  6934</a></td><td>2003-09-20</td><td>Blo</td><td>DUPL</td><td>SQLTransformer.java - infinite loop in getConnection</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=7038">  7038</a></td><td>2002-03-18</td><td>Nor</td><td>FIXE</td><td>DBCP does not build under JDK 1.4</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=7727">  7727</a></td><td>2002-04-20</td><td>Maj</td><td>FIXE</td><td>Infinite loop (stack overflow) in BasicDataSource</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=7728">  7728</a></td><td>2002-04-20</td><td>Maj</td><td>FIXE</td><td>BasicDataSource cannot use many JDBC drivers</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=8620">  8620</a></td><td>2002-04-29</td><td>Nor</td><td>INVA</td><td>Closed Connection Exception on setAutoCommit</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=9073">  9073</a></td><td>2002-07-20</td><td>Nor</td><td>FIXE</td><td>BasicDataSource - invalid connections are not checked</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=9850">  9850</a></td><td>2002-07-20</td><td>Nor</td><td>FIXE</td><td>No way to get at SQLException if connection to database fail</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=10592">10592</a></td><td>2002-07-20</td><td>Nor</td><td>DUPL</td><td>dataSource.getConnection never returns in Tomcat using DBCP</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=10614">10614</a></td><td>2002-07-20</td><td>Nor</td><td>FIXE</td><td>DBCP connection pooling broken in Tomcat-4.1.7 (regression)</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=10688">10688</a></td><td>2002-07-20</td><td>Min</td><td>FIXE</td><td>Version in the Manifest</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=10969">10969</a></td><td>2002-07-20</td><td>Maj</td><td>FIXE</td><td>BasicDataSource defaults are unusable</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=11507">11507</a></td><td>2002-08-06</td><td>Nor</td><td>INVA</td><td>Cleanup dead connections</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=12047">12047</a></td><td>2002-11-01</td><td>Nor</td><td>INVA</td><td>validationQuery + MSSQL</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=12400">12400</a></td><td>2002-11-07</td><td>Nor</td><td>WORK</td><td>same connections</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=12409">12409</a></td><td>2002-11-01</td><td>Blo</td><td>FIXE</td><td>Connection can be closed twice</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=12733">12733</a></td><td>2003-02-06</td><td>Nor</td><td>FIXE</td><td>[DBCP][PATCH]Statement.getResultSet() doesn't return null if</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=12869">12869</a></td><td>2002-11-01</td><td>Maj</td><td>FIXE</td><td>Abandoned Connections are never closed</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=13077">13077</a></td><td>2002-11-07</td><td>Enh</td><td>FIXE</td><td>Jdbc2PoolDataSource issues</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=13129">13129</a></td><td>2002-11-01</td><td>Nor</td><td>FIXE</td><td>CPDSConnectionFactory prints invalid error messages</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=13155">13155</a></td><td>2002-10-30</td><td>Nor</td><td>DUPL</td><td>unexpected "exausted pool" error</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=13235">13235</a></td><td>2002-11-16</td><td>Blo</td><td>FIXE</td><td>referenced UserPassKey instances get erroneously returned to</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=13930">13930</a></td><td>2003-03-06</td><td>Enh</td><td>FIXE</td><td>Adding connection parameters to BasicDataSourceFactory</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=13988">13988</a></td><td>2003-03-17</td><td>Enh</td><td>DUPL</td><td>permission error makes connection loop</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=14267">14267</a></td><td>2003-04-28</td><td>Maj</td><td>INVA</td><td>DBCP doesn't work on Tomcat 4.1.12 and Oracle JDBC driver</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=14592">14592</a></td><td>2002-11-15</td><td>Enh</td><td>INVA</td><td>DBCP must be robust against e.g. database shutdowns</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=14663">14663</a></td><td>2003-05-14</td><td>Nor</td><td>REMI</td><td>Tomcat5 server hangs when trying to get the database connect</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=15123">15123</a></td><td>2003-08-21</td><td>Maj</td><td>FIXE</td><td>Incorrect stack trace shown when abandoned connections are c</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=15539">15539</a></td><td>2003-02-06</td><td>Maj</td><td>DUPL</td><td>Strange Result Set on output</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=16283">16283</a></td><td>2003-02-01</td><td>Nor</td><td>WONT</td><td>Inproper use of Exception</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=16581">16581</a></td><td>2003-03-06</td><td>Maj</td><td>FIXE</td><td>Deadlock in AbandonedObjectPool when firewall closes connect</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=16629">16629</a></td><td>2003-03-06</td><td>Nor</td><td>FIXE</td><td>org.apache.commons.dbcp.jdbc2pool.Jdbc2PoolDataSource: setti</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=16987">16987</a></td><td>2003-08-11</td><td>Maj</td><td>FIXE</td><td>race condition in PoolableConnection.close()</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=17015">17015</a></td><td>2003-03-06</td><td>Nor</td><td>FIXE</td><td>GenericObjectPool.invalidateObject() doesn't work with Aband</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=17200">17200</a></td><td>2003-03-06</td><td>Maj</td><td>FIXE</td><td>DBCP: org.apache.commons.dbcp.cpdsadapter.PooledConnectionIm</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=17301">17301</a></td><td>2003-04-08</td><td>Nor</td><td>WONT</td><td>NPE in Oracle driver when using DBCP PoolingDataSource</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=17456">17456</a></td><td>2003-04-08</td><td>Enh</td><td>FIXE</td><td>BasicDataSource should use commons-logging</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=17635">17635</a></td><td>2003-03-06</td><td>Min</td><td>FIXE</td><td>PoolableConnectionFactory-Construction declared to throw Exc</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=17677">17677</a></td><td>2003-05-31</td><td>Maj</td><td>INVA</td><td>Pooled connection architecture vulnerable to double use</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=17678">17678</a></td><td>2003-04-01</td><td>Maj</td><td>FIXE</td><td>DBCP Fails silently in many cases</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=17680">17680</a></td><td>2003-03-13</td><td>Maj</td><td>INVA</td><td>PoolableConnection.reallyClose() doesn't decrement active co</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=17911">17911</a></td><td>2003-04-07</td><td>Maj</td><td>WONT</td><td>Problem with getConnection() and Informix</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=18012">18012</a></td><td>2003-08-26</td><td>Enh</td><td>FIXE</td><td>BasicDataSource doesn't include PreparedStmt Pooling</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=18483">18483</a></td><td>2003-04-08</td><td>Nor</td><td>WONT</td><td>AbandonedObjectPool.removeAbandoned never cleans up the trac</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=18502">18502</a></td><td>2003-03-30</td><td>Blo</td><td>INVA</td><td>java.lang.ClassNotFoundException: org.apache.commons.pool.St</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=18550">18550</a></td><td>2003-08-25</td><td>Enh</td><td>FIXE</td><td>Add defaultTransactionIsolation to BasicDataSource</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=18834">18834</a></td><td>2003-04-08</td><td>Nor</td><td>FIXE</td><td>Jdbc2PoolDataSource throws a RuntimeException when database</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=18905">18905</a></td><td>2003-08-11</td><td>Nor</td><td>FIXE</td><td>Couldn't get connection (Jdbc2PoolDataSource)</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=18921">18921</a></td><td>2003-08-11</td><td>Enh</td><td>FIXE</td><td>Per User methods not working in Jdbc2PoolDataSource</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=18982">18982</a></td><td>2003-04-13</td><td>Maj</td><td>INVA</td><td>Binary distribution missing package</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=19374">19374</a></td><td>2003-08-11</td><td>Nor</td><td>FIXE</td><td>Potential for DelegateStatement, DelegateResultSet to be lef</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=19614">19614</a></td><td>2003-08-13</td><td>Maj</td><td>FIXE</td><td>Poor performance under load</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=19615">19615</a></td><td>2003-05-02</td><td>Maj</td><td>INVA</td><td>Unecessary global synchronized in AbandonedObjectPool method</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=19706">19706</a></td><td>2003-08-26</td><td>Enh</td><td>WONT</td><td>Add Initial Commons Logging to DBCP</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=20649">20649</a></td><td>2003-08-11</td><td>Cri</td><td>INVA</td><td>deadlock when acquiring connections from a pool</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=21132">21132</a></td><td>2003-08-11</td><td>Cri</td><td>DUPL</td><td>Broken pipe despite validation query set</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=21182">21182</a></td><td>2003-08-21</td><td>Nor</td><td>INVA</td><td>[dbcp] removing a webapp does not force connections closed</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=21229">21229</a></td><td>2003-08-11</td><td>Nor</td><td>FIXE</td><td>ConnectionFactory throws SQLException but implementations do</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=21273">21273</a></td><td>2003-08-11</td><td>Nor</td><td>FIXE</td><td>Memory-leak like behaviour in DBCP due to warnings chained t</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=21418">21418</a></td><td>2003-08-11</td><td>Min</td><td>FIXE</td><td>Example code</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=21453">21453</a></td><td>2003-08-11</td><td>Maj</td><td>INVA</td><td>NullPointerException  in DBCP when used for client-server ap</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=21458">21458</a></td><td>2003-08-11</td><td>Nor</td><td>FIXE</td><td>Statements and connections don't implement equals()/hashCode</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=21748">21748</a></td><td>2003-08-11</td><td>Nor</td><td>FIXE</td><td>BasicDataSource.close() throws NPE</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=22078">22078</a></td><td>2003-08-12</td><td>Nor</td><td>FIXE</td><td>[DBCP] testOnBorrow fails if setAutoCommit() throws an excep</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=22079">22079</a></td><td>2003-08-13</td><td>Nor</td><td>FIXE</td><td>[DBCP] if connection closed twice *closed* connection is ret</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=22214">22214</a></td><td>2003-08-11</td><td>Maj</td><td>FIXE</td><td>Delegating ResultSet causing NPE</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=22229">22229</a></td><td>2003-08-13</td><td>Cri</td><td>FIXE</td><td>Foul connection causes livelock of all pool operations</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=22598">22598</a></td><td>2003-08-21</td><td>Enh</td><td>FIXE</td><td>minIdle Functionality for DBCP via Patches Posted for common</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=22736">22736</a></td><td>2003-08-29</td><td>Maj</td><td>INVA</td><td>validationQuery parameter hangs getConnection method.</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=22750">22750</a></td><td>2003-08-27</td><td>Nor</td><td>FIXE</td><td>BasicDataSource always sets testOnBorrow if given a validati</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=22776">22776</a></td><td>2003-09-20</td><td>Nor</td><td>WONT</td><td>DBCP should not be writing messages to stderr or stdout</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=23066">23066</a></td><td>2003-09-13</td><td>Maj</td><td>FIXE</td><td>DriverManager.getConnection() throws DbcpException</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=23081">23081</a></td><td>2003-09-20</td><td>Nor</td><td>FIXE</td><td>DBCP - Bad DB Validation Query Hangs Everything</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=23138">23138</a></td><td>2003-09-13</td><td>Nor</td><td>FIXE</td><td>getDelegate no longer useful since v1.7 of PoolingDataSource</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=23157">23157</a></td><td>2003-09-20</td><td>Enh</td><td>FIXE</td><td>add defaultCatalog to BasicDataSource</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=23185">23185</a></td><td>2003-09-21</td><td>Nor</td><td>WONT</td><td>PoolableConnection.close() won't allow multiple close</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=23291">23291</a></td><td>2003-09-20</td><td>Nor</td><td>FIXE</td><td>impossible to turn off all validation tests when a validatio</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=23293">23293</a></td><td>2003-09-20</td><td>Nor</td><td>FIXE</td><td>setAutoCommit(true) when returning connection to the pool</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=23304">23304</a></td><td>2003-09-21</td><td>Nor</td><td>FIXE</td><td>NullpointerException when no driverClassName is specified</td></tr>
-</table>
-</li>
-<br/>
-<li>The following issues were resolved since v1.1RC1:
-<table>
-<tr><th>ID</th><th>Date</th><th>Sev</th><th>State</th><th>Summary</th></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=22776">22776</a></td><td>2003-09-30</td><td>Nor</td><td>FIXE</td><td>DBCP should not be writing messages to stderr or stdout (removed unneeded logging in AbandonedObjectPool)</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=23491">23491</a></td><td>2003-10-13</td><td>Cri</td><td>FIXE</td><td>Can't configure PerUserPoolDataSource for use with tomcat, <a href="http://commons.apache.org/dbcp/apidocs/org/apache/commons/dbcp/datasources/package-summary.html">more...</a></td></tr>
-</table>
-</li>
-<br/>
-<li>The following issues were resolved since v1.1RC2:
-<table>
-<tr><th>ID</th><th>Date</th><th>Sev</th><th>State</th><th>Summary</th></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=23843">23843</a></td><td>2003-10-20</td><td>Blo</td><td>FIXE</td><td>PerUserPoolDataSource.getConnection(username, pw) may return connection under wrong username</td></tr>
-</table>
-</li>
-</ul>
-</p>
-</section>
-</body>
-</document>
-
diff -uNr commons-dbcp-1.4-src/xdocs/release-notes-1.2.1.xml commons-dbcp-1.4.x/xdocs/release-notes-1.2.1.xml
--- commons-dbcp-1.4-src/xdocs/release-notes-1.2.1.xml	2010-02-08 01:59:19.000000000 +0900
+++ commons-dbcp-1.4.x/xdocs/release-notes-1.2.1.xml	1970-01-01 09:00:00.000000000 +0900
@@ -1,60 +0,0 @@
-<?xml version="1.0"?>
-<!--
-   Licensed to the Apache Software Foundation (ASF) under one or more
-  contributor license agreements.  See the NOTICE file distributed with
-  this work for additional information regarding copyright ownership.
-  The ASF licenses this file to You under the Apache License, Version 2.0
-  (the "License"); you may not use this file except in compliance with
-  the License.  You may obtain a copy of the License at
-
-       http://www.apache.org/licenses/LICENSE-2.0
-
-   Unless required by applicable law or agreed to in writing, software
-   distributed under the License is distributed on an "AS IS" BASIS,
-   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-   See the License for the specific language governing permissions and
-   limitations under the License.
--->
-<document>
-   <properties>
-      <title>Release notes for Commons-DBCP 1.2.1</title>
-      <author email="dev@commons.apache.org">Commons Documentation Team</author>
-      <revision>$Id: release-notes-1.2.1.xml 560804 2007-07-29 20:14:22Z bayard $</revision>
-   </properties>
-
-   <body>
-     <section name="Release notes for Commons-DBCP 1.2.1">
-<p>
-<b>NOTE:</b> DBCP v1.2.1 requires Pool v1.2, make sure you use the correct version!
-</p>
-
-<hr/>
-<p>DBCP 1.2.1 is a maintenance release to restore full JDK 1.3 compatibility.</p>
-<p>The problem lies in the improper use of a JDK 1.4 method: java.lang.Boolean.valueOf(boolean)</p>
-<p>This method was used in the defaultReadOnly property processing.</p>
-<p>We recommend to upgrade to DBCP 1.2.1 to avoid this problem altogether.</p>
-<hr/>
-
-<p>If you use the defaultReadOnly property in a JRE &lt;1.4, you will get the following error:
-<source>
-java.lang.NoSuchMethodError
-	at org.apache.commons.dbcp.BasicDataSource.setDefaultReadOnly(BasicDataSource.java:75)
-	at org.apache.commons.dbcp.BasicDataSourceFactory.createDataSource(BasicDataSourceFactory.java:162)
-	at org.apache.commons.dbcp.BasicDataSourceFactory.getObjectInstance(BasicDataSourceFactory.java:144)
-	at org.apache.naming.factory.ResourceFactory.getObjectInstance(ResourceFactory.java:176)
-</source>
-</p>
-
-<p>The simple workaround is not to use this property. For example remove the following from the tomcat config.xml.
-<source><![CDATA[
-<parameter>
-    <name>defaultReadOnly</name>
-    <value>true</value>
-</parameter>
-]]></source>
-</p>
-
-</section>
-</body>
-</document>
-
diff -uNr commons-dbcp-1.4-src/xdocs/release-notes-1.2.xml commons-dbcp-1.4.x/xdocs/release-notes-1.2.xml
--- commons-dbcp-1.4-src/xdocs/release-notes-1.2.xml	2010-02-08 01:59:19.000000000 +0900
+++ commons-dbcp-1.4.x/xdocs/release-notes-1.2.xml	1970-01-01 09:00:00.000000000 +0900
@@ -1,94 +0,0 @@
-<?xml version="1.0"?>
-<!--
-   Licensed to the Apache Software Foundation (ASF) under one or more
-  contributor license agreements.  See the NOTICE file distributed with
-  this work for additional information regarding copyright ownership.
-  The ASF licenses this file to You under the Apache License, Version 2.0
-  (the "License"); you may not use this file except in compliance with
-  the License.  You may obtain a copy of the License at
-
-       http://www.apache.org/licenses/LICENSE-2.0
-
-   Unless required by applicable law or agreed to in writing, software
-   distributed under the License is distributed on an "AS IS" BASIS,
-   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-   See the License for the specific language governing permissions and
-   limitations under the License.
--->
-<document>
-   <properties>
-      <title>Release notes for Commons-DBCP 1.2</title>
-      <author email="dev@commons.apache.org">Commons Documentation Team</author>
-      <revision>$Id: release-notes-1.2.xml 560804 2007-07-29 20:14:22Z bayard $</revision>
-   </properties>
-
-   <body>
-     <section name="Release notes for Commons-DBCP 1.2">
-<p>
-<b>NOTE:</b> DBCP v1.2 requires Pool v1.2, make sure you use the correct version!
-</p>
-
-<p>
-There were some new features were added since the 1.1 release on 20 October 2003.
-<ul>
-<li>Performance optimizations for the PoolableConnectionFactory of BasicDataSource.</li>
-<br/>
-<li>Add BasicDataSourceFactory.createDataSource(Properties properties) for creating a BasicDataSource.</li>
-<br/>
-<li>Add initialSize parameter to do pre-loading of the connection.</li>
-<br/>
-<li>Refactoring of the DelegatingStatement classes.</li>
-<br/>
-<li>Make some properties dynamic (changeble at runtime), this will be completed in next release.</li>
-<br/>
-<li>Improvements to the prepared statement pooling.</li>
-<br/>
-<li>Driver specific changes/optimizations for: Oracle, Informix, DaffodilDB.</li>
-<br/>
-<li>Several fixes for PerUserPoolDataSource</li>
-<br/>
-<li>PoolingDriver uses now a PoolGuardConnectionWrapper by default. If access to the 
-underlying connection is needed, you have to enable it: PoolingDriver.setAccessToUnderlyingConnectionAllowed(true)</li>
-<br/>
-
-<li>The following issues were resolved since v1.1: (see Bugzilla for complete description)
-<table>
-<tr><th>ID</th><th>Date</th><th>Sev</th><th>State</th><th>Summary</th></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=24562">24562</a></td><td>2003-11-10</td><td>Enh</td><td>FIXE</td><td>PoolingDriver needs a closePool method</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=24328">24328</a></td><td>2003-11-10</td><td>Nor</td><td>FIXE</td><td>PooledConnectionImpl ignores resultsetType and Concurrency</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=24678">24678</a></td><td>2003-11-14</td><td>Maj</td><td>INVA</td><td>DelegatingStatement.getResultSet() never returns null</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=25096">25096</a></td><td>2003-11-30</td><td>Enh</td><td>FIXE</td><td>PoolableConnectionFactory synchronized methods</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=25001">25001</a></td><td>2003-11-30</td><td>Nor</td><td>FIXE</td><td>Oracle 9i and default isolation settings</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=25762">25762</a></td><td>2003-12-26</td><td>Nor</td><td>FIXE</td><td>SharedPoolDataSource getConnection() throws ClassCastException</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=25067">25067</a></td><td>2003-12-26</td><td>Nor</td><td>FIXE</td><td>Please give possibility to acecss ObjectPools from PoolingDriver</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=25795">25795</a></td><td>2003-12-29</td><td>Nor</td><td>DUPL</td><td>NumberFormatException: For input string: "myDB"</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=25794">25794</a></td><td>2003-12-29</td><td>Nor</td><td>FIXE</td><td>ClassNotFoundException: org.apache.xerces.parsers.SAXParser</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=24966">24966</a></td><td>2004-01-06</td><td>Nor</td><td>FIXE</td><td>NullPointer with Oracle 9 driver</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=26072">26072</a></td><td>2004-01-18</td><td>Nor</td><td>FIXE</td><td>Null pointer exception being thrown in SQLNestedException</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=26262">26262</a></td><td>2004-01-20</td><td>Min</td><td>FIXE</td><td>DBCP log message in tomcat has incorrect day</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=26422">26422</a></td><td>2004-01-25</td><td>Enh</td><td>FIXE</td><td>Add BasicDataSourceFactory.createDataSource(Properties properties)</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=25514">25514</a></td><td>2004-02-07</td><td>Enh</td><td>FIXE</td><td>Add initialSize parameter to do pre-loading of the connection</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=24082">24082</a></td><td>2004-02-28</td><td>Blo</td><td>FIXE</td><td>NumberFormatException: For input string: "myDB"</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=24136">24136</a></td><td>2004-02-28</td><td>Nor</td><td>FIXE</td><td>ClassCastException in DriverAdapterCPDS when setPoolPreparedStatements(true)</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=27214">27214</a></td><td>2004-02-29</td><td>Enh</td><td>FIXE</td><td>bad &amp;gt; entity in javadoc</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=27320">27320</a></td><td>2004-02-29</td><td>Nor</td><td>FIXE</td><td>DBCP 1.1 incompatible with Informix (driver doesn't support setReadOnly(...))</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=27465">27465</a></td><td>2004-03-07</td><td>Maj</td><td>FIXE</td><td>memory leak in KeyedCPDSConnectionFactory</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=26966">26966</a></td><td>2004-03-07</td><td>Nor</td><td>WORK</td><td>Connectionpool's connections always returns same hashCode</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=27246">27246</a></td><td>2004-03-07</td><td>Nor</td><td>FIXE</td><td>PreparedStatement cache should be different depending on the Catalog</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=27436">27436</a></td><td>2004-03-08</td><td>Enh</td><td>FIXE</td><td>With Oracle jdbc driver, an unnecessary SQL "set transaction read write" is issued each time a connection is retrieved from the pool</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=28579">28579</a></td><td>2004-04-25</td><td>Nor</td><td>FIXE</td><td>NumActive can become incorrect when removeAbandoned=true</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=28580">28580</a></td><td>2004-04-25</td><td>Enh</td><td>FIXE</td><td>AbandonedObjectPool/Trace should log to stdout</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=28251">28251</a></td><td>2004-05-01</td><td>Nor</td><td>FIXE</td><td>Returning dead database connections to BasicDataSource</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=28688">28688</a></td><td>2004-05-01</td><td>Cri</td><td>INVA</td><td>Cant Deserialize the Class PerUserPoolDataSource</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=28893">28893</a></td><td>2004-05-12</td><td>Min</td><td>FIXE</td><td>PoolableConnectionFactory has incomplete javadoc on validationQuery</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=28912">28912</a></td><td>2004-05-17</td><td>Maj</td><td>FIXE</td><td>Connection re-use conflates logical and physical connections</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=29054">29054</a></td><td>2004-05-20</td><td>Nor</td><td>FIXE</td><td>setTestOnReturn(boolean)</td></tr>
-<tr><td><a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=29055">29055</a></td><td>2004-05-20</td><td>Nor</td><td>FIXE</td><td>AutoCommit and ReadOnly</td></tr>
-</table>
-</li>
-</ul>
-</p>
-</section>
-</body>
-</document>
-
diff -uNr commons-dbcp-1.4-src/xdocs/style/project.css commons-dbcp-1.4.x/xdocs/style/project.css
--- commons-dbcp-1.4-src/xdocs/style/project.css	2010-02-08 01:59:19.000000000 +0900
+++ commons-dbcp-1.4.x/xdocs/style/project.css	1970-01-01 09:00:00.000000000 +0900
@@ -1 +0,0 @@
-@import url("http://commons.apache.org/style/commons-maven.css");
