<?xml version="1.0" encoding="utf-8"?>

<!--
  @notes: Call using the following: ant -f build.xml -Dproject.name=${project name}
-->

<project name="Gentoo_Builder" default="jar" basedir=".">
  <property name="srcdir" value="src/main/java"/>
  <property name="mdosrcdir" value="src/main/mdo"/>
  <property name="resourcesdir" value="src/main/resources"/>
  <property name="javadocsrcdir" value="src/main/javadoc"/>
  <property name="dist" value="target"/>
  <property name="gensrcdir" value="${dist}/generated-sources"/>
  <property name="builddir" value="${dist}/classes"/>
  <property name="buildtestdir" value="${dist}/test-classes"/>
  <property name="testreportsdir" value="${dist}/surefire-reports"/>
  <property name="javadocdir" value="${dist}/site/apidocs"/>
  <property name="libdir" value="lib"/>

  <property name="project.name" value="target"/>
  <property name="jarfile" value="${project.name}.jar"/>

  <property name="debug" value="true"/>

  <property name="description" value="${project.name}"/>
  <property name="vendor" value="Gentoo"/>
  <property name="version" value="1.0"/>
  <property name="activator" value="example.class"/>
  <property name="import.package" value="a,b,c,d"/>
  <property name="export.package" value="a,b,c,d"/>

  <path id="lib.classpath">
    <fileset dir="${libdir}">
      <include name="**/*.jar"/>
    </fileset>
  </path>

  <!-- Override any defined properties -->
  <property file="build.properties"/>

  <target name="init">
    <tstamp/>
    <mkdir dir="${libdir}"/>
    <mkdir dir="${builddir}"/>
    <mkdir dir="${dist}"/>
    <mkdir dir="${javadocdir}"/>
    <available property="available.mdosrcdir" file="${mdosrcdir}" type="dir"/>
    <available property="available.javasrcdir" file="${srcdir}" type="dir"/>
    <available property="available.resources" file="${resourcesdir}" type="dir"/>
    <available property="available.javadocsrcdir" file="${javadocsrcdir}" type="dir"/>
  </target>

  <target name="clean">
    <delete dir="${builddir}"/>
    <delete dir="${dist}"/>
    <delete dir="${javadocdir}"/>
  </target>

  <target name="generate-sources" depends="init" if="available.mdosrcdir">
    <taskdef name="modello" classname="ModelloTask"/>
    <modello model="${mdosrcdir}/${mdofile}" type="xpp3-writer" output="${gensrcdir}" version="${genver}" packagewithversion="${packagewithversion}" usejava5="true" encoding="UTF-8"/>
    <modello model="${mdosrcdir}/${mdofile}" type="java" output="${gensrcdir}" version="${genver}" packagewithversion="${packagewithversion}" usejava5="true" encoding="UTF-8"/>
    <modello model="${mdosrcdir}/${mdofile}" type="xpp3-reader" output="${gensrcdir}" version="${genver}" packagewithversion="${packagewithversion}" usejava5="true" encoding="UTF-8"/>
  </target>

  <target name="generate-xsd" depends="generate-sources" if="genxsd">
    <taskdef name="modello" classname="ModelloTask"/>
    <modello model="${mdosrcdir}/${mdofile}" type="xsd" output="${gensrcdir}" version="${genver}" packagewithversion="false" usejava5="true" encoding="UTF-8"/>
  </target>

  <target name="process-javasrc" depends="generate-xsd" if="available.javasrcdir">
    <copy todir="${gensrcdir}">
      <fileset dir="${srcdir}"/>
    </copy>
  </target>

  <target name="process-resources" depends="process-javasrc" if="available.resources">
    <copy todir="${builddir}">
      <fileset dir="${resourcesdir}"/>
    </copy>
  </target>

  <target name="compile" depends="process-resources">
    <javac debug="${debug}"
           srcdir="${gensrcdir}"
           destdir="${builddir}"
           classpathref="lib.classpath"/>
  </target>

  <target name="jar" depends="compile">
    <copy todir="${builddir}">
      <fileset dir="${gensrcdir}">
        <include name="**/*.properties"/>
        <include name="**/*.html"/>
        <include name="**/*.xml"/>
        <include name="**/*.xsd"/>
      </fileset>
    </copy>
    <jar jarfile="${dist}/${jarfile}">
      <!--
      <manifest>
        <attribute name="Bundle-Name" value="${project.name}"/>
        <attribute name="Bundle-Description" value="${description}"/>
        <attribute name="Bundle-Vendor" value="${vendor}"/>
        <attribute name="Bundle-Version" value="${version}"/>
        <attribute name="Bundle-Activator" value="${activator}"/>
        <attribute name="Import-Package" value="${import.package}"/>
        <attribute name="Export-Package" value="${export.package}"/>
      </manifest>
      -->
      <fileset dir="${builddir}">
        <!--
        <include name="**/*.class"/>
        <include name="**/*.properties"/>
        -->
      </fileset>
    </jar>
  </target>

  <target name="process-javadocsrc" depends="process-javasrc" if="available.javadocsrcdir">
    <copy todir="${gensrcdir}">
      <fileset dir="${javadocsrcdir}"/>
    </copy>
  </target>

  <target name="javadoc" depends="process-javadocsrc">
    <tstamp>
      <format pattern="1999-yyyy" property="year"/>
    </tstamp>
    <javadoc use="true"
             private="true"
             destdir="${javadocdir}"
             author="true"
             version="true"
             windowtitle="${project.name} API"
             doctitle="${project.name}"
             sourcepath="${gensrcdir}"
             classpathref="lib.classpath"/>
  </target>

</project>
