diff -uNr work.orig/src/proxy/net/sf/cglib/core/ClassNameReader.java work/src/proxy/net/sf/cglib/core/ClassNameReader.java
--- work.orig/src/proxy/net/sf/cglib/core/ClassNameReader.java	2006-05-25 11:35:26.000000000 +0900
+++ work/src/proxy/net/sf/cglib/core/ClassNameReader.java	2007-06-08 19:46:32.000000000 +0900
@@ -53,7 +53,7 @@
                     
                     throw EARLY_EXIT;
                 }
-            }, true);
+            }, ClassReader.SKIP_DEBUG);
         } catch (EarlyExitException e) { }
         
         return (String[])array.toArray( new String[]{} );
diff -uNr work.orig/src/proxy/net/sf/cglib/core/DebuggingClassWriter.java work/src/proxy/net/sf/cglib/core/DebuggingClassWriter.java
--- work.orig/src/proxy/net/sf/cglib/core/DebuggingClassWriter.java	2006-05-25 11:35:26.000000000 +0900
+++ work/src/proxy/net/sf/cglib/core/DebuggingClassWriter.java	2007-06-08 19:46:32.000000000 +0900
@@ -43,15 +43,15 @@
         }
     }
     
-    public DebuggingClassWriter(boolean computeMaxs) {
-        super(computeMaxs);
+    public DebuggingClassWriter(int flags) {
+        super(flags);
     }
 
     /**
      * @deprecated
      */
-    public DebuggingClassWriter(boolean computeMaxs, int major, int minor) {
-        super(computeMaxs);
+    public DebuggingClassWriter(int flags, int major, int minor) {
+        super(flags);
     }
     
     public void visit(int version,
@@ -101,7 +101,7 @@
                                 ClassReader cr = new ClassReader(b);
                                 PrintWriter pw = new PrintWriter(new OutputStreamWriter(out));
                                 TraceClassVisitor tcv = new TraceClassVisitor(null, pw);
-                                cr.accept(tcv, false);
+                                cr.accept(tcv, 0);
                                 pw.flush();
                             } finally {
                                 out.close();
diff -uNr work.orig/src/proxy/net/sf/cglib/core/DefaultGeneratorStrategy.java work/src/proxy/net/sf/cglib/core/DefaultGeneratorStrategy.java
--- work.orig/src/proxy/net/sf/cglib/core/DefaultGeneratorStrategy.java	2004-06-25 00:15:20.000000000 +0900
+++ work/src/proxy/net/sf/cglib/core/DefaultGeneratorStrategy.java	2007-06-08 19:46:32.000000000 +0900
@@ -27,7 +27,7 @@
     }
 
     protected ClassWriter getClassWriter() throws Exception {
-        return new DebuggingClassWriter(true);
+        return new DebuggingClassWriter(ClassWriter.COMPUTE_MAXS);
     }
 
     protected byte[] transform(byte[] b) throws Exception {
diff -uNr work.orig/src/proxy/net/sf/cglib/transform/AbstractClassLoader.java work/src/proxy/net/sf/cglib/transform/AbstractClassLoader.java
--- work.orig/src/proxy/net/sf/cglib/transform/AbstractClassLoader.java	2006-05-25 11:35:28.000000000 +0900
+++ work/src/proxy/net/sf/cglib/transform/AbstractClassLoader.java	2007-06-08 19:47:36.000000000 +0900
@@ -86,7 +86,7 @@
         }
 
         try {
-            ClassWriter w =  new DebuggingClassWriter(true);
+            ClassWriter w =  new DebuggingClassWriter(ClassWriter.COMPUTE_MAXS);
             getGenerator(r).generateClass( w );
             byte[] b = w.toByteArray();
             Class c = super.defineClass(name, b, 0, b.length, DOMAIN);
@@ -102,7 +102,7 @@
     }
 
     protected ClassGenerator getGenerator(ClassReader r) {
-        return new ClassReaderGenerator(r, attributes(), skipDebug());
+        return new ClassReaderGenerator(r, attributes(), (skipDebug() ? ClassReader.SKIP_DEBUG : 0));
     }
 
     protected boolean skipDebug() {
diff -uNr work.orig/src/proxy/net/sf/cglib/transform/AbstractTransformTask.java work/src/proxy/net/sf/cglib/transform/AbstractTransformTask.java
--- work.orig/src/proxy/net/sf/cglib/transform/AbstractTransformTask.java	2006-05-25 11:35:28.000000000 +0900
+++ work/src/proxy/net/sf/cglib/transform/AbstractTransformTask.java	2007-06-08 19:46:32.000000000 +0900
@@ -83,7 +83,7 @@
 
         ClassReader reader = getClassReader(file);
         String name[] = ClassNameReader.getClassInfo(reader);
-        ClassWriter w = new DebuggingClassWriter(true);
+        ClassWriter w = new DebuggingClassWriter(ClassWriter.COMPUTE_MAXS);
         ClassTransformer t = getClassTransformer(name);
         if (t != null) {
 
@@ -91,7 +91,7 @@
                 log("processing " + file.toURL());
             }
             new TransformingClassGenerator(new ClassReaderGenerator(
-                    getClassReader(file), attributes(), skipDebug()), t)
+                    getClassReader(file), attributes(), (skipDebug() == true ? ClassReader.SKIP_DEBUG : 0)), t)
                     .generateClass(w);
             FileOutputStream fos = new FileOutputStream(file);
             try {
@@ -221,7 +221,7 @@
 
         ClassReader reader = new ClassReader(new ByteArrayInputStream(bytes));
         String name[] = ClassNameReader.getClassInfo(reader);
-        ClassWriter w = new DebuggingClassWriter(true);
+        ClassWriter w = new DebuggingClassWriter(ClassWriter.COMPUTE_MAXS);
         ClassTransformer t = getClassTransformer(name);
         if (t != null) {
             if (verbose) {
@@ -229,7 +229,7 @@
             }
             new TransformingClassGenerator(new ClassReaderGenerator(
                     new ClassReader(new ByteArrayInputStream(bytes)),
-                    attributes(), skipDebug()), t).generateClass(w);
+                    attributes(), (skipDebug() == true ? ClassReader.SKIP_DEBUG : 0)), t).generateClass(w);
             ByteArrayOutputStream out = new ByteArrayOutputStream();
             out.write(w.toByteArray());
             return out.toByteArray();
@@ -267,4 +267,4 @@
         return checkMagic(file, ZIP_MAGIC);
     }
 
-}
\ No newline at end of file
+}
diff -uNr work.orig/src/proxy/net/sf/cglib/transform/ClassReaderGenerator.java work/src/proxy/net/sf/cglib/transform/ClassReaderGenerator.java
--- work.orig/src/proxy/net/sf/cglib/transform/ClassReaderGenerator.java	2004-07-03 12:29:10.000000000 +0900
+++ work/src/proxy/net/sf/cglib/transform/ClassReaderGenerator.java	2007-06-08 19:46:32.000000000 +0900
@@ -23,21 +23,22 @@
 public class ClassReaderGenerator implements ClassGenerator {
     private ClassReader r;
     private Attribute[] attrs;
-    private boolean skipDebug;
+    //private boolean skipDebug;
+    private int flags;
     
-    public ClassReaderGenerator(ClassReader r, boolean skipDebug) {
-        this(r, null, skipDebug);
+    public ClassReaderGenerator(ClassReader r, int flags) {
+        this(r, null, flags);
     }
 
-    public ClassReaderGenerator(ClassReader r, Attribute[] attrs, boolean skipDebug) {
+    public ClassReaderGenerator(ClassReader r, Attribute[] attrs, int flags) {
         this.r = r;
         if (attrs == null)
             attrs = new Attribute[0];
         this.attrs = attrs;
-        this.skipDebug = skipDebug;
+        this.flags = flags;
     }
     
     public void generateClass(ClassVisitor v) {
-        r.accept(v, attrs, skipDebug);
+        r.accept(v, attrs, flags);
     }
 }
diff -uNr work.orig/src/proxy/net/sf/cglib/transform/MethodVisitorTee.java work/src/proxy/net/sf/cglib/transform/MethodVisitorTee.java
--- work.orig/src/proxy/net/sf/cglib/transform/MethodVisitorTee.java	2006-03-05 04:43:18.000000000 +0900
+++ work/src/proxy/net/sf/cglib/transform/MethodVisitorTee.java	2007-06-08 19:46:32.000000000 +0900
@@ -141,5 +141,10 @@
         mv1.visitEnd();
         mv2.visitEnd();
     }
+
+    public void visitFrame(int type, int nLocal, Object[] local, int nStack, Object[] stack) {
+        mv1.visitFrame(type, nLocal, local, nStack, stack);
+        mv2.visitFrame(type, nLocal, local, nStack, stack);
+    }
 }
 
