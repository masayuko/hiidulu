diff -uNr nwdiag-0.9.4/bootstrap.py nwdiag-tip/bootstrap.py
--- nwdiag-0.9.4/bootstrap.py	2012-10-22 00:22:36.000000000 +0900
+++ nwdiag-tip/bootstrap.py	2013-03-06 04:38:16.000000000 +0900
@@ -18,75 +18,10 @@
 use the -c option to specify an alternate configuration file.
 """
 
-import os, shutil, sys, tempfile, urllib, urllib2, subprocess
+import os, shutil, sys, tempfile
 from optparse import OptionParser
 
-if sys.platform == 'win32':
-    def quote(c):
-        if ' ' in c:
-            return '"%s"' % c  # work around spawn lamosity on windows
-        else:
-            return c
-else:
-    quote = str
-
-# See zc.buildout.easy_install._has_broken_dash_S for motivation and comments.
-stdout, stderr = subprocess.Popen(
-    [sys.executable, '-Sc',
-     'try:\n'
-     '    import ConfigParser\n'
-     'except ImportError:\n'
-     '    print 1\n'
-     'else:\n'
-     '    print 0\n'],
-    stdout=subprocess.PIPE, stderr=subprocess.PIPE).communicate()
-has_broken_dash_S = bool(int(stdout.strip()))
-
-# In order to be more robust in the face of system Pythons, we want to
-# run without site-packages loaded.  This is somewhat tricky, in
-# particular because Python 2.6's distutils imports site, so starting
-# with the -S flag is not sufficient.  However, we'll start with that:
-if not has_broken_dash_S and 'site' in sys.modules:
-    # We will restart with python -S.
-    args = sys.argv[:]
-    args[0:0] = [sys.executable, '-S']
-    args = map(quote, args)
-    os.execv(sys.executable, args)
-# Now we are running with -S.  We'll get the clean sys.path, import site
-# because distutils will do it later, and then reset the path and clean
-# out any namespace packages from site-packages that might have been
-# loaded by .pth files.
-clean_path = sys.path[:]
-import site  # imported because of its side effects
-sys.path[:] = clean_path
-for k, v in sys.modules.items():
-    if k in ('setuptools', 'pkg_resources') or (
-        hasattr(v, '__path__') and
-        len(v.__path__) == 1 and
-        not os.path.exists(os.path.join(v.__path__[0], '__init__.py'))):
-        # This is a namespace package.  Remove it.
-        sys.modules.pop(k)
-
-is_jython = sys.platform.startswith('java')
-
-setuptools_source = 'http://peak.telecommunity.com/dist/ez_setup.py'
-distribute_source = 'http://python-distribute.org/distribute_setup.py'
-
-
-# parsing arguments
-def normalize_to_url(option, opt_str, value, parser):
-    if value:
-        if '://' not in value:  # It doesn't smell like a URL.
-            value = 'file://%s' % (
-                urllib.pathname2url(
-                    os.path.abspath(os.path.expanduser(value))),)
-        if opt_str == '--download-base' and not value.endswith('/'):
-            # Download base needs a trailing slash to make the world happy.
-            value += '/'
-    else:
-        value = None
-    name = opt_str[2:].replace('-', '_')
-    setattr(parser.values, name, value)
+tmpeggs = tempfile.mkdtemp()
 
 usage = '''\
 [DESIRED PYTHON FOR BUILDOUT] bootstrap.py [options]
@@ -101,26 +36,8 @@
 '''
 
 parser = OptionParser(usage=usage)
-parser.add_option("-v", "--version", dest="version",
-                          help="use a specific zc.buildout version")
-parser.add_option("-d", "--distribute",
-                   action="store_true", dest="use_distribute", default=False,
-                   help="Use Distribute rather than Setuptools.")
-parser.add_option("--setup-source", action="callback", dest="setup_source",
-                  callback=normalize_to_url, nargs=1, type="string",
-                  help=("Specify a URL or file location for the setup file. "
-                        "If you use Setuptools, this will default to " +
-                        setuptools_source + "; if you use Distribute, this "
-                        "will default to " + distribute_source + "."))
-parser.add_option("--download-base", action="callback", dest="download_base",
-                  callback=normalize_to_url, nargs=1, type="string",
-                  help=("Specify a URL or directory for downloading "
-                        "zc.buildout and either Setuptools or Distribute. "
-                        "Defaults to PyPI."))
-parser.add_option("--eggs",
-                  help=("Specify a directory for storing eggs.  Defaults to "
-                        "a temporary directory that is deleted when the "
-                        "bootstrap script completes."))
+parser.add_option("-v", "--version", help="use a specific zc.buildout version")
+
 parser.add_option("-t", "--accept-buildout-test-releases",
                   dest='accept_buildout_test_releases',
                   action="store_true", default=False,
@@ -130,50 +47,38 @@
                         "extensions for you.  If you use this flag, "
                         "bootstrap and buildout will get the newest releases "
                         "even if they are alphas or betas."))
-parser.add_option("-c", None, action="store", dest="config_file",
+parser.add_option("-c", "--config-file",
                    help=("Specify the path to the buildout configuration "
                          "file to be used."))
+parser.add_option("-f", "--find-links",
+                   help=("Specify a URL to search for buildout releases"))
 
-options, orig_args = parser.parse_args()
-
-args = []
-
-# if -c was provided, we push it back into args for buildout's main function
-if options.config_file is not None:
-    args += ['-c', options.config_file]
 
-if options.eggs:
-    eggs_dir = os.path.abspath(os.path.expanduser(options.eggs))
-else:
-    eggs_dir = tempfile.mkdtemp()
-
-if options.setup_source is None:
-    if options.use_distribute:
-        options.setup_source = distribute_source
-    else:
-        options.setup_source = setuptools_source
+options, args = parser.parse_args()
 
-if options.accept_buildout_test_releases:
-    args.append('buildout:accept-buildout-test-releases=true')
+######################################################################
+# load/install distribute
 
+to_reload = False
 try:
-    import pkg_resources
-    import setuptools  # A flag.  Sometimes pkg_resources is installed alone.
+    import pkg_resources, setuptools
     if not hasattr(pkg_resources, '_distribute'):
+        to_reload = True
         raise ImportError
 except ImportError:
-    ez_code = urllib2.urlopen(
-        options.setup_source).read().replace('\r\n', '\n')
     ez = {}
-    exec ez_code in ez
-    setup_args = dict(to_dir=eggs_dir, download_delay=0)
-    if options.download_base:
-        setup_args['download_base'] = options.download_base
-    if options.use_distribute:
-        setup_args['no_fake'] = True
+
+    try:
+        from urllib.request import urlopen
+    except ImportError:
+        from urllib2 import urlopen
+
+    exec(urlopen('http://python-distribute.org/distribute_setup.py').read(), ez)
+    setup_args = dict(to_dir=tmpeggs, download_delay=0, no_fake=True)
     ez['use_setuptools'](**setup_args)
-    if 'pkg_resources' in sys.modules:
-        reload(sys.modules['pkg_resources'])
+
+    if to_reload:
+        reload(pkg_resources)
     import pkg_resources
     # This does not (always?) update the default working set.  We will
     # do it.
@@ -181,31 +86,26 @@
         if path not in pkg_resources.working_set.entries:
             pkg_resources.working_set.add_entry(path)
 
-cmd = [quote(sys.executable),
-       '-c',
-       quote('from setuptools.command.easy_install import main; main()'),
-       '-mqNxd',
-       quote(eggs_dir)]
-
-if not has_broken_dash_S:
-    cmd.insert(1, '-S')
-
-find_links = options.download_base
-if not find_links:
-    find_links = os.environ.get('bootstrap-testing-find-links')
+######################################################################
+# Install buildout
+
+ws  = pkg_resources.working_set
+
+cmd = [sys.executable, '-c',
+       'from setuptools.command.easy_install import main; main()',
+       '-mZqNxd', tmpeggs]
+
+find_links = os.environ.get(
+    'bootstrap-testing-find-links',
+    options.find_links or
+    ('http://downloads.buildout.org/'
+     if options.accept_buildout_test_releases else None)
+    )
 if find_links:
-    cmd.extend(['-f', quote(find_links)])
+    cmd.extend(['-f', find_links])
 
-if options.use_distribute:
-    setup_requirement = 'distribute'
-else:
-    setup_requirement = 'setuptools'
-ws = pkg_resources.working_set
-setup_requirement_path = ws.find(
-    pkg_resources.Requirement.parse(setup_requirement)).location
-env = dict(
-    os.environ,
-    PYTHONPATH=setup_requirement_path)
+distribute_path = ws.find(
+    pkg_resources.Requirement.parse('distribute')).location
 
 requirement = 'zc.buildout'
 version = options.version
@@ -213,14 +113,13 @@
     # Figure out the most recent final version of zc.buildout.
     import setuptools.package_index
     _final_parts = '*final-', '*final'
-
     def _final_version(parsed_version):
         for part in parsed_version:
             if (part[:1] == '*') and (part not in _final_parts):
                 return False
         return True
     index = setuptools.package_index.PackageIndex(
-        search_path=[setup_requirement_path])
+        search_path=[distribute_path])
     if find_links:
         index.add_find_links((find_links,))
     req = pkg_resources.Requirement.parse(requirement)
@@ -242,25 +141,25 @@
     requirement = '=='.join((requirement, version))
 cmd.append(requirement)
 
-if is_jython:
-    import subprocess
-    exitcode = subprocess.Popen(cmd, env=env).wait()
-else:  # Windows prefers this, apparently; otherwise we would prefer subprocess
-    exitcode = os.spawnle(*([os.P_WAIT, sys.executable] + cmd + [env]))
-if exitcode != 0:
-    sys.stdout.flush()
-    sys.stderr.flush()
-    print ("An error occurred when trying to install zc.buildout. "
-           "Look above this message for any errors that "
-           "were output by easy_install.")
-    sys.exit(exitcode)
+import subprocess
+if subprocess.call(cmd, env=dict(os.environ, PYTHONPATH=distribute_path)) != 0:
+    raise Exception(
+        "Failed to execute command:\n%s",
+        repr(cmd)[1:-1])
+
+######################################################################
+# Import and run buildout
 
-ws.add_entry(eggs_dir)
+ws.add_entry(tmpeggs)
 ws.require(requirement)
 import zc.buildout.buildout
-if orig_args:
-    # run buildout with commands passed to bootstrap.py, then actually bootstrap
-    zc.buildout.buildout.main(args + orig_args)
-zc.buildout.buildout.main(args + ['bootstrap'])
-if not options.eggs:  # clean up temporary egg directory
-    shutil.rmtree(eggs_dir)
+
+if not [a for a in args if '=' not in a]:
+    args.append('bootstrap')
+
+# if -c was provided, we push it back into args for buildout' main function
+if options.config_file is not None:
+    args[0:0] = ['-c', options.config_file]
+
+zc.buildout.buildout.main(args)
+shutil.rmtree(tmpeggs)
diff -uNr nwdiag-0.9.4/examples/update.sh nwdiag-tip/examples/update.sh
--- nwdiag-0.9.4/examples/update.sh	1970-01-01 09:00:00.000000000 +0900
+++ nwdiag-tip/examples/update.sh	2013-03-06 04:38:16.000000000 +0900
@@ -0,0 +1,27 @@
+#!/bin/sh
+
+EXAMPLES=`dirname $0`
+NWDIAG=$EXAMPLES/../bin/nwdiag
+PACKETDIAG=$EXAMPLES/../bin/packetdiag
+
+for diag in `ls $EXAMPLES/nwdiag/*.diag`
+do
+    png=$EXAMPLES/nwdiag/`basename $diag .diag`.png
+    echo $NWDIAG -Tpng -o $png $diag
+    $NWDIAG -Tpng -o $png $diag
+
+    svg=$EXAMPLES/nwdiag/`basename $diag .diag`.svg
+    echo $NWDIAG -Tsvg -o $svg $diag
+    $NWDIAG -Tsvg -o $svg $diag
+done
+
+for diag in `ls $EXAMPLES/packetdiag/*.diag`
+do
+    png=$EXAMPLES/packetdiag/`basename $diag .diag`.png
+    echo $PACKETDIAG -Tpng -o $png $diag
+    $PACKETDIAG -Tpng -o $png $diag
+
+    svg=$EXAMPLES/packetdiag/`basename $diag .diag`.svg
+    echo $PACKETDIAG -Tsvg -o $svg $diag
+    $PACKETDIAG -Tsvg -o $svg $diag
+done
diff -uNr nwdiag-0.9.4/packetdiag.1 nwdiag-tip/packetdiag.1
--- nwdiag-0.9.4/packetdiag.1	1970-01-01 09:00:00.000000000 +0900
+++ nwdiag-tip/packetdiag.1	2013-03-06 04:38:16.000000000 +0900
@@ -0,0 +1,67 @@
+.\"                                      Hey, EMACS: -*- nroff -*-
+.\" First parameter, NAME, should be all caps
+.\" Second parameter, SECTION, should be 1-8, maybe w/ subsection
+.\" other parameters are allowed: see man(7), man(1)
+.TH NWDIAG 1 "June 11, 2011"
+.\" Please adjust this date whenever revising the manpage.
+.\"
+.\" Some roff macros, for reference:
+.\" .nh        disable hyphenation
+.\" .hy        enable hyphenation
+.\" .ad l      left justify
+.\" .ad b      justify to both left and right margins
+.\" .nf        disable filling
+.\" .fi        enable filling
+.\" .br        insert line break
+.\" .sp <n>    insert n+1 empty lines
+.\" for manpage-specific macros, see man(7)
+.SH NAME
+packetdiag \- generate packet-header-structure-diagram image file from spec-text file.
+.SH SYNOPSIS
+.B packetdiag
+.RI [ options ] " files"
+.br
+.SH DESCRIPTION
+This manual page documents briefly the
+.B packetdiag
+commands.
+.PP
+.\" TeX users may be more comfortable with the \fB<whatever>\fP and
+.\" \fI<whatever>\fP escape sequences to invode bold face and italics,
+.\" respectively.
+\fBpacketdiag\fP is generate sequence-diagram image file from spec-text file.
+.SH OPTIONS
+These programs follow the usual GNU command line syntax, with long
+options starting with two dashes (`-').
+A summary of options is included below.
+For a complete description, see the Info files.
+.TP
+.B \-h, \-\-help
+show this help message and exit.
+.TP
+.B \-\-version
+show program's version number and exit.
+.TP
+.B \-a, \-\-antialias
+Pass diagram image to anti-alias filter.
+.TP
+.B \-c FILE, \-\-config=FILE
+read configurations from FILE.
+.TP
+.B \-o FILE
+write diagram to FILE.
+.TP
+.B \-f FONT, \-\-font=FONT
+use FONT to draw diagram.
+.TP
+.B \-T TYPE
+Output diagram as TYPE format.
+.SH SEE ALSO
+The programs are documented fully by
+.br
+http://blockdiag.com/en/nwdiag/
+.SH AUTHOR
+packetdiag was written by Takeshi Komiya <i.tkomiya@gmail.com>
+.PP
+This manual page was written by Kouhei Maeda <mkouhei@palmtb.net>,
+for the Debian project (and may be used by others).
diff -uNr nwdiag-0.9.4/setup.cfg nwdiag-tip/setup.cfg
--- nwdiag-0.9.4/setup.cfg	2012-12-20 23:58:36.000000000 +0900
+++ nwdiag-tip/setup.cfg	2013-03-06 04:38:16.000000000 +0900
@@ -1,11 +1,9 @@
-[egg_info]
-tag_build = 
-tag_date = 0
-tag_svn_revision = 0
-
-[build]
-build-base = _build
-
-[sdist]
-formats = gztar
-
+[egg_info]
+;tag_build = dev
+
+[build]
+build-base = _build
+
+[sdist]
+formats = gztar
+
diff -uNr nwdiag-0.9.4/src/nwdiag/parser.py nwdiag-tip/src/nwdiag/parser.py
--- nwdiag-0.9.4/src/nwdiag/parser.py	2012-11-17 18:19:57.000000000 +0900
+++ nwdiag-tip/src/nwdiag/parser.py	2013-03-06 04:38:16.000000000 +0900
@@ -40,7 +40,7 @@
 from funcparserlib.lexer import make_tokenizer, Token, LexerError
 from funcparserlib.parser import (some, a, maybe, many, finished, skip)
 
-from blockdiag.utils.namedtuple import namedtuple
+from blockdiag.utils.collections import namedtuple
 
 ENCODING = 'utf-8'
 
diff -uNr nwdiag-0.9.4/src/nwdiag/tests/diagrams/autoexpand_node_width.diag nwdiag-tip/src/nwdiag/tests/diagrams/autoexpand_node_width.diag
--- nwdiag-0.9.4/src/nwdiag/tests/diagrams/autoexpand_node_width.diag	1970-01-01 09:00:00.000000000 +0900
+++ nwdiag-tip/src/nwdiag/tests/diagrams/autoexpand_node_width.diag	2013-03-06 04:38:16.000000000 +0900
@@ -0,0 +1,15 @@
+{
+  network { A }
+  network { A }
+  network { A }
+  network { A }
+  network { A }
+  network { A }
+  network { A }
+  network { A }
+  network { A }
+  network { A }
+  network { A }
+
+  network { B }
+}
diff -uNr nwdiag-0.9.4/src/nwdiag/tests/diagrams/connected_networks.diag nwdiag-tip/src/nwdiag/tests/diagrams/connected_networks.diag
--- nwdiag-0.9.4/src/nwdiag/tests/diagrams/connected_networks.diag	1970-01-01 09:00:00.000000000 +0900
+++ nwdiag-tip/src/nwdiag/tests/diagrams/connected_networks.diag	2013-03-06 04:38:16.000000000 +0900
@@ -0,0 +1,8 @@
+{
+  network {
+    A;
+  }
+  network {
+    A; B;
+  }
+}
diff -uNr nwdiag-0.9.4/src/nwdiag/tests/diagrams/connected_networks2.diag nwdiag-tip/src/nwdiag/tests/diagrams/connected_networks2.diag
--- nwdiag-0.9.4/src/nwdiag/tests/diagrams/connected_networks2.diag	1970-01-01 09:00:00.000000000 +0900
+++ nwdiag-tip/src/nwdiag/tests/diagrams/connected_networks2.diag	2013-03-06 04:38:16.000000000 +0900
@@ -0,0 +1,9 @@
+{
+  network {
+    A; B; C; D; E;
+  }
+  network {
+    E; Z;
+  }
+}
+
diff -uNr nwdiag-0.9.4/src/nwdiag/tests/diagrams/connected_networks3.diag nwdiag-tip/src/nwdiag/tests/diagrams/connected_networks3.diag
--- nwdiag-0.9.4/src/nwdiag/tests/diagrams/connected_networks3.diag	1970-01-01 09:00:00.000000000 +0900
+++ nwdiag-tip/src/nwdiag/tests/diagrams/connected_networks3.diag	2013-03-06 04:38:16.000000000 +0900
@@ -0,0 +1,12 @@
+{
+  network {
+    A; B; C; D; E; F; G;
+  }
+
+  network {
+    A; H; I;
+  }
+  network {
+    G; J; K;
+  }
+}
diff -uNr nwdiag-0.9.4/src/nwdiag/tests/diagrams/diagram_attributes.diag nwdiag-tip/src/nwdiag/tests/diagrams/diagram_attributes.diag
--- nwdiag-0.9.4/src/nwdiag/tests/diagrams/diagram_attributes.diag	1970-01-01 09:00:00.000000000 +0900
+++ nwdiag-tip/src/nwdiag/tests/diagrams/diagram_attributes.diag	2013-03-06 04:38:16.000000000 +0900
@@ -0,0 +1,15 @@
+{
+  node_height = 160;
+  node_width = 160;
+  span_width = 32;
+  span_height = 32;
+  default_fontsize = 16;
+  default_fontfamily = 'serif';
+  default_network_color = red;
+  default_textcolor = red;
+  default_linecolor = red;
+
+  network {
+    A;
+  }
+}
diff -uNr nwdiag-0.9.4/src/nwdiag/tests/diagrams/errors/peer_network_in_same_node.diag nwdiag-tip/src/nwdiag/tests/diagrams/errors/peer_network_in_same_node.diag
--- nwdiag-0.9.4/src/nwdiag/tests/diagrams/errors/peer_network_in_same_node.diag	1970-01-01 09:00:00.000000000 +0900
+++ nwdiag-tip/src/nwdiag/tests/diagrams/errors/peer_network_in_same_node.diag	2013-03-06 04:38:16.000000000 +0900
@@ -0,0 +1,3 @@
+{
+  a -- a;
+}
diff -uNr nwdiag-0.9.4/src/nwdiag/tests/diagrams/group_across_network.diag nwdiag-tip/src/nwdiag/tests/diagrams/group_across_network.diag
--- nwdiag-0.9.4/src/nwdiag/tests/diagrams/group_across_network.diag	1970-01-01 09:00:00.000000000 +0900
+++ nwdiag-tip/src/nwdiag/tests/diagrams/group_across_network.diag	2013-03-06 04:38:16.000000000 +0900
@@ -0,0 +1,13 @@
+{
+  group {
+    A; B; C;
+  }
+
+  network {
+    A; B;
+  }
+
+  network {
+    A; B; C;
+  }
+}
diff -uNr nwdiag-0.9.4/src/nwdiag/tests/diagrams/group_and_peer_network.diag nwdiag-tip/src/nwdiag/tests/diagrams/group_and_peer_network.diag
--- nwdiag-0.9.4/src/nwdiag/tests/diagrams/group_and_peer_network.diag	1970-01-01 09:00:00.000000000 +0900
+++ nwdiag-tip/src/nwdiag/tests/diagrams/group_and_peer_network.diag	2013-03-06 04:38:16.000000000 +0900
@@ -0,0 +1,9 @@
+{
+  A -- B;
+  network {
+    group{
+      B;
+    }
+    C;
+  }
+}
diff -uNr nwdiag-0.9.4/src/nwdiag/tests/diagrams/group_inner_network.diag nwdiag-tip/src/nwdiag/tests/diagrams/group_inner_network.diag
--- nwdiag-0.9.4/src/nwdiag/tests/diagrams/group_inner_network.diag	1970-01-01 09:00:00.000000000 +0900
+++ nwdiag-tip/src/nwdiag/tests/diagrams/group_inner_network.diag	2013-03-06 04:38:16.000000000 +0900
@@ -0,0 +1,8 @@
+{
+  network {
+    group {
+      A;
+      B;
+    }
+  }
+}
diff -uNr nwdiag-0.9.4/src/nwdiag/tests/diagrams/group_network.diag nwdiag-tip/src/nwdiag/tests/diagrams/group_network.diag
--- nwdiag-0.9.4/src/nwdiag/tests/diagrams/group_network.diag	1970-01-01 09:00:00.000000000 +0900
+++ nwdiag-tip/src/nwdiag/tests/diagrams/group_network.diag	2013-03-06 04:38:16.000000000 +0900
@@ -0,0 +1,16 @@
+{
+  network {
+    A;
+    B;
+  }
+  network {
+    B;
+    C;
+    D; 
+    E;
+  }
+
+  group {
+    B; D;
+  }
+}
diff -uNr nwdiag-0.9.4/src/nwdiag/tests/diagrams/group_outer_network.diag nwdiag-tip/src/nwdiag/tests/diagrams/group_outer_network.diag
--- nwdiag-0.9.4/src/nwdiag/tests/diagrams/group_outer_network.diag	1970-01-01 09:00:00.000000000 +0900
+++ nwdiag-tip/src/nwdiag/tests/diagrams/group_outer_network.diag	2013-03-06 04:38:16.000000000 +0900
@@ -0,0 +1,10 @@
+{
+  network {
+    A;
+    B;
+  }
+  group {
+    A;
+    B;
+  }
+}
diff -uNr nwdiag-0.9.4/src/nwdiag/tests/diagrams/node_address_attribute.diag nwdiag-tip/src/nwdiag/tests/diagrams/node_address_attribute.diag
--- nwdiag-0.9.4/src/nwdiag/tests/diagrams/node_address_attribute.diag	1970-01-01 09:00:00.000000000 +0900
+++ nwdiag-tip/src/nwdiag/tests/diagrams/node_address_attribute.diag	2013-03-06 04:38:16.000000000 +0900
@@ -0,0 +1,6 @@
+{
+  network {
+    web01 [address = 192.168.0.1];
+    web02 [address = 2001:0db8:bd05:01d2:288a:1fc0:0001:10ee];
+  }
+}
diff -uNr nwdiag-0.9.4/src/nwdiag/tests/diagrams/node_attributes.diag nwdiag-tip/src/nwdiag/tests/diagrams/node_attributes.diag
--- nwdiag-0.9.4/src/nwdiag/tests/diagrams/node_attributes.diag	1970-01-01 09:00:00.000000000 +0900
+++ nwdiag-tip/src/nwdiag/tests/diagrams/node_attributes.diag	2013-03-06 04:38:16.000000000 +0900
@@ -0,0 +1,6 @@
+{
+  network {
+    A [address = "192.168.0.1"];
+    B [address = "192.168.0.2, 192.168.0.3"];
+  }
+}
diff -uNr nwdiag-0.9.4/src/nwdiag/tests/diagrams/node_belongs_to_multiple_networks.diag nwdiag-tip/src/nwdiag/tests/diagrams/node_belongs_to_multiple_networks.diag
--- nwdiag-0.9.4/src/nwdiag/tests/diagrams/node_belongs_to_multiple_networks.diag	1970-01-01 09:00:00.000000000 +0900
+++ nwdiag-tip/src/nwdiag/tests/diagrams/node_belongs_to_multiple_networks.diag	2013-03-06 04:38:16.000000000 +0900
@@ -0,0 +1,11 @@
+{
+  network {
+    A;
+  }
+  network {
+    A;
+  }
+  network {
+    A;
+  }
+}
diff -uNr nwdiag-0.9.4/src/nwdiag/tests/diagrams/node_including_hyphen.diag nwdiag-tip/src/nwdiag/tests/diagrams/node_including_hyphen.diag
--- nwdiag-0.9.4/src/nwdiag/tests/diagrams/node_including_hyphen.diag	1970-01-01 09:00:00.000000000 +0900
+++ nwdiag-tip/src/nwdiag/tests/diagrams/node_including_hyphen.diag	2013-03-06 04:38:16.000000000 +0900
@@ -0,0 +1,6 @@
+{
+  network {
+    web-01;
+    web-02;
+  }
+}
diff -uNr nwdiag-0.9.4/src/nwdiag/tests/diagrams/peer_network.diag nwdiag-tip/src/nwdiag/tests/diagrams/peer_network.diag
--- nwdiag-0.9.4/src/nwdiag/tests/diagrams/peer_network.diag	1970-01-01 09:00:00.000000000 +0900
+++ nwdiag-tip/src/nwdiag/tests/diagrams/peer_network.diag	2013-03-06 04:38:16.000000000 +0900
@@ -0,0 +1,8 @@
+{
+  A [shape = ellipse];
+  A -- B;
+
+  network {
+    B; C;
+  }
+}
diff -uNr nwdiag-0.9.4/src/nwdiag/tests/diagrams/peer_network2.diag nwdiag-tip/src/nwdiag/tests/diagrams/peer_network2.diag
--- nwdiag-0.9.4/src/nwdiag/tests/diagrams/peer_network2.diag	1970-01-01 09:00:00.000000000 +0900
+++ nwdiag-tip/src/nwdiag/tests/diagrams/peer_network2.diag	2013-03-06 04:38:16.000000000 +0900
@@ -0,0 +1,8 @@
+{
+  network {
+    A;
+    B;
+  }
+
+  B -- C;
+}
diff -uNr nwdiag-0.9.4/src/nwdiag/tests/diagrams/peer_network3.diag nwdiag-tip/src/nwdiag/tests/diagrams/peer_network3.diag
--- nwdiag-0.9.4/src/nwdiag/tests/diagrams/peer_network3.diag	1970-01-01 09:00:00.000000000 +0900
+++ nwdiag-tip/src/nwdiag/tests/diagrams/peer_network3.diag	2013-03-06 04:38:16.000000000 +0900
@@ -0,0 +1,8 @@
+{
+  network {
+    A;
+    B;
+  }
+
+  B -- C -- D;
+}
diff -uNr nwdiag-0.9.4/src/nwdiag/tests/diagrams/peer_network4.diag nwdiag-tip/src/nwdiag/tests/diagrams/peer_network4.diag
--- nwdiag-0.9.4/src/nwdiag/tests/diagrams/peer_network4.diag	1970-01-01 09:00:00.000000000 +0900
+++ nwdiag-tip/src/nwdiag/tests/diagrams/peer_network4.diag	2013-03-06 04:38:16.000000000 +0900
@@ -0,0 +1,4 @@
+{
+  A -- B;
+  A -- C;
+}
diff -uNr nwdiag-0.9.4/src/nwdiag/tests/diagrams/peer_network5.diag nwdiag-tip/src/nwdiag/tests/diagrams/peer_network5.diag
--- nwdiag-0.9.4/src/nwdiag/tests/diagrams/peer_network5.diag	1970-01-01 09:00:00.000000000 +0900
+++ nwdiag-tip/src/nwdiag/tests/diagrams/peer_network5.diag	2013-03-06 04:38:16.000000000 +0900
@@ -0,0 +1,10 @@
+{
+  network {
+    A; B; C;
+  }
+  network {
+    D;
+  }
+
+  A -- B;
+}
diff -uNr nwdiag-0.9.4/src/nwdiag/tests/diagrams/peer_network_branched.diag nwdiag-tip/src/nwdiag/tests/diagrams/peer_network_branched.diag
--- nwdiag-0.9.4/src/nwdiag/tests/diagrams/peer_network_branched.diag	1970-01-01 09:00:00.000000000 +0900
+++ nwdiag-tip/src/nwdiag/tests/diagrams/peer_network_branched.diag	2013-03-06 04:38:16.000000000 +0900
@@ -0,0 +1,9 @@
+{
+  A -- B;
+  B -- C;
+
+  network {
+    B;
+    D;
+  }
+}
diff -uNr nwdiag-0.9.4/src/nwdiag/tests/diagrams/same_peer_network.diag nwdiag-tip/src/nwdiag/tests/diagrams/same_peer_network.diag
--- nwdiag-0.9.4/src/nwdiag/tests/diagrams/same_peer_network.diag	1970-01-01 09:00:00.000000000 +0900
+++ nwdiag-tip/src/nwdiag/tests/diagrams/same_peer_network.diag	2013-03-06 04:38:16.000000000 +0900
@@ -0,0 +1,13 @@
+{
+  A -- B -- A -- B;
+
+  network {
+    B;
+    C;
+  }
+
+  network {
+    C;
+    D;
+  }
+}
diff -uNr nwdiag-0.9.4/src/nwdiag/tests/diagrams/single_network.diag nwdiag-tip/src/nwdiag/tests/diagrams/single_network.diag
--- nwdiag-0.9.4/src/nwdiag/tests/diagrams/single_network.diag	1970-01-01 09:00:00.000000000 +0900
+++ nwdiag-tip/src/nwdiag/tests/diagrams/single_network.diag	2013-03-06 04:38:16.000000000 +0900
@@ -0,0 +1,5 @@
+{
+  network {
+    A;
+  }
+}
diff -uNr nwdiag-0.9.4/src/nwdiag/tests/diagrams/split_group.diag nwdiag-tip/src/nwdiag/tests/diagrams/split_group.diag
--- nwdiag-0.9.4/src/nwdiag/tests/diagrams/split_group.diag	1970-01-01 09:00:00.000000000 +0900
+++ nwdiag-tip/src/nwdiag/tests/diagrams/split_group.diag	2013-03-06 04:38:16.000000000 +0900
@@ -0,0 +1,12 @@
+{
+  network {
+    A; B; C; D; E;
+  }
+
+  group {
+    B; D;
+  }
+  group {
+    C;
+  }
+}
diff -uNr nwdiag-0.9.4/src/nwdiag/tests/diagrams/two_networks.diag nwdiag-tip/src/nwdiag/tests/diagrams/two_networks.diag
--- nwdiag-0.9.4/src/nwdiag/tests/diagrams/two_networks.diag	1970-01-01 09:00:00.000000000 +0900
+++ nwdiag-tip/src/nwdiag/tests/diagrams/two_networks.diag	2013-03-06 04:38:16.000000000 +0900
@@ -0,0 +1,9 @@
+{
+  network {
+    A;
+  }
+
+  network {
+    B;
+  }
+}
diff -uNr nwdiag-0.9.4/src/packetdiag/builder.py nwdiag-tip/src/packetdiag/builder.py
--- nwdiag-0.9.4/src/packetdiag/builder.py	2012-11-17 21:38:24.000000000 +0900
+++ nwdiag-tip/src/packetdiag/builder.py	2013-03-06 04:38:16.000000000 +0900
@@ -32,7 +32,16 @@
             elif isinstance(stmt, parser.FieldItem):
                 item = FieldItem(stmt.number, stmt.label)
                 item.set_attributes(stmt.attrs)
+
+                if item.number is None:
+                    if len(self.diagram.fields) == 0:
+                        item.number = 0
+                    else:
+                        last_item = self.diagram.fields[-1]
+                        item.number = last_item.number + last_item.colwidth
+
                 self.diagram.fields.append(item)
+
             elif isinstance(stmt, parser.AttrPlugin):
                 self.diagram.set_plugin(stmt.name, stmt.attrs)
 
@@ -52,12 +61,19 @@
 
                     splitted = field.duplicate()
                     splitted.colwidth = colwidth
-                    splitted.separated_right = True
+                    if self.diagram.scale_direction == "left_to_right":
+                        splitted.separated_right = True
+                    else:
+                        splitted.separated_left = True
+
                     self.diagram.fields.append(splitted)
 
                     field.number += colwidth
                     field.colwidth -= colwidth
-                    field.separated_left = True
+                    if self.diagram.scale_direction == "left_to_right":
+                        field.separated_left = True
+                    else:
+                        field.separated_right = True
 
             yield field
 
@@ -77,6 +93,9 @@
                     raise AttributeError(msg)
                 filled[y][rx] = True
 
+            if self.diagram.scale_direction == "right_to_left":
+                x = self.diagram.colwidth - x - field.colwidth
+
             field.xy = XY(x, y)
 
         self.diagram.fixiate()
diff -uNr nwdiag-0.9.4/src/packetdiag/drawer.py nwdiag-tip/src/packetdiag/drawer.py
--- nwdiag-0.9.4/src/packetdiag/drawer.py	2012-11-23 00:07:06.000000000 +0900
+++ nwdiag-tip/src/packetdiag/drawer.py	2013-03-06 04:38:16.000000000 +0900
@@ -24,13 +24,23 @@
     def _draw_background(self):
         # do not call blockdiag.DiagramDraw#_draw_background()
 
+        scale_interval = self.diagram.scale_interval
+        if scale_interval is None:
+            scale_interval = self.diagram.colwidth / 2
+
         # draw measure lines and labels
         font = self.metrics.font_for(None)
         for i in range(self.diagram.colwidth + 1):
             line = self.metrics.measure_line(i)
             self.drawer.line(line, fill=self.diagram.linecolor)
 
-            if (i == 0) or (i * 2.0 % self.diagram.colwidth == 0):
+            if (i % scale_interval) == 0:
                 box = self.metrics.measure_label(i)
-                self.drawer.textarea(box, unicode(i), font,
+
+                if self.diagram.scale_direction == "left_to_right":
+                    label = unicode(i)
+                else:
+                    label = unicode(self.diagram.colwidth - i)
+
+                self.drawer.textarea(box, label, font,
                                      fill=self.diagram.textcolor)
diff -uNr nwdiag-0.9.4/src/packetdiag/elements.py nwdiag-tip/src/packetdiag/elements.py
--- nwdiag-0.9.4/src/packetdiag/elements.py	2012-11-17 21:36:02.000000000 +0900
+++ nwdiag-tip/src/packetdiag/elements.py	2013-03-06 04:38:16.000000000 +0900
@@ -29,22 +29,29 @@
         self.separated_right = False
         self.separated_left = False
 
-        matched = re.match('^(\d+)-(\d+)$', number)
-        if matched:
-            self.number = int(matched.group(1))
-            self.colwidth = int(matched.group(2)) - self.number + 1
-
-            if self.colwidth <= 0:
-                msg = ("Invalid field size definition: %s: %s\n" %
-                       (number, label))
-                raise AttributeError(msg)
-        else:
-            self.number = int(number)
+        if number is None:
+            self.number = None
             self.colwidth = 1
+        else:
+            matched = re.match('^(\d+)-(\d+)$', number)
+            if matched:
+                self.number = int(matched.group(1))
+                self.colwidth = int(matched.group(2)) - self.number + 1
+
+                if self.colwidth <= 0:
+                    msg = ("Invalid field size definition: %s: %s\n" %
+                           (number, label))
+                    raise AttributeError(msg)
+            else:
+                self.number = int(number)
+                self.colwidth = 1
 
     def set_height(self, value):
         self.colheight = int(value)
 
+    def set_len(self, value):
+        self.colwidth = int(value)
+
 
 class Diagram(blockdiag.elements.Diagram):
     _DiagramNode = FieldItem
@@ -52,7 +59,21 @@
     def __init__(self):
         super(Diagram, self).__init__()
         self.colwidth = 16
+        self.scale_interval = None
+        self.scale_direction = "left_to_right"
+
+        self.int_attrs.append('scale_interval')
 
     @property
     def fields(self):
         return self.nodes
+
+    def set_scale_direction(self, value):
+        value = value.lower()
+        if value in ('ltr', 'left_to_right'):
+            self.scale_direction = 'left_to_right'
+        elif value in ('rtl', 'right_to_left'):
+            self.scale_direction = 'right_to_left'
+        else:
+            msg = "WARNING: unknown scale_direction: %s\n" % value
+            raise AttributeError(msg)
diff -uNr nwdiag-0.9.4/src/packetdiag/metrics.py nwdiag-tip/src/packetdiag/metrics.py
--- nwdiag-0.9.4/src/packetdiag/metrics.py	2012-11-17 18:19:38.000000000 +0900
+++ nwdiag-tip/src/packetdiag/metrics.py	2013-03-06 04:38:16.000000000 +0900
@@ -42,7 +42,7 @@
         if n == self.colwidth:
             node = _Node(XY(n - 1, 0))
             pt = self.spreadsheet._node_topleft(node, use_padding=False)
-            pt.x += self.node_width
+            pt = pt.shift(x=self.node_width)
         else:
             node = _Node(XY(n, 0))
             pt = self.spreadsheet._node_topleft(node, use_padding=False)
diff -uNr nwdiag-0.9.4/src/packetdiag/parser.py nwdiag-tip/src/packetdiag/parser.py
--- nwdiag-0.9.4/src/packetdiag/parser.py	2012-11-17 18:20:03.000000000 +0900
+++ nwdiag-tip/src/packetdiag/parser.py	2013-03-06 04:38:16.000000000 +0900
@@ -40,7 +40,7 @@
 from re import MULTILINE, DOTALL
 from funcparserlib.lexer import make_tokenizer, Token, LexerError
 from funcparserlib.parser import (some, a, maybe, many, finished, skip)
-from blockdiag.utils.namedtuple import namedtuple
+from blockdiag.utils.collections import namedtuple
 
 ENCODING = 'utf-8'
 
@@ -65,6 +65,7 @@
         ('DefLabel', (r':[^\r\n\[]+',)),
         ('Range',  (r'[0-9]+-[0-9]+',)),
         ('Number',  (r'[0-9]+',)),
+        ('FieldListItem', (r'[\*\-]\s*[^\r\n\[]+',)),
         ('Name',    (ur'[A-Za-z_0-9\u0080-\uffff]'
                      ur'[A-Za-z_\-.0-9\u0080-\uffff]*',)),
         ('Op',      (r'[{}:;,=\[\]]',)),
@@ -87,11 +88,15 @@
                ).named('id') >> tokval
     number = some(lambda t: t.type == 'Number').named('number') >> tokval
     _range = some(lambda t: t.type == 'Range').named('range') >> tokval
+    field_list_item = some(lambda t: t.type == 'FieldListItem'
+                           ).named('itemize') >> tokval
     deflabel = some(lambda t: t.type == 'DefLabel').named('deflabel') >> tokval
 
     field_label = lambda text: re.sub("^:\s*(.*?)\s*;?$", "\\1", text)
     make_field_item = (lambda no, text, attr:
                        FieldItem(no, field_label(text), attr))
+    make_field_list_item = (lambda text, attr:
+                            FieldItem(None, re.sub("^.\s*", "", text), attr))
 
     a_list = (
         _id +
@@ -101,11 +106,19 @@
     attr_list = (
         many(op_('[') + many(a_list) + op_(']'))
         >> flatten)
-    field_item_stmt = (
+    numbered_field_item_stmt = (
         (number | _range) +
         deflabel +
         attr_list
         >> unarg(make_field_item))
+    nonnumbered_field_item_stmt = (
+        field_list_item +
+        attr_list
+        >> unarg(make_field_list_item))
+    field_item_stmt = (
+        numbered_field_item_stmt
+        | nonnumbered_field_item_stmt
+    )
 
     # plugin definition
     plugin_stmt = (
diff -uNr nwdiag-0.9.4/src/packetdiag/tests/diagrams/scale_direction.diag nwdiag-tip/src/packetdiag/tests/diagrams/scale_direction.diag
--- nwdiag-0.9.4/src/packetdiag/tests/diagrams/scale_direction.diag	1970-01-01 09:00:00.000000000 +0900
+++ nwdiag-tip/src/packetdiag/tests/diagrams/scale_direction.diag	2013-03-06 04:38:16.000000000 +0900
@@ -0,0 +1,10 @@
+{
+  scale_direction = rtl;
+
+  0-3: Source Port
+  4-7: Destination Port
+  8-11: Sequence Number
+  12-15: Acknowledgment Number
+  16-19: Data Offset
+  20-27: Reserved
+}
diff -uNr nwdiag-0.9.4/src/packetdiag/tests/diagrams/scale_interval.diag nwdiag-tip/src/packetdiag/tests/diagrams/scale_interval.diag
--- nwdiag-0.9.4/src/packetdiag/tests/diagrams/scale_interval.diag	1970-01-01 09:00:00.000000000 +0900
+++ nwdiag-tip/src/packetdiag/tests/diagrams/scale_interval.diag	2013-03-06 04:38:16.000000000 +0900
@@ -0,0 +1,10 @@
+{
+  scale_interval = 2;
+
+  0-3: Source Port
+  4-7: Destination Port
+  8-11: Sequence Number
+  12-15: Acknowledgment Number
+  16-19: Data Offset
+  20-27: Reserved
+}
diff -uNr nwdiag-0.9.4/src/packetdiag/tests/diagrams/tcp.diag nwdiag-tip/src/packetdiag/tests/diagrams/tcp.diag
--- nwdiag-0.9.4/src/packetdiag/tests/diagrams/tcp.diag	1970-01-01 09:00:00.000000000 +0900
+++ nwdiag-tip/src/packetdiag/tests/diagrams/tcp.diag	2013-03-06 04:38:16.000000000 +0900
@@ -0,0 +1,22 @@
+{
+  colwidth = 32
+  node_height = 72
+
+  0-15: Source Port
+  16-31: Destination Port
+  32-63: Sequence Number
+  64-95: Acknowledgment Number
+  96-99: Data Offset
+  100-105: Reserved
+  106: URG [rotate = 270]
+  107: ACK [rotate = 270]
+  108: PSH [rotate = 270]
+  109: RST [rotate = 270]
+  110: SYN [rotate = 270]
+  111: FIN [rotate = 270]
+  112-127: Window
+  128-143: Checksum
+  144-159: Urgent Pointer
+  160-191: (Options and Padding)
+  192-223: data [colheight = 3]
+}
diff -uNr nwdiag-0.9.4/src/packetdiag/tests/diagrams/tcp_2.diag nwdiag-tip/src/packetdiag/tests/diagrams/tcp_2.diag
--- nwdiag-0.9.4/src/packetdiag/tests/diagrams/tcp_2.diag	1970-01-01 09:00:00.000000000 +0900
+++ nwdiag-tip/src/packetdiag/tests/diagrams/tcp_2.diag	2013-03-06 04:38:16.000000000 +0900
@@ -0,0 +1,21 @@
+{
+  colwidth = 32
+
+  * Source Port [len = 16]
+  * Destination Port [len = 16]
+  * Sequence Number [len = 32]
+  * Acknowledgement Number [len = 32]
+  * Data Offset [len = 4]
+  * Reserved [len = 6]
+  * URG [rotate = 270]
+  * ACK [rotate = 270]
+  * PSH [rotate = 270]
+  * RST [rotate = 270]
+  * SYN [rotate = 270]
+  * FIN [rotate = 270]
+  * Window [len = 16]
+  * Checksum [len = 16]
+  * Urgent Pointer [len = 16]
+  * (Options and Padding) [len = 32]
+  * data [len = 32, height = 3]
+}
diff -uNr nwdiag-0.9.4/src/rackdiag/parser.py nwdiag-tip/src/rackdiag/parser.py
--- nwdiag-0.9.4/src/rackdiag/parser.py	2012-11-17 18:37:40.000000000 +0900
+++ nwdiag-tip/src/rackdiag/parser.py	2013-03-06 04:38:16.000000000 +0900
@@ -40,7 +40,7 @@
 from re import MULTILINE, DOTALL
 from funcparserlib.lexer import make_tokenizer, Token, LexerError
 from funcparserlib.parser import (some, a, maybe, many, finished, skip)
-from blockdiag.utils.namedtuple import namedtuple
+from blockdiag.utils.collections import namedtuple
 
 ENCODING = 'utf-8'
 
diff -uNr nwdiag-0.9.4/src/rackdiag/tests/diagrams/autonumber.diag nwdiag-tip/src/rackdiag/tests/diagrams/autonumber.diag
--- nwdiag-0.9.4/src/rackdiag/tests/diagrams/autonumber.diag	1970-01-01 09:00:00.000000000 +0900
+++ nwdiag-tip/src/rackdiag/tests/diagrams/autonumber.diag	2013-03-06 04:38:16.000000000 +0900
@@ -0,0 +1,6 @@
+{
+  * server 1
+  * server 2
+  * server 3 [2U];
+  * server 4
+}
diff -uNr nwdiag-0.9.4/src/rackdiag/tests/diagrams/multi_rackitem.diag nwdiag-tip/src/rackdiag/tests/diagrams/multi_rackitem.diag
--- nwdiag-0.9.4/src/rackdiag/tests/diagrams/multi_rackitem.diag	1970-01-01 09:00:00.000000000 +0900
+++ nwdiag-tip/src/rackdiag/tests/diagrams/multi_rackitem.diag	2013-03-06 04:38:16.000000000 +0900
@@ -0,0 +1,15 @@
+{
+  rackheight = 12;
+
+  1: UPS 1[3U];
+  1: UPS 2[3U];
+  4: server 1;
+  4: server 2 [2U];
+  5: server 3 [2U];
+  6: server 4 [2U];
+  6: server 5 [2U];
+  6: server 6 [2U];
+  8: server 7 [3U];
+  9: server 8;
+  9: server 9;
+}
diff -uNr nwdiag-0.9.4/src/rackdiag/tests/diagrams/multi_racks.diag nwdiag-tip/src/rackdiag/tests/diagrams/multi_racks.diag
--- nwdiag-0.9.4/src/rackdiag/tests/diagrams/multi_racks.diag	1970-01-01 09:00:00.000000000 +0900
+++ nwdiag-tip/src/rackdiag/tests/diagrams/multi_racks.diag	2013-03-06 04:38:16.000000000 +0900
@@ -0,0 +1,15 @@
+{
+  rack {
+    * server 1;
+    * server 2;
+    * server 3;
+    * server 4;
+  }
+
+  rack {
+    * server 5;
+    * server 6;
+    * server 7;
+    * server 8;
+  }
+}
diff -uNr nwdiag-0.9.4/src/rackdiag/tests/diagrams/simple.diag nwdiag-tip/src/rackdiag/tests/diagrams/simple.diag
--- nwdiag-0.9.4/src/rackdiag/tests/diagrams/simple.diag	1970-01-01 09:00:00.000000000 +0900
+++ nwdiag-tip/src/rackdiag/tests/diagrams/simple.diag	2013-03-06 04:38:16.000000000 +0900
@@ -0,0 +1,6 @@
+{
+  1: server 1
+  2: server 2
+  3: server 3
+  4: server 4
+}
