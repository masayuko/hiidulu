diff -uNr VirtualBox-6.1.4.orig/Config.kmk VirtualBox-6.1.4/Config.kmk
--- VirtualBox-6.1.4.orig/Config.kmk	2020-02-19 02:10:41.000000000 +0900
+++ VirtualBox-6.1.4/Config.kmk	2020-03-26 17:09:46.040690623 +0900
@@ -728,7 +728,7 @@
 # Enable SEE (+ AVX) optimizations for Opus.
 VBOX_WITH_OPUS_SSE = 1
 # Enable shared folders
-VBOX_WITH_SHARED_FOLDERS = 1
+#VBOX_WITH_SHARED_FOLDERS = 1
 # Enable shared clipboard
 VBOX_WITH_SHARED_CLIPBOARD = 1
 # Enable shared clipboard (file) transfers
diff -uNr VirtualBox-6.1.4.orig/src/VBox/Additions/linux/Makefile VirtualBox-6.1.4/src/VBox/Additions/linux/Makefile
--- VirtualBox-6.1.4.orig/src/VBox/Additions/linux/Makefile	2020-02-19 02:13:05.000000000 +0900
+++ VirtualBox-6.1.4/src/VBox/Additions/linux/Makefile	2020-03-26 17:01:45.960181207 +0900
@@ -19,7 +19,7 @@
 # Building from kBuild (make -C <kernel_directory> M=`pwd`)
 # or inside a kernel source tree.
 
-obj-m = vboxguest/ vboxsf/ vboxvideo/
+obj-m = vboxguest/ vboxvideo/
 
 else # ! KERNELRELEASE
 
@@ -32,7 +32,7 @@
 VBOX_QUIET_SH := set -x;
  endif
 
-all: vboxguest vboxsf vboxvideo
+all: vboxguest vboxvideo
 
 vboxguest:
 	@echo "=== Building 'vboxguest' module ==="
@@ -44,21 +44,6 @@
 	 fi
 	@echo
 
-vboxsf: vboxguest
-	$(VBOX_QUIET_SH)if [ -d vboxsf ]; then \
-	    if [ -f vboxguest/Module.symvers ]; then \
-	        cp vboxguest/Module.symvers vboxsf; \
-	    fi; \
-	    echo "=== Building 'vboxsf' module ==="; \
-	    $(MAKE) KBUILD_VERBOSE=$(KBUILD_VERBOSE) KBUILD_EXTRA_SYMBOLS=$(abspath vboxsf/Module.symvers) -C vboxsf || exit 1; \
-	    if [ -f vboxsf/vboxsf.ko ]; then \
-	        cp vboxsf/vboxsf.ko .; \
-	    else \
-	        cp vboxsf/vboxsf.o .; \
-	    fi; \
-	    echo; \
-	fi
-
 vboxvideo:
 	$(VBOX_QUIET_SH)if [ -d vboxvideo ]; then \
 	    if [ -f vboxguest/Module.symvers ]; then \
@@ -76,22 +61,16 @@
 
 install:
 	$(VBOX_QUIET)$(MAKE) KBUILD_VERBOSE=$(KBUILD_VERBOSE) -C vboxguest install
-	$(VBOX_QUIET_SH)if [ -d vboxsf ]; then \
-	    $(MAKE) KBUILD_VERBOSE=$(KBUILD_VERBOSE) -C vboxsf install; \
-	fi
 	$(VBOX_QUIET_SH)if [ -d vboxvideo ]; then \
 	    $(MAKE) KBUILD_VERBOSE=$(KBUILD_VERBOSE) -C vboxvideo install; \
 	fi
 
 clean:
 	$(VBOX_QUIET)$(MAKE) -C vboxguest clean
-	$(VBOX_QUIET_SH)if [ -d vboxsf ]; then \
-	    $(MAKE) -C vboxsf clean; \
-	fi
 	$(VBOX_QUIET_SH)if [ -d vboxvideo ]; then \
 	    $(MAKE) -C vboxvideo clean; \
 	fi
-	rm -f vboxguest.*o vboxsf.*o vboxvideo.*o
+	rm -f vboxguest.*o vboxvideo.*o
 
 check:
 	$(VBOX_QUIET)$(MAKE) KBUILD_VERBOSE=$(KBUILD_VERBOSE) -C vboxguest check
@@ -99,12 +78,10 @@
 load:
 	$(VBOX_QUIET)/sbin/rmmod vboxvideo || true
 	$(VBOX_QUIET)/sbin/rmmod vboxvfs || true
-	$(VBOX_QUIET)/sbin/rmmod vboxsf || true
 	$(VBOX_QUIET)/sbin/rmmod vboxguest || true
 	$(VBOX_QUIET)/sbin/insmod vboxguest.ko
-	$(VBOX_QUIET)if [ -f vboxsf.ko ]; then /sbin/insmod vboxsf.ko; fi
 	$(VBOX_QUIET)if [ -f vboxvideo.ko ]; then /sbin/insmod vboxvideo.ko; fi
 
-.PHONY: vboxguest vboxsf vboxvideo all install clean check load
+.PHONY: vboxguest vboxvideo all install clean check load
 
 endif # ! KERNELRELEASE
diff -uNr VirtualBox-6.1.4.orig/src/VBox/Additions/linux/Makefile.kmk VirtualBox-6.1.4/src/VBox/Additions/linux/Makefile.kmk
--- VirtualBox-6.1.4.orig/src/VBox/Additions/linux/Makefile.kmk	2020-02-19 02:13:05.000000000 +0900
+++ VirtualBox-6.1.4/src/VBox/Additions/linux/Makefile.kmk	2020-03-26 17:01:45.961181208 +0900
@@ -21,7 +21,6 @@
 #
 # Include sub-makefiles.
 #
-include $(PATH_SUB_CURRENT)/sharedfolders/Makefile.kmk
 include $(PATH_SUB_CURRENT)/drm/Makefile.kmk
 ifdef VBOX_WITH_LIGHTDM_GREETER
  include $(PATH_SUB_CURRENT)/lightdm-greeter/Makefile.kmk
@@ -128,8 +127,7 @@
 	vboxmouse_drv_15.so \
 	vboxmouse_drv_16.so \
 	$(addsuffix .so,$(filter-out %_32,$(filter vboxvideo_drv_%,$(DLLS)))) \
-	$(if $(VBOX_WITH_PAM),pam_vbox.so,) \
-	mount.vboxsf
+	$(if $(VBOX_WITH_PAM),pam_vbox.so,)
 
 VBOX_LNX_ADD_MOD = \
 	98vboxadd-xclient \
@@ -250,8 +248,6 @@
 
 include $(PATH_ROOT)/src/VBox/Additions/common/VBoxGuest/linux/files_vboxguest
 VBOX_LNX_ADD_INST_FILES_VBOXGUEST=$(patsubst =>%,$(PATH_STAGE_BIN)/additions/src/vboxguest/%,$(filter =>%,$(subst =>, =>,$(subst $(DQUOTE),,$(FILES_VBOXGUEST_NOBIN)))))
-include $(PATH_ROOT)/src/VBox/Additions/linux/sharedfolders/files_vboxsf
-VBOX_LNX_ADD_INST_FILES_VBOXSF=$(patsubst =>%,$(PATH_STAGE_BIN)/additions/src/vboxsf/%,$(filter =>%,$(subst =>, =>,$(subst $(DQUOTE),,$(FILES_VBOXSF_NOBIN)))))
 include $(PATH_ROOT)/src/VBox/Additions/linux/drm/files_vboxvideo_drv
 VBOX_LNX_ADD_INST_FILES_VBOXVIDEO=$(patsubst =>%,$(PATH_STAGE_BIN)/additions/src/vboxvideo/%,$(filter =>%,$(subst =>, =>,$(subst $(DQUOTE),,$(FILES_VBOXVIDEO_DRM_NOBIN)))))
 
@@ -363,7 +359,6 @@
 	$(VBOX_LNX_ADD_INST_DEP_ON_MAKEFILE) \
 	$(VBOX_VERSION_STAMP) \
 	$(VBOX_LNX_ADD_INST_FILES_VBOXGUEST) \
-	$(VBOX_LNX_ADD_INST_FILES_VBOXSF) \
 	$(VBOX_LNX_ADD_INST_FILES_VBOXVIDEO)
 
 #
diff -uNr VirtualBox-6.1.4.orig/src/VBox/Additions/linux/export_modules.sh VirtualBox-6.1.4/src/VBox/Additions/linux/export_modules.sh
--- VirtualBox-6.1.4.orig/src/VBox/Additions/linux/export_modules.sh	2020-02-19 02:13:05.000000000 +0900
+++ VirtualBox-6.1.4/src/VBox/Additions/linux/export_modules.sh	2020-03-26 17:01:45.962181209 +0900
@@ -40,7 +40,6 @@
 PATH_LOG=/tmp/vbox-export-guest.log
 PATH_LINUX="$PATH_ROOT/src/VBox/Additions/linux"
 PATH_VBOXGUEST="$PATH_ROOT/src/VBox/Additions/common/VBoxGuest"
-PATH_VBOXSF="$PATH_ROOT/src/VBox/Additions/linux/sharedfolders"
 PATH_VBOXVIDEO="$PATH_ROOT/src/VBox/Additions/linux/drm"
 
 VBOX_VERSION_MAJOR=`sed -e "s/^ *VBOX_VERSION_MAJOR *= \+\([0-9]\+\)/\1/;t;d" $PATH_ROOT/Version.kmk`
@@ -59,7 +58,6 @@
 VBOX_C_YEAR=`date +%Y`
 
 . $PATH_VBOXGUEST/linux/files_vboxguest
-. $PATH_VBOXSF/files_vboxsf
 . $PATH_VBOXVIDEO/files_vboxvideo_drv
 
 # Temporary path for creating the modules, will be removed later
@@ -108,15 +106,6 @@
     install -D -m 0755 `echo $f|cut -d'=' -f1` "$PATH_OUT/vboxguest/`echo $f|cut -d'>' -f2`"
 done
 
-# vboxsf (VirtualBox guest kernel module for shared folders)
-mkdir $PATH_OUT/vboxsf || exit 1
-for f in $FILES_VBOXSF_NOBIN; do
-    install -D -m 0644 `echo $f|cut -d'=' -f1` "$PATH_OUT/vboxsf/`echo $f|cut -d'>' -f2`"
-done
-for f in $FILES_VBOXSF_BIN; do
-    install -D -m 0755 `echo $f|cut -d'=' -f1` "$PATH_OUT/vboxsf/`echo $f|cut -d'>' -f2`"
-done
-
 # vboxvideo (VirtualBox guest kernel module for drm support)
 mkdir $PATH_OUT/vboxvideo || exit 1
 for f in $FILES_VBOXVIDEO_DRM_NOBIN; do
diff -uNr VirtualBox-6.1.4.orig/src/VBox/Additions/linux/installer/deffiles VirtualBox-6.1.4/src/VBox/Additions/linux/installer/deffiles
--- VirtualBox-6.1.4.orig/src/VBox/Additions/linux/installer/deffiles	2020-02-19 02:13:05.000000000 +0900
+++ VirtualBox-6.1.4/src/VBox/Additions/linux/installer/deffiles	2020-03-26 17:01:45.963181210 +0900
@@ -30,7 +30,6 @@
     /usr/sbin/vboxadd-timesync \
     /usr/sbin/vboxadd-service \
     /usr/sbin/VBoxService \
-    /sbin/mount.vboxsf \
     /usr/share/xgreeters/vbox-greeter.desktop \
     /etc/X11/Xsession.d/98vboxadd-xclient \
     /etc/X11/xinit.d/98vboxadd-xclient \
@@ -64,7 +63,6 @@
     /usr/src/vboxadd \
     /usr/src/vboxguest \
     /usr/src/vboxvfs \
-    /usr/src/vboxsf \
     /usr/src/vboxvideo \
 "
 
diff -uNr VirtualBox-6.1.4.orig/src/VBox/Additions/linux/installer/vboxadd.sh VirtualBox-6.1.4/src/VBox/Additions/linux/installer/vboxadd.sh
--- VirtualBox-6.1.4.orig/src/VBox/Additions/linux/installer/vboxadd.sh	2020-02-19 02:13:05.000000000 +0900
+++ VirtualBox-6.1.4/src/VBox/Additions/linux/installer/vboxadd.sh	2020-03-26 17:01:45.964181211 +0900
@@ -54,7 +54,7 @@
 PATH=$PATH:/bin:/sbin:/usr/sbin
 PACKAGE=VBoxGuestAdditions
 MODPROBE=/sbin/modprobe
-OLDMODULES="vboxguest vboxadd vboxsf vboxvfs vboxvideo"
+OLDMODULES="vboxguest vboxadd vboxvfs vboxvideo"
 SERVICE="VirtualBox Guest Additions"
 ## systemd logs information about service status, otherwise do that ourselves.
 QUIET=
@@ -145,11 +145,6 @@
     lsmod | grep -q "vboxadd[^_-]"
 }
 
-running_vboxsf()
-{
-    lsmod | grep -q "vboxsf[^_-]"
-}
-
 running_vboxvideo()
 {
     lsmod | grep -q "vboxvideo[^_-]"
@@ -294,15 +289,6 @@
             info "Look at $LOG to find out what went wrong"
         return 0
     fi
-    log "Building the shared folder support module."
-    if ! myerr=`$BUILDINTMP \
-        --use-module-symvers /tmp/vboxguest-Module.symvers \
-        --module-source $MODULE_SRC/vboxsf \
-        --no-print-directory install 2>&1`; then
-        module_build_log "$myerr"
-        info  "Look at $LOG to find out what went wrong"
-        return 0
-    fi
     log "Building the graphics driver module."
     if ! myerr=`$BUILDINTMP \
         --use-module-symvers /tmp/vboxguest-Module.symvers \
@@ -313,7 +299,6 @@
     fi
     [ -d /etc/depmod.d ] || mkdir /etc/depmod.d
     echo "override vboxguest * misc" > /etc/depmod.d/vboxvideo-upstream.conf
-    echo "override vboxsf * misc" >> /etc/depmod.d/vboxvideo-upstream.conf
     echo "override vboxvideo * misc" >> /etc/depmod.d/vboxvideo-upstream.conf
     update_initramfs "${KERN_VER}"
     return 0
@@ -381,28 +366,6 @@
     chmod 0755 /etc/kernel/postinst.d/vboxadd /etc/kernel/prerm.d/vboxadd
 }
 
-shared_folder_setup()
-{
-    # Add a group "vboxsf" for Shared Folders access
-    # All users which want to access the auto-mounted Shared Folders have to
-    # be added to this group.
-    groupadd -r -f vboxsf >/dev/null 2>&1
-
-    # Put the mount.vboxsf mount helper in the right place.
-    ## @todo It would be nicer if the kernel module just parsed parameters
-    # itself instead of needing a separate binary to do that.
-    ln -sf "${INSTALL_DIR}/other/mount.vboxsf" /sbin
-    # SELinux security context for the mount helper.
-    if test -e /etc/selinux/config; then
-        # This is correct.  semanage maps this to the real path, and it aborts
-        # with an error, telling you what you should have typed, if you specify
-        # the real path.  The "chcon" is there as a back-up for old guests.
-        command -v semanage > /dev/null &&
-            semanage fcontext -a -t mount_exec_t "${INSTALL_DIR}/other/mount.vboxsf"
-        chcon -t mount_exec_t "${INSTALL_DIR}/other/mount.vboxsf" 2>/dev/null
-    fi
-}
-
 # setup_script
 setup()
 {
@@ -428,7 +391,6 @@
     create_vbox_user
     create_udev_rule
     test -n "${INSTALL_NO_MODULE_BUILDS}" || create_module_rebuild_script
-    shared_folder_setup
     if  running_vboxguest || running_vboxadd; then
         info "Running kernel modules will not be replaced until the system is restarted"
     fi
@@ -463,7 +425,6 @@
         rm -f /etc/kernel/postinst.d/vboxadd /etc/kernel/prerm.d/vboxadd
         rmdir -p /etc/kernel/postinst.d /etc/kernel/prerm.d 2>/dev/null || true
     fi
-    rm -f /sbin/mount.vboxsf 2>/dev/null
     rm -f /etc/udev/rules.d/60-vboxadd.rules 2>/dev/null
     udevadm control --reload >/dev/null 2>&1 || true
     udevcontrol reload_rules >/dev/null 2>&1 || true
@@ -499,8 +460,6 @@
             case "$no_udev" in 1)
                 sleep .5;;
             esac
-            $MODPROBE vboxsf > /dev/null 2>&1 ||
-                info "modprobe vboxsf failed"
         }
         case "$no_udev" in 1)
             do_vboxguest_non_udev;;
@@ -526,11 +485,6 @@
         rm /etc/ld.so.conf.d/00vboxvideo.conf
         ldconfig
     fi
-    if ! umount -a -t vboxsf 2>/dev/null; then
-        # Make sure we only fail, if there are truly no more vboxsf
-        # mounts in the system.
-        [ -n "$(findmnt -t vboxsf)" ] && fail "Cannot unmount vboxsf folders"
-    fi
     test -n "${INSTALL_NO_MODULE_BUILDS}" ||
         info "You may need to restart your guest system to finish removing guest drivers."
     return 0
