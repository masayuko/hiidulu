diff --git a/src/base/system_util.cc b/src/base/system_util.cc
index 6d84b55..dcc4bfb 100644
--- a/src/base/system_util.cc
+++ b/src/base/system_util.cc
@@ -211,6 +211,7 @@ UserProfileDirectoryImpl::UserProfileDirectoryImpl() {
   dir_ = "/mutable";
   return;
 #else  // OS_NACL || OS_CHROMEOS
+  const char *configuration_directory_env;
   std::string dir;
 
 #ifdef OS_IOS
@@ -223,25 +224,35 @@ UserProfileDirectoryImpl::UserProfileDirectoryImpl() {
   dir = FileUtil::JoinPath({MacUtil::GetCachesDirectory(), kProductPrefix});
 
 #elif defined(OS_WIN)
-  DCHECK(SUCCEEDED(Singleton<LocalAppDataDirectoryCache>::get()->result()));
-  dir = Singleton<LocalAppDataDirectoryCache>::get()->path();
+  configuration_directory_env = ::getenv("MOZC_CONFIGURATION_DIRECTORY");
+  if (configuration_directory_env) {
+    dir = configuration_directory_env;
+  } else {
+    DCHECK(SUCCEEDED(Singleton<LocalAppDataDirectoryCache>::get()->result()));
+    dir = Singleton<LocalAppDataDirectoryCache>::get()->path();
 #ifdef GOOGLE_JAPANESE_INPUT_BUILD
-  dir = FileUtil::JoinPath(dir, kCompanyNameInEnglish);
-  FileUtil::CreateDirectory(dir);
+    dir = FileUtil::JoinPath(dir, kCompanyNameInEnglish);
+    FileUtil::CreateDirectory(dir);
 #endif  // GOOGLE_JAPANESE_INPUT_BUILD
-  dir = FileUtil::JoinPath(dir, kProductNameInEnglish);
+    dir = FileUtil::JoinPath(dir, kProductNameInEnglish);
+  }
 
 #elif defined(__APPLE__)
-  dir = MacUtil::GetApplicationSupportDirectory();
+  configuration_directory_env = ::getenv("MOZC_CONFIGURATION_DIRECTORY");
+  if (configuration_directory_env) {
+    dir = configuration_directory_env;
+  } else {
+    dir = MacUtil::GetApplicationSupportDirectory();
 #ifdef GOOGLE_JAPANESE_INPUT_BUILD
-  dir = FileUtil::JoinPath(dir, "Google");
-  // The permission of ~/Library/Application Support/Google seems to be 0755.
-  // TODO(komatsu): nice to make a wrapper function.
-  ::mkdir(dir.c_str(), 0755);
-  dir = FileUtil::JoinPath(dir, "JapaneseInput");
+    dir = FileUtil::JoinPath(dir, "Google");
+    // The permission of ~/Library/Application Support/Google seems to be 0755.
+    // TODO(komatsu): nice to make a wrapper function.
+    ::mkdir(dir.c_str(), 0755);
+    dir = FileUtil::JoinPath(dir, "JapaneseInput");
 #else   //  GOOGLE_JAPANESE_INPUT_BUILD
-  dir = FileUtil::JoinPath(dir, "Mozc");
+    dir = FileUtil::JoinPath(dir, "Mozc");
 #endif  //  GOOGLE_JAPANESE_INPUT_BUILD
+  }
 
 #elif defined(OS_WASM)
   // Do nothing for WebAssembly.
@@ -252,14 +263,24 @@ UserProfileDirectoryImpl::UserProfileDirectoryImpl() {
   // is injected from Java layer.
 
 #else   // !OS_IOS && !OS_WIN && !__APPLE__ && !OS_ANDROID
-  char buf[1024];
-  struct passwd pw, *ppw;
-  const uid_t uid = geteuid();
-  CHECK_EQ(0, getpwuid_r(uid, &pw, buf, sizeof(buf), &ppw))
-      << "Can't get passwd entry for uid " << uid << ".";
-  CHECK_LT(0, strlen(pw.pw_dir))
-      << "Home directory for uid " << uid << " is not set.";
-  dir = FileUtil::JoinPath(pw.pw_dir, ".mozc");
+  configuration_directory_env = ::getenv("MOZC_CONFIGURATION_DIRECTORY");
+  if (configuration_directory_env) {
+    dir = configuration_directory_env;
+  } else {
+    const char *home_env = ::getenv("HOME");
+    if (home_env) {
+      dir = FileUtil::JoinPath(home_env, ".mozc");
+    } else {
+      char buf[1024];
+      struct passwd pw, *ppw;
+      const uid_t uid = geteuid();
+      CHECK_EQ(0, getpwuid_r(uid, &pw, buf, sizeof(buf), &ppw))
+          << "Can't get passwd entry for uid " << uid << ".";
+      CHECK_LT(0, strlen(pw.pw_dir))
+          << "Home directory for uid " << uid << " is not set.";
+      dir = FileUtil::JoinPath(pw.pw_dir, ".mozc");
+    }
+  }
 #endif  // !OS_IOS && !OS_WIN && !__APPLE__ && !OS_ANDROID
 
   FileUtil::CreateDirectory(dir);
@@ -365,6 +386,10 @@ class ProgramFilesX86Cache {
 #endif  // OS_WIN
 
 std::string SystemUtil::GetServerDirectory() {
+  const char *server_directory_env = ::getenv("MOZC_SERVER_DIRECTORY");
+  if (server_directory_env) {
+    return server_directory_env;
+  }
 #ifdef OS_WIN
   DCHECK(SUCCEEDED(Singleton<ProgramFilesX86Cache>::get()->result()));
 #if defined(GOOGLE_JAPANESE_INPUT_BUILD)
@@ -419,6 +444,10 @@ std::string SystemUtil::GetToolPath() {
 }
 
 std::string SystemUtil::GetDocumentDirectory() {
+  const char *documents_directory_env = ::getenv("MOZC_DOCUMENTS_DIRECTORY");
+  if (documents_directory_env) {
+    return documents_directory_env;
+  }
 #if defined(__APPLE__)
   return GetServerDirectory();
 #elif defined(MOZC_DOCUMENT_DIRECTORY)
